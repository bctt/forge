@use './core' as *;
@use './animations';
@use '../overlay';

//
// Host
//

:host {
  display: contents;
}

:host([hidden]) {
  display: none;
}

//
// Base
// 

.forge-popover {
  @include tokens;

  #{declare(arrow-translate-x)}: 0;
  #{declare(arrow-translate-y)}: 0;
  #{declare(arrow-rotation)}: 0;

  --_popover-slidein-x: 0;
  --_popover-slidein-y: 0;

  --_popover-zoomin-origin: 50% 50% 0;
}

.forge-popover {
  @include base;
}

//
// Dialog
//

// :host([dialog]) {
//   forge-overlay {
//     @include overlay.provide-theme((
//       backdrop-fade-duration: 1000ms
//     ));
//   }
// }

// :host([open][dialog][modal]) {
//   forge-overlay::part(container)::backdrop {
//     backdrop-filter: blur(1px);
//     background-color: rgba(0, 0, 0, 0.24);
//   }
// }

//
// Arrow
//

:host([arrow]) {
  .arrow {
    // @include configuration.arrow;
    @include arrow;
  }

  forge-overlay[position-placement^=top] {
    .arrow {
      --_popover-arrow-translate-y: calc(var(--_popover-border-width) * -1);
      --_popover-arrow-rotation: var(--_popover-arrow-top-rotation);
    }
  }
  
  forge-overlay[position-placement^=right] {
    .arrow {
      --_popover-arrow-translate-x: var(--_popover-border-width);
      --_popover-arrow-rotation: var(--_popover-arrow-right-rotation);
    }
  }
  
  forge-overlay[position-placement^=bottom] {
    .arrow {
      --_popover-arrow-translate-y: var(--_popover-border-width);
      --_popover-arrow-rotation: var(--_popover-arrow-bottom-rotation);
    }
  }
  
  forge-overlay[position-placement^=left] {
    .arrow {
      --_popover-arrow-translate-x: calc(var(--_popover-border-width) * -1);
      --_popover-arrow-rotation: var(--_popover-arrow-left-rotation);
    }
  }
}

//
// Animation
// 

:host(:not([animation-type=none])) {
  .forge-popover {
    // @include configuration.animation-base;
  }
}

:host(:not([animation-type])),
:host([animation-type=zoom]) {
  .forge-popover {
    // @include configuration.zoom;
    @include zoom-base;
  }

  forge-overlay[open] {
    &[position-placement^=top] {
      &:not([position-placement*='-']) {
        .forge-popover {
          --_popover-zoomin-origin: bottom center;
        }
      }

      &[position-placement$=-start] {
        .forge-popover {
          --_popover-zoomin-origin: bottom left;
        }
      }

      &[position-placement$=-end] {
        .forge-popover {
          --_popover-zoomin-origin: bottom right;
        }
      }
    }

    &[position-placement^=right] {
      &:not([position-placement*='-']) {
        .forge-popover {
          --_popover-zoomin-origin: left center;
        }
      }

      &[position-placement$=-start] {
        .forge-popover {
          --_popover-zoomin-origin: left top;
        }
      }

      &[position-placement$=-end] {
        .forge-popover {
          --_popover-zoomin-origin: left bottom;
        }
      }
    }

    &[position-placement^=bottom] {
      &:not([position-placement*='-']) {
        .forge-popover {
          --_popover-zoomin-origin: top center;
        }
      }

      &[position-placement$=-start] {
        .forge-popover {
          --_popover-zoomin-origin: top left;
        }
      }

      &[position-placement$=-end] {
        .forge-popover {
          --_popover-zoomin-origin: top right;
        }
      }
    }

    &[position-placement^=left] {
      &:not([position-placement*='-']) {
        .forge-popover {
          --_popover-zoomin-origin: right center;
        }
      }

      &[position-placement$=-start] {
        .forge-popover {
          --_popover-zoomin-origin: right top;
        }
      }

      &[position-placement$=-end] {
        .forge-popover {
          --_popover-zoomin-origin: right bottom;
        }
      }
    }
  }
}

:host([animation-type=slide]) {
  .forge-popover {
    // @include configuration.slide;
    @include slide-base;
  }

  forge-overlay[open] {
    &[position-placement^=top] {
      .forge-popover {
        --_popover-slidein-y: var(--_popover-slide-offset);
      }
    }
    
    &[position-placement^=right] {
      .forge-popover {
        --_popover-slidein-x: calc(var(--_popover-slide-offset) * -1);
      }
    }
    
    &[position-placement^=bottom] {
      .forge-popover {
        --_popover-slidein-y: calc(var(--_popover-slide-offset) * -1);
      }
    }
    
    &[position-placement^=left] {
      .forge-popover {
        --_popover-slidein-x: var(--_popover-slide-offset);
      }
    }
  }
}

:host([animation-type=fade]) {
  .forge-popover {
    // @include configuration.fade;
    @include fade-base;
  }
}
