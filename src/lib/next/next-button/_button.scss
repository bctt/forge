@use '@material/feature-targeting/feature-targeting' as mdc-feature-targeting;
@use '@material/theme/color-palette' as mdc-color-palette;
@use './button-base';
@use './button-filled';
@use './button-outlined';
@use './button-outlined-theme';
@use './button-protected';
@use './button-ripple';
@use './button-text';
@use './button-text-theme';
@use './button-shared-theme';
@use '../../theme';

@mixin styles($query: mdc-feature-targeting.all()) {
  @include static-styles($query: $query);
  @include theme-styles($query: $query);

  // FORGE(new): add custom forge-specific styles
  @include forge-styles;
}

@mixin forge-styles() {
  .forge-button {
    position: relative;
    overflow: hidden;
    width: inherit;
    gap: 8px;

    &--dense {
      @include button-base.dense;
    }

    &--disabled {
      cursor: not-allowed;
    }
  }
  
  a.forge-hyperlink {
    @include anchor-link;
  }
  
  button.forge-hyperlink {
    @include link;
  }
}

@mixin theme-styles($query: mdc-feature-targeting.all()) {
  @include button-text.theme-styles(button-text-theme.$light-theme, $query: $query);
  @include button-filled.theme-styles($query: $query);
  @include button-protected.theme-styles($query: $query);
  @include button-outlined.theme-styles($query: $query);
}

@mixin static-styles($query: mdc-feature-targeting.all()) {
  @include button-base.static-styles($query: $query);
  @include button-text.static-styles($query: $query);
  @include button-filled.static-styles($query: $query);
  @include button-protected.static-styles($query: $query);
  @include button-outlined.static-styles($query: $query);
}

@mixin without-ripple($query: mdc-feature-targeting.all()) {
  @include button-base.static-styles-without-ripple($query: $query);
  @include button-text.static-styles($query: $query);
  @include button-filled.static-styles($query: $query);
  @include button-protected.static-styles($query: $query);
  @include button-outlined.static-styles($query: $query);
}

///
/// FORGE(new): additional Forge mixins
///

@mixin host() {
  display: inline-block;
}

@mixin link() {
  @include theme.property(color, primary);

  cursor: pointer;
  border: none;
  background-color: transparent;
  font-size: inherit;
  padding: 0;
  outline: none;
  text-align: left;

  &[disabled] {
    pointer-events: none;
    cursor: default;
  }

  &:hover:not([disabled]) {
    text-decoration: underline;
  }
}

@mixin anchor-link() {
  @include theme.property(color, primary);

  text-decoration: none;
  
  &:visited {
    @include theme.property(color, primary);
  }

  &[disabled] {
    pointer-events: none;
    cursor: default;
  }

  &:focus,
  &:hover:not([disabled]) {
    text-decoration: underline;
  }
}
