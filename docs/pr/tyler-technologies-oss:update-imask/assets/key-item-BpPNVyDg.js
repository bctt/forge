import{r as g,a as p}from"./lit-element-JplMEnZc.js";import{x as f}from"./lit-html-paDGiEfB.js";import{t as y,n as m,r as h}from"./state-_w7_zNwI.js";import{s as v}from"./a11y-utils-DJ_tX8xT.js";import{e as d}from"./class-map-D55lQyt8.js";/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const u=(o,r,e)=>(e.configurable=!0,e.enumerable=!0,Reflect.decorate&&typeof r!="object"&&Object.defineProperty(o,r,e),e);/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */function b(o){return(r,e)=>{const{slot:a}=o??{},t="slot"+(a?`[name=${a}]`:":not([name])");return u(r,e,{get(){var l;const i=(l=this.renderRoot)==null?void 0:l.querySelector(t);return(i==null?void 0:i.assignedNodes(o))??[]}})}}const _=":host{display:block}.forge-key{--_key-gap: var(--forge-key-gap, var(--forge-spacing-medium, 16px));--_key-direction: var(--forge-key-direction, row)}.forge-key{box-sizing:border-box;display:flex;flex-direction:var(--_key-direction);gap:var(--_key-gap);flex-wrap:wrap}";var k=Object.defineProperty,x=Object.getOwnPropertyDescriptor,z=(o,r,e,a)=>{for(var t=a>1?void 0:a?x(r,e):r,i=o.length-1,l;i>=0;i--)(l=o[i])&&(t=(a?l(r,e,t):l(t))||t);return a&&t&&k(r,e,t),t};let c=class extends p{constructor(){super(),this._internals=this.attachInternals()}connectedCallback(){super.connectedCallback(),v(this,this._internals,{role:"list"})}render(){return f`<div part="root" class="forge-key"><slot></slot></div>`}};c.styles=g(_);c=z([y("forge-key")],c);const C=':host{display:inline}.forge-key-item{--_key-item-icon-color: var(--forge-key-item-icon-color, var(--forge-theme-tertiary, #3d5afe));--_key-item-label-color: var(--forge-key-item-label-color, var(--forge-theme-text-high, rgba(0, 0, 0, .87)));--_key-item-value-color: var(--forge-key-item-value-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)));--_key-item-gap: var(--forge-key-item-gap, var(--forge-spacing-xsmall, 8px));--_key-item-icon-size: var(--forge-key-item-icon-size, calc(var(--forge-typography-font-size, 1rem) * 1))}.forge-key-item{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label1-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label1-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .75)));font-weight:var(--forge-typography-label1-font-weight, 400);line-height:var(--forge-typography-label1-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label1-letter-spacing, .0357142857em);text-transform:var(--forge-typography-label1-text-transform, inherit);text-decoration:var(--forge-typography-label1-text-decoration, inherit);box-sizing:border-box;display:grid;grid-template:"icon label" "icon value";column-gap:var(--_key-item-gap);inline-size:fit-content;line-height:normal}.forge-key-item.inline{grid-template:"icon label value";grid-template-columns:auto 1fr auto;align-items:center;inline-size:auto}.forge-key-item.no-value{grid-template:"icon label";align-items:center}.forge-key-item.no-value .value{display:none}.forge-key-item:not(.inline,.no-value) .label{padding-block-start:1px}.icon{--forge-icon-size: var(--_key-item-icon-size);grid-area:icon;color:var(--_key-item-icon-color)}.label{grid-area:label;color:var(--_key-item-label-color)}.value{grid-area:value;color:var(--_key-item-value-color)}.default-icon{block-size:calc(var(--_key-item-icon-size) - 1px);inline-size:calc(var(--_key-item-icon-size) - 1px);border-radius:50%;background:currentColor}';var $=Object.defineProperty,w=Object.getOwnPropertyDescriptor,s=(o,r,e,a)=>{for(var t=a>1?void 0:a?w(r,e):r,i=o.length-1,l;i>=0;i--)(l=o[i])&&(t=(a?l(r,e,t):l(t))||t);return a&&t&&$(r,e,t),t};let n=class extends p{constructor(){super(),this.inline=!1,this._hasValue=!1,this._internals=this.attachInternals()}connectedCallback(){super.connectedCallback(),v(this,this._internals,{role:"listitem"}),this._handleSlotChange()}render(){return f`
      <div part="root" class=${d({"forge-key-item":!0,inline:this.inline,"no-value":!this._hasValue})}>
        <div part="icon" class="icon">
          <slot name="icon">
            <div class="default-icon"></div>
          </slot>
        </div>
        <div part="label" class="label">
          <slot></slot>
        </div>
        <div part="value" class="value" @slotchange=${this._handleSlotChange}>
          <slot name="value"></slot>
        </div>
      </div>
    `}_handleSlotChange(){const o=this._valueNodes.filter(r=>{var e;return!!((e=r.textContent)!=null&&e.trim())});this._hasValue=!!o.length}};n.styles=g(C);s([m({type:Boolean})],n.prototype,"inline",2);s([h()],n.prototype,"_hasValue",2);s([b({slot:"value"})],n.prototype,"_valueNodes",2);n=s([y("forge-key-item")],n);export{u as e,b as n};
