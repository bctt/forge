const je="1.0.0",Me="",Re=[{kind:"javascript-module",path:"plugins/vite/vite-inline-forge-html.ts",declarations:[{kind:"variable",name:"ViteInlineForgeHtmlPlugin",type:{text:"Plugin"},default:"{ name: 'forge:inline-html', transform(code: string, id: string) { const isProd = process.env.NODE_ENV === 'production'; // In production, we want to append a \"?raw\" query parameter to the HTML file imports and let rollup inline the HTML if (isProd) { const htmlImportRE = /(import\\s+\\S+\\s+from\\s+['\"]\\.\\.?\\/[^.]+\\.(?:html)(?!\\?))(\\S+)/g; const containsRelativeHtmlImport = htmlImportRE.test(code); if (containsRelativeHtmlImport) { code = code.replace(htmlImportRE, '$1?raw$2'); } return { code }; } // In development, we want to inline the HTML file contents into the JavaScript via esbuild if (/^.*\\.html$/g.test(id)) { code = `export default \\`${code}\\``; } return { code }; } }",description:`A custom plugin that converts imports for HTML files to stringified JavaScript modules.

This allows us to use the HTML file contents in the JavaScript via an import by creating a module
on the fly with the file contents getting stringified.`}],exports:[{kind:"js",name:"default",declaration:{name:"ViteInlineForgeHtmlPlugin",module:"plugins/vite/vite-inline-forge-html.ts"}}]},{kind:"javascript-module",path:"plugins/vite/vite-inline-forge-style-import.ts",declarations:[{kind:"variable",name:"ViteTransformForgeInlineStyleImportsPlugin",type:{text:"Plugin"},default:"{ name: 'forge:transform-inline-style-imports', transform(code: string) { const containsRelativeSassImport = styleImportRE.test(code); if (containsRelativeSassImport) { code = code.replace(styleImportRE, '$1?inline$2'); } return { code }; } }"}],exports:[{kind:"js",name:"default",declaration:{name:"ViteTransformForgeInlineStyleImportsPlugin",module:"plugins/vite/vite-inline-forge-style-import.ts"}}]},{kind:"javascript-module",path:"src/lib/constants.ts",declarations:[{kind:"variable",name:"COMPONENT_NAME_PREFIX",type:{text:"string"},default:"'forge-'"},{kind:"variable",name:"KEYSTROKE_DEBOUNCE_THRESHOLD",type:{text:"number"},default:"500"},{kind:"variable",name:"ICON_CLASS_NAME",type:{text:"string"},default:"'tyler-icons'"},{kind:"variable",name:"CDN_BASE_URL",type:{text:"string"},default:"'https://cdn.forge.tylertech.com/'"},{kind:"variable",name:"canUserHoverElements"},{kind:"variable",name:"getFormValue",description:"A method symbol that gets the submitted value of a form-associated component."},{kind:"variable",name:"getFormState",description:"A method symbol that gets the form state of a form-associated component."},{kind:"variable",name:"setValidity",description:"A method symbol that sets the validity of a form-associated component."},{kind:"variable",name:"getValidationMessage",description:"A method symbol that gets the validation message of a form-associated component."},{kind:"variable",name:"internals",description:"A property symbol that references the `ElementInternals` instance of an element."},{kind:"variable",name:"inputType",description:`A property symbol that sets the type of an internal input element used to create
validation messages`},{kind:"variable",name:"isFocusable",description:"A property symbol that indicates whether or not a `Focusable` element can be focused."},{kind:"variable",name:"setDefaultAria",description:"A method symbol that sets default ARIA on the `ElementInternals` instance of an element if\nsupported or sprouts attributes if not."}],exports:[{kind:"js",name:"COMPONENT_NAME_PREFIX",declaration:{name:"COMPONENT_NAME_PREFIX",module:"src/lib/constants.ts"}},{kind:"js",name:"KEYSTROKE_DEBOUNCE_THRESHOLD",declaration:{name:"KEYSTROKE_DEBOUNCE_THRESHOLD",module:"src/lib/constants.ts"}},{kind:"js",name:"ICON_CLASS_NAME",declaration:{name:"ICON_CLASS_NAME",module:"src/lib/constants.ts"}},{kind:"js",name:"CDN_BASE_URL",declaration:{name:"CDN_BASE_URL",module:"src/lib/constants.ts"}},{kind:"js",name:"canUserHoverElements",declaration:{name:"canUserHoverElements",module:"src/lib/constants.ts"}},{kind:"js",name:"getFormValue",declaration:{name:"getFormValue",module:"src/lib/constants.ts"}},{kind:"js",name:"getFormState",declaration:{name:"getFormState",module:"src/lib/constants.ts"}},{kind:"js",name:"setValidity",declaration:{name:"setValidity",module:"src/lib/constants.ts"}},{kind:"js",name:"getValidationMessage",declaration:{name:"getValidationMessage",module:"src/lib/constants.ts"}},{kind:"js",name:"internals",declaration:{name:"internals",module:"src/lib/constants.ts"}},{kind:"js",name:"inputType",declaration:{name:"inputType",module:"src/lib/constants.ts"}},{kind:"js",name:"isFocusable",declaration:{name:"isFocusable",module:"src/lib/constants.ts"}},{kind:"js",name:"setDefaultAria",declaration:{name:"setDefaultAria",module:"src/lib/constants.ts"}}]},{kind:"javascript-module",path:"src/stories/utils.ts",declarations:[{kind:"variable",name:"GLOBAL_THEME_OPTIONS",type:{text:"array"},default:"['primary', 'secondary', 'tertiary', 'success', 'warning', 'error', 'info']",description:"Global theme options for components that support a `theme` attribute."},{kind:"variable",name:"standaloneStoryParams",type:{text:"StoryObj"},default:"{ parameters: { controls: { disable: true }, actions: { disable: true } }, }",description:"Common default parameters for a standalone story."},{kind:"function",name:"transformCssPropsToControls",parameters:[{name:"tagName",type:{text:"string"},description:"The tag name of the custom element"}],description:"Transforms the CSS properties of a custom element into controls for Storybook.",return:{type:{text:"object"}}},{kind:"function",name:"customElementStoryRenderer",return:{type:{text:"HTMLElement"}},parameters:[{name:"tagName",type:{text:"keyof HTMLElementTagNameMap"},description:"The tag name of the component to render"},{name:"props",type:{text:"Partial<HTMLElementTagNameMap[T]>"},description:"The props to pass to the component"}],description:"Render a custom element story using the provided tag name and props."},{kind:"function",name:"generateCustomElementArgTypes",return:{type:{text:"object"}},parameters:[{name:"{ tagName, exclude, controls }",type:{text:"{ tagName: string; exclude?: string[]; controls?: Partial<ArgTypes<Args>> }"}}],description:"Generates Storybook `argTypes` for a custom element based on its tag name from the custom elements manifest."},{kind:"function",name:"getCustomElementsTagDeclaration",return:{type:{text:"Declaration"}},parameters:[{name:"tagName",type:{text:"string"}}]}],exports:[{kind:"js",name:"GLOBAL_THEME_OPTIONS",declaration:{name:"GLOBAL_THEME_OPTIONS",module:"src/stories/utils.ts"}},{kind:"js",name:"standaloneStoryParams",declaration:{name:"standaloneStoryParams",module:"src/stories/utils.ts"}},{kind:"js",name:"transformCssPropsToControls",declaration:{name:"transformCssPropsToControls",module:"src/stories/utils.ts"}},{kind:"js",name:"customElementStoryRenderer",declaration:{name:"customElementStoryRenderer",module:"src/stories/utils.ts"}},{kind:"js",name:"generateCustomElementArgTypes",declaration:{name:"generateCustomElementArgTypes",module:"src/stories/utils.ts"}},{kind:"js",name:"getCustomElementsTagDeclaration",declaration:{name:"getCustomElementsTagDeclaration",module:"src/stories/utils.ts"}}]},{kind:"javascript-module",path:"src/dev/src/component-list.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/src/shared.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/lib/accordion/accordion.ts",declarations:[{kind:"class",description:"",name:"AccordionComponent",members:[{kind:"field",name:"panelSelector",type:{text:"string"},privacy:"public",description:"Gets/sets the selector to use for finding the child expansion panels. Defaults to searching the direct children for `<forge-expansion-panel>` elements."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-accordion",customElement:!0}],exports:[{kind:"js",name:"AccordionComponent",declaration:{name:"AccordionComponent",module:"src/lib/accordion/accordion.ts"}}]},{kind:"javascript-module",path:"src/lib/autocomplete/autocomplete.ts",declarations:[{kind:"class",description:"",name:"AutocompleteComponent",members:[{kind:"field",name:"mode",type:{text:"`${AutocompleteMode}`"},privacy:"public",description:"Gets/sets the interaction mode."},{kind:"field",name:"multiple",type:{text:"boolean"},privacy:"public",description:"Gets/sets the multi-select state."},{kind:"field",name:"value",type:{text:"any"},privacy:"public",description:"Gets/sets the value."},{kind:"field",name:"debounce",type:{text:"number"},privacy:"public",description:"Gets/sets the debounce delay (milliseconds) for keyboard events."},{kind:"field",name:"filterOnFocus",type:{text:"boolean"},privacy:"public",description:"Gets/sets filter on focus settings which controls whether the dropdown displays automatically when focused."},{kind:"field",name:"filterFocusFirst",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the first option in the dropdown will be focused automatically when opened or not."},{kind:"field",name:"allowUnmatched",type:{text:"boolean"},privacy:"public",description:"Controls whether unmatched text entered by the user will stay visible an option in the dropdown is not found."},{kind:"field",name:"popupTarget",type:{text:"string"},privacy:"public",description:"Gets/sets the selector that will be used to find an element to attach the popup to. Defaults to the input element."},{kind:"field",name:"filterText",type:{text:"string"},privacy:"public",description:`Gets/sets the filter text.

Setting the filter text only applies when allowUnmatched is enabled.`},{kind:"field",name:"optionBuilder",type:{text:"AutocompleteOptionBuilder | null | undefined"},privacy:"public",description:"Sets the option builder callback that will be executed when building the option list in the dropdown."},{kind:"field",name:"filter",type:{text:"AutocompleteFilterCallback | null | undefined"},privacy:"public",description:"Sets the filter callback that will be executed when fetching options for the autocomplete dropdown."},{kind:"field",name:"selectedTextBuilder",type:{text:"AutocompleteSelectedTextBuilder"},privacy:"public",description:"Sets the selected text builder callback that will be executed when getting the selected text."},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Controls the open state of the dropdown."},{kind:"field",name:"matchKey",type:{text:"string | null | undefined"},privacy:"public",description:"Gets/sets the property key to match the value to an option."},{kind:"field",name:"isInitialized",type:{text:"boolean"},privacy:"public",description:"Returns whether the component has been initialized or not yet.",readonly:!0},{kind:"field",name:"popupElement",type:{text:"HTMLElement | null"},privacy:"public",description:"Gets the currently active popup element when the dropdown is open.",readonly:!0},{kind:"field",name:"beforeValueChange",type:{text:"(value: any) => boolean | Promise<boolean>"},privacy:"public",description:"Sets the callback to be executed when the user selects an option, before the UI is updated to allow for validation."},{kind:"method",name:"appendOptions",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"IAutocompleteOption[] | IAutocompleteOptionGroup[]"}}],description:"Adds options to the dropdown while it is open. Has no effect if the dropdown is closed."},{kind:"method",name:"openDropdown",privacy:"public",return:{type:{text:"void"}},description:"Opens the dropdown."},{kind:"method",name:"closeDropdown",privacy:"public",return:{type:{text:"void"}},description:"Closes the dropdown."},{kind:"method",name:"forceFilter",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"opts",default:"{ preserveValue: false }",type:{text:"IAutocompleteForceFilterOptions"}}],description:"Forces the filter callback to be executed to update the current selection state with new options."},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the list of classes to apply to the popup element.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"popupHeaderBuilder",type:{text:"ListDropdownHeaderBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"popupFooterBuilder",type:{text:"ListDropdownFooterBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"syncPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width is synchronized with the popup target width.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"optionLimit",type:{text:"number"},privacy:"public",description:"Gets/sets the maximum number of options to display in the dropdown.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"observeScroll",type:{text:"boolean"},privacy:"public",description:"Controls the observation of scroll events on the dropdown.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"observeScrollThreshold",type:{text:"number"},privacy:"public",description:"The number of pixels from the bottom to trigger the scroll bottom event. Only applicable if `observeScroll` is true.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"constrainPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width will be constrained to a max width of the viewport width (default: `100vw`).",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"wrapOptionText",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the options will wrap their text or not.\nThis only applies if `constrainPopupWidth` is `true`, if there is an explicit width set via CSS.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}}],superclass:{name:"ListDropdownAware",module:"/src/lib/list-dropdown/list-dropdown-aware"},tagName:"forge-autocomplete",customElement:!0}],exports:[{kind:"js",name:"AutocompleteComponent",declaration:{name:"AutocompleteComponent",module:"src/lib/autocomplete/autocomplete.ts"}}]},{kind:"javascript-module",path:"src/lib/avatar/avatar.ts",declarations:[{kind:"class",description:"",name:"AvatarComponent",cssProperties:[{type:{text:"string"},description:"The background color of the avatar.",name:"--forge-avatar-background"},{type:{text:"number"},description:"The border radius of the avatar, defaults to 50%.",name:"--forge-avatar-shape"},{type:{text:"color"},description:"The text color of the avatar.",name:"--forge-avatar-color"},{type:{text:"number"},description:"The height and width of the avatar.",name:"--forge-avatar-size"},{type:{text:"number"},description:"The transition duration for animations.",name:"--forge-avatar-transition-duration"},{type:{text:"string"},description:"The transition timing function for animations.",name:"--forge-avatar-transition-timing"}],cssParts:[{description:"The root container element.",name:"root"}],slots:[{description:"The default slot for avatar content if not provided via text/imageUrl.",name:""}],members:[{kind:"field",name:"text",type:{text:"string"},privacy:"public",description:"The text to display in the avatar.",default:'""'},{kind:"field",name:"letterCount",type:{text:"number"},privacy:"public",description:"Controls the number of letters to display from the text. By default the text is split on spaces and the first character of each word is used.",default:"2"},{kind:"field",name:"imageUrl",type:{text:"string"},privacy:"public",description:"The background image URL to use."}],attributes:[{type:{text:"string"},description:"The text to display in the avatar.",name:"text",default:'""'},{type:{text:"string"},description:"Controls the number of letters to display from the text. By default the text is split on spaces and the first character of each word is used.",name:"letter-count",default:"2"},{type:{text:"string"},description:"The background image URL to use.",name:"image-url"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-avatar",summary:"Avatars represent an entity via text or image.",customElement:!0}],exports:[{kind:"js",name:"AvatarComponent",declaration:{name:"AvatarComponent",module:"src/lib/avatar/avatar.ts"}}]},{kind:"javascript-module",path:"src/lib/backdrop/backdrop.ts",declarations:[{kind:"class",description:"",name:"BackdropComponent",members:[{kind:"field",name:"_visible",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_fixed",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_rootElement",type:{text:"HTMLElement"},privacy:"private"},{kind:"field",name:"_animationController",type:{text:"AbortController | undefined"},privacy:"private"},{kind:"method",name:"_applyVisibility",privacy:"private",return:{type:{text:"Promise<void>"}},parameters:[{name:"visible",type:{text:"boolean"}},{name:"{ animate }",default:"{ animate: true }"}]},{kind:"method",name:"show",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"hide",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"fadeIn",privacy:"public",return:{type:{text:"Promise<void>"}}},{kind:"method",name:"fadeOut",privacy:"public",return:{type:{text:"Promise<void>"}}},{kind:"field",name:"visible",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"fixed",type:{text:"boolean"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-backdrop",customElement:!0}],exports:[{kind:"js",name:"BackdropComponent",declaration:{name:"BackdropComponent",module:"src/lib/backdrop/backdrop.ts"}}]},{kind:"javascript-module",path:"src/lib/badge/badge.ts",declarations:[{kind:"class",description:"",name:"BadgeComponent",cssProperties:[{description:"The background color.",name:"--forge-badge-background"},{description:"The text color.",name:"--forge-badge-color"},{description:"The shape radius.",name:"--forge-badge-shape"},{description:"The inline padding.",name:"--forge-badge-padding-inline"},{description:"The block padding.",name:"--forge-badge-padding-block"},{description:"The border width.",name:"--forge-badge-border-width"},{description:"The border color.",name:"--forge-badge-border-color"},{description:"The border style.",name:"--forge-badge-border-style"},{description:"The spacing between the content within the badge.",name:"--forge-badge-gap"}],slots:[{description:"Default content placed inside the badge.",name:""},{description:"Content placed before the default content.",name:"start"},{description:"Content placed after the default content.",name:"end"}],members:[{kind:"field",name:"dot",type:{text:"boolean"},privacy:"public",description:"Controls whether the badge will be a small dot without any content visible.",default:"false"},{kind:"field",name:"theme",type:{text:"BadgeTheme"},privacy:"public",description:"The theme of the badge.",default:'"default"'},{kind:"field",name:"strong",type:{text:"boolean"},privacy:"public",description:"Controls whether the badge will have a stronger visual appearance.",default:"false"},{kind:"field",name:"hide",type:{text:"boolean"},privacy:"public",description:"Controls whether the badge is visible.",default:"false"}],attributes:[{type:{text:"boolean"},description:"When present, the badge will be a small dot without any content visible.",name:"dot",default:"false"},{type:{text:"BadgeTheme"},description:"The theme of the badge.",name:"theme",default:'"default"'},{type:{text:"boolean"},description:"Controls whether the badge will have a stronger visual appearance.",name:"strong",default:"false"},{type:{text:"boolean"},description:"Controls whether the badge is visible.",name:"hide",default:"false"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-badge",summary:"Badges are non-interactive components used to inform status, counts, or as a descriptive label.",customElement:!0}],exports:[{kind:"js",name:"BadgeComponent",declaration:{name:"BadgeComponent",module:"src/lib/badge/badge.ts"}}]},{kind:"javascript-module",path:"src/lib/banner/banner.ts",declarations:[{kind:"class",description:"",name:"BannerComponent",cssProperties:[{description:"The background color of the banner.",name:"--forge-banner-background"},{description:"The text color of the banner.",name:"--forge-banner-color"},{description:"The color of the icon.",name:"--forge-banner-icon-color"},{description:"The gap between the contents.",name:"--forge-banner-gap"},{description:"The inline padding.",name:"--forge-banner-padding-inline"},{description:"The block padding.",name:"--forge-banner-padding-block"},{description:"The transition duration.",name:"--forge-banner-transition-duration"},{description:"The transition easing function.",name:"--forge-banner-transition-easing"}],slots:[{description:"The content of the banner.",name:""},{description:"The icon to display.",name:"icon"},{description:"The optional button to display.",name:"button"}],members:[{kind:"field",name:"dismissed",type:{text:"boolean"},privacy:"public",description:"Controls the visibility of the banner."},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public",description:"Controls the visibility of the built-in dismiss button."},{kind:"field",name:"theme",type:{text:"BannerTheme"},privacy:"public",description:"The theme of the banner."},{kind:"field",name:"canDismiss",type:{text:"boolean"},privacy:"public",deprecated:"Use `persistent` instead."}],events:[{type:{text:"CustomEvent"},description:"Dispatched before the banner is dismissed. Cancelable to prevent dismissal.",name:"forge-banner-before-dismiss"},{type:{text:"CustomEvent"},description:"Dispatched when the banner is dismissed.",name:"forge-banner-dismissed"}],attributes:[{type:{text:"boolean"},description:"Controls the visibility of the banner.",name:"dismissed"},{type:{text:"boolean"},description:"Controls the visibility of the built-in dismiss button.",name:"persistent"},{type:{text:"BannerTheme"},description:"The theme of the banner.",name:"theme"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-banner",summary:"Banners are used to inform users of important information, such as errors, warnings, or success messages.",customElement:!0}],exports:[{kind:"js",name:"BannerComponent",declaration:{name:"BannerComponent",module:"src/lib/banner/banner.ts"}}]},{kind:"javascript-module",path:"src/lib/bottom-sheet/bottom-sheet.ts",declarations:[{kind:"class",description:"",name:"BottomSheetComponent",cssProperties:[{description:"The maximum width of the bottom sheet on desktop.",name:"--forge-bottom-sheet-desktop-max-width"},{description:"The minimum width of the bottom sheet on desktop.",name:"--forge-bottom-sheet-desktop-min-width"},{description:"The duration of the bottom sheet animation to fullscreen.",name:"--forge-bottom-sheet-animation-duration"},{description:"The timing function of the bottom sheet animation to fullscreen.",name:"--forge-bottom-sheet-animation-timing"}],cssParts:[{description:"The root element of the bottom sheet.",name:"root"},{description:"The surface element of the bottom sheet within th dialog.",name:"surface"}],slots:[{description:"The content of the bottom sheet. This is a passthrough slot to the dialog surface.",name:""}],members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether the bottom sheet is open."},{kind:"field",name:"mode",type:{text:"BottomSheetMode"},privacy:"public",description:"The mode of the bottom sheet. Defaults to non-modal."},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public",description:"Whether the bottom sheet is persistent."},{kind:"field",name:"fullscreen",type:{text:"boolean"},privacy:"public",description:"Whether the bottom sheet is fullscreen."}],events:[{type:{text:"CustomEvent<void>"},description:"Fires before the bottom sheet closes.",name:"forge-bottom-sheet-before-close"},{type:{text:"CustomEvent<void>"},description:"Fires after the bottom sheet closes.",name:"forge-bottom-sheet-close"},{type:{text:"CustomEvent<void>"},description:"Fires after the bottom sheet opens.",name:"forge-bottom-sheet-open"},{type:{text:"CustomEvent<IBottomSheetDragStartEventData>"},description:"Fires when the bottom sheet starts to be dragged.",name:"forge-bottom-sheet-drag-start"},{type:{text:"CustomEvent<IBottomSheetDragEventData>"},description:"Fires when the bottom sheet is dragged.",name:"forge-bottom-sheet-dragged"},{type:{text:"CustomEvent<void>"},description:"Fires when the bottom sheet drag ends.",name:"forge-bottom-sheet-drag-end"},{type:{text:"CustomEvent<void>"},description:"Fires when the bottom sheet drag is cancelled.",name:"forge-bottom-sheet-drag-cancel"},{type:{text:"CustomEvent<boolean>"},description:"Fires when the bottom sheet is toggled to fullscreen.",name:"forge-bottom-sheet-fullscreen"}],attributes:[{type:{text:"boolean"},description:"Whether the bottom sheet is open.",name:"open"},{type:{text:"BottomSheetMode"},description:"The mode of the bottom sheet. Defaults to non-modal.",name:"mode"},{type:{text:"boolean"},description:"Whether the bottom sheet is persistent.",name:"persistent"},{type:{text:"boolean"},description:"Whether the bottom sheet is fullscreen.",name:"fullscreen"}],mixins:[{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-bottom-sheet",summary:"Bottom sheets slide up from the bottom of the screen to reveal more content and/or actions that the user can take.",customElement:!0}],exports:[{kind:"js",name:"BottomSheetComponent",declaration:{name:"BottomSheetComponent",module:"src/lib/bottom-sheet/bottom-sheet.ts"}}]},{kind:"javascript-module",path:"src/lib/button/button.ts",declarations:[{kind:"class",description:"",name:"ButtonComponent",cssProperties:[{description:"The primary color of the button.",name:"--forge-button-primary-color"},{description:"The text color of the button. Inherits from primary color.",name:"--forge-button-text-color"},{description:"The disabled color of the button.",name:"--forge-button-disabled-color"},{description:"The padding of the button.",name:"--forge-button-padding"},{description:"The display of the button.",name:"--forge-button-display"},{description:"The flex justify of the button.",name:"--forge-button-justify"},{description:"The shape of the button.",name:"--forge-button-shape"},{description:"The height of the button.",name:"--forge-button-height"},{description:"The min-width of the button.",name:"--forge-button-min-width"},{description:"The spacing of the button.",name:"--forge-button-spacing"},{description:"The border-width of the button.",name:"--forge-button-border-width"},{description:"The border style of the button.",name:"--forge-button-border-style"},{description:"The border color of the button.",name:"--forge-button-border-color"},{description:"The shape start start radius of the button.",name:"--forge-button-shape-start-start-radius"},{description:"The shape start end radius of the button.",name:"--forge-button-shape-start-end-radius"},{description:"The shape end start radius of the button.",name:"--forge-button-shape-end-start-radius"},{description:"The shape end end radius of the button.",name:"--forge-button-shape-end-end-radius"},{description:"The padding block of the button.",name:"--forge-button-padding-block"},{description:"The padding inline of the button.",name:"--forge-button-padding-inline"},{description:"The background color of the button.",name:"--forge-button-background"},{description:"The background color of the button on hover.",name:"--forge-button-hover-background"},{description:"The background color of the button on active state.",name:"--forge-button-active-background"},{description:"The text color of the button.",name:"--forge-button-color"},{description:"The size of the icon in the button.",name:"--forge-button-icon-size"},{description:"The shadow of the button.",name:"--forge-button-shadow"},{description:"The shadow of the button on hover.",name:"--forge-button-hover-shadow"},{description:"The shadow of the button on active state.",name:"--forge-button-active-shadow"},{description:"The cursor type of the button.",name:"--forge-button-cursor"},{description:"The background color of the raised button.",name:"--forge-button-raised-background"},{description:"The background color of the disabled raised button.",name:"--forge-button-raised-disabled-background"},{description:"The text color of the raised button.",name:"--forge-button-raised-color"},{description:"The text color of the disabled raised button.",name:"--forge-button-raised-disabled-color"},{description:"The shadow of the raised button.",name:"--forge-button-raised-shadow"},{description:"The shadow of the raised button on hover.",name:"--forge-button-raised-hover-shadow"},{description:"The shadow of the raised button on active state.",name:"--forge-button-raised-active-shadow"},{description:"The shadow of the disabled raised button.",name:"--forge-button-raised-disabled-shadow"},{description:"The transition duration of the raised button.",name:"--forge-button-raised-transition-duration"},{description:"The transition timing of the raised button.",name:"--forge-button-raised-transition-timing"},{description:"The background color of the flat button.",name:"--forge-button-flat-background"},{description:"The background color of the disabled flat button.",name:"--forge-button-flat-disabled-background"},{description:"The text color of the flat button.",name:"--forge-button-flat-color"},{description:"The text color of the disabled flat button.",name:"--forge-button-flat-disabled-color"},{description:"The background color of the outlined button.",name:"--forge-button-outlined-background"},{description:"The text color of the outlined button.",name:"--forge-button-outlined-color"},{description:"The border width of the outlined button.",name:"--forge-button-outlined-border-width"},{description:"The border style of the outlined button.",name:"--forge-button-outlined-border-style"},{description:"The border color of the outlined button.",name:"--forge-button-outlined-border-color"},{description:"The text color of the link button.",name:"--forge-button-link-color"},{description:"The text decoration of the link button.",name:"--forge-button-link-text-decoration"},{description:"The height of the link button.",name:"--forge-button-link-height"},{description:"The padding of the link button.",name:"--forge-button-link-padding"},{description:"The line height of the link button.",name:"--forge-button-link-line-height"},{description:"The width of the link button.",name:"--forge-button-link-width"},{description:"The text decoration of the link button on hover.",name:"--forge-button-link-hover-text-decoration"},{description:"The opacity of the link button on active state.",name:"--forge-button-link-active-opacity"},{description:"The transition duration of the link button.",name:"--forge-button-link-transition-duration"},{description:"The transition timing of the link button.",name:"--forge-button-link-transition-timing"},{description:"The cursor type of the disabled button.",name:"--forge-button-disabled-cursor"},{description:"The text color of the disabled button.",name:"--forge-button-disabled-text-color"},{description:"The background color of the disabled button.",name:"--forge-button-disabled-background"},{description:"The border color of the disabled button.",name:"--forge-button-disabled-border-color"},{description:"The shadow of the disabled button.",name:"--forge-button-disabled-shadow"},{description:"The height of the dense button.",name:"--forge-button-dense-height"},{description:"The shape of the pill button.",name:"--forge-button-pill-shape"},{description:"The inline padding of the pill button.",name:"--forge-button-pill-padding-inline"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The focus-indicator indicator element.",name:"focus-indicator"},{description:"The state-layer surface element.",name:"state-layer"}],slots:[{description:"This is a default/unnamed slot for the label text.",name:""},{description:"Elements to logically render before the label text.",name:"start"},{description:"Elements to logically render after the label text.",name:"end"}],members:[{kind:"field",name:"variant",type:{text:"ButtonVariant"},privacy:"public",description:"The variant of the button.",default:'"text"'},{kind:"field",name:"pill",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is pill-shaped.",default:"false"},{kind:"field",name:"theme",type:{text:"ButtonTheme"},privacy:"public",description:"The theme of the button. Defaults to `primary`.",default:'"primary"'},{kind:"field",name:"fullWidth",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is full-width.",default:"false"},{kind:"field",name:"type",type:{text:"ButtonType"},privacy:"public",description:"The type of button. Valid values are `button`, `submit`, and `reset`.",default:'"button"',inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is disabled.",default:"false",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",description:"Whether or not the button shows a built-in popover icon.",default:"false",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"name",type:{text:"string"},privacy:"public",description:"The name of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The form value of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is dense.",default:"false",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0,description:"The form reference of the button if within a `<form>` element.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}},description:"Clicks the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"ExperimentalFocusOptions"}}],description:"Focuses the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}}],events:[{type:{text:"PointerEvent"},description:"Fires when the button is clicked.",name:"click"}],attributes:[{type:{text:"string"},description:"The type of button. Valid values are `button`, `submit`, and `reset`.",name:"type",default:'"button"'},{type:{text:"ButtonVariant"},description:"The variant of the button.",name:"variant",default:'"text"'},{type:{text:"boolean"},description:"Whether or not the button is full-width.",name:"full-width",default:"false"},{type:{text:"boolean"},description:"Whether or not the button is disabled.",name:"disabled",default:"false"},{type:{text:"boolean"},description:"Whether or not the button shows a built-in popover icon.",name:"popover-icon",default:"false"},{type:{text:"string"},description:"The name of the button.",name:"name"},{type:{text:"string"},description:"The form value of the button.",name:"value"},{type:{text:"boolean"},description:"Whether or not the button is dense.",name:"dense",default:"false"},{type:{text:"boolean"},description:"Whether or not the button is pill-shaped.",name:"pill",default:"false"},{type:{text:"ButtonTheme"},description:"The theme of the button. Defaults to `primary`.",name:"theme",default:'"primary"'}],superclass:{name:"BaseButton",module:"/src/lib/button/base/base-button"},tagName:"forge-button",summary:"Buttons represent actions that a user can take.",customElement:!0}],exports:[{kind:"js",name:"ButtonComponent",declaration:{name:"ButtonComponent",module:"src/lib/button/button.ts"}}]},{kind:"javascript-module",path:"src/lib/button-area/button-area.ts",declarations:[{kind:"class",description:"",name:"ButtonAreaComponent",cssParts:[{description:"The root container element.",name:"root"},{description:"The visually hidden slot for the <button> element.",name:"button"},{description:"The focus-indicator indicator element.",name:"focus-indicator"},{description:"The state-layer surface element.",name:"state-layer"}],slots:[{description:"Places content within the default (unnamed) slot (main body of the component).",name:""},{description:"Places content within a visually hidden slot. Always place a <button> element in this slot.",name:"button"}],members:[{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Sets whether the button area and slotted button are disabled. Setting this on one will also set it on the other."}],events:[{type:{text:"Event"},description:"The button area emits a native HTML click event whenever it or the slotted button is clicked. Add the listener to the <forge-button-area> element to receive all events. Note: Set data-forge-ignore on any nested buttons or other interactive elements to prevent them from activating the button area.",name:"click"}],attributes:[{type:{text:"boolean"},description:"Sets whether the button area and slotted button are disabled. Setting this on one will also set it on the other.",name:"disabled"}],superclass:{name:"HTMLElement"},tagName:"forge-button-area",summary:"Button areas are used to create a clickable area that group related information and actions about a single subject.",customElement:!0}],exports:[{kind:"js",name:"ButtonAreaComponent",declaration:{name:"ButtonAreaComponent",module:"src/lib/button-area/button-area.ts"}}]},{kind:"javascript-module",path:"src/lib/calendar/calendar.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-calendar>` custom element.",name:"CalendarComponent",members:[{kind:"field",name:"activeDate",type:{text:"Date"},privacy:"public",readonly:!0},{kind:"field",name:"allowSingleDateRange",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"clearButton",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"clearCallback",type:{text:"(() => void) | undefined"},privacy:"public"},{kind:"field",name:"constrainToEnabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"dateBuilder",type:{text:"CalendarDateBuilder | undefined"},privacy:"public"},{kind:"field",name:"dateSelectCallback",type:{text:"CalendarDateSelectCallback | undefined"},privacy:"public"},{kind:"field",name:"dayBuilder",type:{text:"CalendarDayBuilder | undefined"},privacy:"public"},{kind:"field",name:"disabledDateBuilder",type:{text:"((date: Date) => boolean) | undefined"},privacy:"public"},{kind:"field",name:"disabledDates",type:{text:"Date | Date[] | null | undefined"},privacy:"public"},{kind:"field",name:"disabledDaysOfWeek",type:{text:"DayOfWeek | DayOfWeek[] | null | undefined"},privacy:"public"},{kind:"field",name:"eventBuilder",type:{text:"CalendarEventBuilder | undefined"},privacy:"public"},{kind:"field",name:"events",type:{text:"ICalendarEvent[] | null | undefined"},privacy:"public"},{kind:"field",name:"firstDayOfWeek",type:{text:"DayOfWeek | undefined"},privacy:"public"},{kind:"field",name:"fixedHeight",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"listYears",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"locale",type:{text:"string | undefined"},privacy:"public"},{kind:"field",name:"max",type:{text:"Date | string | null | undefined"},privacy:"public"},{kind:"field",name:"menuAnimation",type:{text:"CalendarMenuAnimationType"},privacy:"public"},{kind:"field",name:"min",type:{text:"Date | string | null | undefined"},privacy:"public"},{kind:"field",name:"mode",type:{text:"CalendarMode"},privacy:"public"},{kind:"field",name:"month",type:{text:"number"},privacy:"public"},{kind:"field",name:"preventFocus",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"selectionFollowsMonth",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showHeader",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showOtherMonths",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showToday",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"todayButton",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"todayCallback",type:{text:"(() => void) | undefined"},privacy:"public"},{kind:"field",name:"tooltipBuilder",type:{text:"CalendarTooltipBuilder | undefined"},privacy:"public"},{kind:"field",name:"value",type:{text:"Date | Date[] | DateRange | null | undefined"},privacy:"public"},{kind:"field",name:"view",type:{text:"CalendarView"},privacy:"public"},{kind:"field",name:"weekendDays",type:{text:"DayOfWeek[] | null | undefined"},privacy:"public"},{kind:"field",name:"year",type:{text:"number"},privacy:"public"},{kind:"field",name:"yearRange",type:{text:"string"},privacy:"public"},{kind:"method",name:"clear",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"deselectDate",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"date",type:{text:"Date"}}]},{kind:"method",name:"goToDate",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"date",type:{text:"Date"}},{name:"setFocus",optional:!0,type:{text:"boolean"}}]},{kind:"method",name:"handleKey",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"layout",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"selectDate",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"date",type:{text:"Date"}}]},{kind:"method",name:"setActiveDate",privacy:"public",return:{type:{text:"boolean"}},parameters:[{name:"date",type:{text:"Date"}},{name:"setFocus",optional:!0,type:{text:"boolean"}}]},{kind:"method",name:"today",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"toggleDate",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"date",type:{text:"Date"}},{name:"force",optional:!0,type:{text:"boolean"}}]}],superclass:{name:"HTMLElement"},tagName:"forge-calendar",customElement:!0}],exports:[{kind:"js",name:"CalendarComponent",declaration:{name:"CalendarComponent",module:"src/lib/calendar/calendar.ts"}}]},{kind:"javascript-module",path:"src/lib/card/card.ts",declarations:[{kind:"class",description:"",name:"CardComponent",cssProperties:[{description:"The background color of the card.",name:"--forge-card-background"},{description:"The height of the card.",name:"--forge-card-height"},{description:"The width of the card.",name:"--forge-card-width"},{description:"The outline color of the card.",name:"--forge-card-outline-color"},{description:"The outline width of the card.",name:"--forge-card-outline-width"},{description:"The outline style of the card.",name:"--forge-card-outline-style"},{description:"The elevation/shadow of the card.",name:"--forge-card-elevation"},{description:"The padding of the card.",name:"--forge-card-padding"},{description:"The shape (border-radius) of the card.",name:"--forge-card-shape"},{description:"The overflow of the card.",name:"--forge-card-overflow"},{description:"The elevation/shadow of the card when raised.",name:"--forge-card-raised-elevation"},{name:"--forge-card-raised-outline-width"}],cssParts:[{description:"The root container element.",name:"root"}],members:[{kind:"field",name:"_raised",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"raised",type:{text:"boolean"},privacy:"public",description:"Whether the card has elevation or not."}],attributes:[{type:{text:"boolean"},description:"Whether the card has an raised or not.",name:"raised"},{type:{text:"boolean"},description:"Removes the default padding from the card.",name:"no-padding"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-card",summary:"Cards are used to group related information and actions about a single subject.",customElement:!0}],exports:[{kind:"js",name:"CardComponent",declaration:{name:"CardComponent",module:"src/lib/card/card.ts"}}]},{kind:"javascript-module",path:"src/lib/checkbox/checkbox.ts",declarations:[{kind:"class",description:"",name:"CheckboxComponent",cssProperties:[{description:"The primary color of the checkbox.",name:"--forge-theme-tertiary"},{description:"The color of the checkmark and indeterminate mark.",name:"--forge-theme-on-tertiary"},{description:"The primary color of the checkbox.",name:"--forge-checkbox-primary-color"},{description:"The inline and block size of the checkbox.",name:"--forge-checkbox-size"},{description:"The width of the checkbox border.",name:"--forge-checkbox-border-width"},{description:"The inline and block size of the state layer.",name:"--forge-checkbox-state-layer-size"},{description:"The inline and block size of the state layer when dense.",name:"--forge-checkbox-state-layer-dense-size"},{description:"The color of the checkbox background when unchecked and not indeterminate.",name:"--forge-checkbox-background"},{description:"The inline size of the checkbox.",name:"--forge-checkbox-width"},{description:"The block size of the checkbox.",name:"--forge-checkbox-height"},{description:"The width of the checkbox border when unchecked and not indeterminate.",name:"--forge-checkbox-unchecked-border-width"},{description:"The color of the checkbox border when unchecked and not indeterminate.",name:"--forge-checkbox-unchecked-border-color"},{description:"The shape of the checkbox.",name:"--forge-checkbox-shape"},{description:"The shadow of the checkbox.",name:"--forge-checkbox-elevation"},{description:"The space between the checkbox and label.",name:"--forge-checkbox-gap"},{description:"How the checkbox and label are distributed along their main axis.",name:"--forge-checkbox-justify"},{description:"Whether the checkbox and label are arranged along the inline or block axis.",name:"--forge-checkbox-direction"},{description:"The color of the checkbox background when checked or indeterminate.",name:"--forge-checkbox-checked-background"},{description:"The width of the checkbox border when checked or indeterminate.",name:"--forge-checkbox-checked-border-width"},{description:"The color of the checkbox border when checked or indeterminate.",name:"--forge-checkbox-checked-border-color"},{description:"The color of the checkmark and indeterminate mark.",name:"--forge-checkbox-icon-color"},{description:"The color of the checkmark mark.",name:"--forge-checkbox-icon-checked-color"},{description:"The color of the indeterminate mark.",name:"--forge-checkbox-icon-indeterminate-color"},{description:"The stroke width of the checkmark and indeterminate marks.",name:"--forge-checkbox-icon-stroke-width"},{description:"The inline size of the state layer.",name:"--forge-checkbox-state-layer-width"},{description:"The inline size of the state layer.",name:"--forge-checkbox-state-layer-width"},{description:"The block size of the state layer.",name:"--forge-checkbox-state-layer-height"},{description:"The color of the state layer when checked.",name:"--forge-checkbox-state-layer-checked-color"},{description:"The color of the state layer when unchecked.",name:"--forge-checkbox-state-layer-unchecked-color"},{description:"The shape of the state layer.",name:"--forge-checkbox-state-layer-shape"},{description:"The inline size of the state layer when dense.",name:"--forge-checkbox-state-layer-dense-width"},{description:"The block size of the state layer when dense.",name:"--forge-checkbox-state-layer-dense-height"},{description:"The opacity when disabled.",name:"--forge-checkbox-disabled-opacity"},{description:"The duration of animations.",name:"--forge-checkbox-animation-duration"},{description:"The timing function of the background animations.",name:"--forge-checkbox-background-animation-timing"},{description:"The timing function of the checked and indeterminate icons animations.",name:"--forge-checkbox-icon-animation-timing"}],cssParts:[{description:"Styles the root element.",name:"root"},{description:"Styles the checkbox background element.",name:"background"},{description:"Styles the checkmark element.",name:"checkmark"},{description:"Styles the indeterminate mark element.",name:"mixedmark"},{description:"Styles the label element.",name:"label"},{description:"Styles the state layer element.",name:"state-layer"},{description:"Styles the focus indicator element.",name:"focus-indicator"}],members:[{kind:"method",name:"setFormValue",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"FormValue | null"}},{name:"state",optional:!0,type:{text:"FormValue | null | undefined"}}]},{kind:"field",name:"checked",type:{text:"boolean"},privacy:"public",description:"Whether the checkbox is checked."},{kind:"field",name:"defaultChecked",type:{text:"boolean"},privacy:"public",description:"Whether the checkbox is checked by default."},{kind:"field",name:"indeterminate",type:{text:"boolean"},privacy:"public",description:"Toggles the indeterminate state. This does not affect whether the checkbox is checked or its form submission."},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The value of the checkbox when checked."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"The density state."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Controls if the checkbix is disabled."},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",description:"= Controls if the checkbox is required."},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"= Controls if the checkbox is readonly."},{kind:"field",name:"labelPosition",type:{text:"SwitchLabelPosition"},privacy:"public",description:"Whether the label appears before or after the checkbox."},{kind:"method",name:"toggle",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"force",optional:!0,type:{text:"boolean"},description:"Whether to set the checkbox checked or unchecked."}],description:"Toggles the checkbox checked or unchecked."}],events:[{type:{text:"Event"},description:"Dispatches when the checkbox is checked or unchecked.",name:"change"}],attributes:[{type:{text:"string"},description:"Controls whether the checkbox is checked.",name:"checked"},{type:{text:"string"},description:"Controls whether the checkbox is checked by default.",name:"defaultChecked"},{type:{text:"string"},description:"Controls the indeterminate state.",name:"indeterminate"},{type:{text:"string"},description:"The value of the checkbox when checked.",name:"value"},{type:{text:"string"},description:"Controls if the switch is disabled.",name:"disabled"},{type:{text:"string"},description:"Controls if the switch is required.",name:"required"},{type:{text:"string"},description:"Controls if the switch is readonly.",name:"readonly"},{type:{text:"string"},description:"Sets the density state.",name:"dense"},{type:{text:"string"},description:"Sets whether the label appears before or after the switch.",name:"label-position"}],mixins:[{name:"WithFormAssociation",module:"/src/lib/core/mixins/form/with-form-associated"},{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"},{name:"WithFocusable",module:"/src/lib/core/mixins/focus/with-focusable"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core"},tagName:"forge-checkbox",summary:"Checkboxes select single values for submission in a form.",customElement:!0}],exports:[{kind:"js",name:"CheckboxComponent",declaration:{name:"CheckboxComponent",module:"src/lib/checkbox/checkbox.ts"}}]},{kind:"javascript-module",path:"src/lib/chip-field/chip-field.ts",declarations:[{kind:"class",description:"",name:"ChipFieldComponent",members:[{kind:"field",name:"addOnBlur",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverTargetElement",type:{text:"HTMLElement"},privacy:"public",readonly:!0},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}}},{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"popoverExpanded",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}],inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}}],superclass:{name:"BaseField",module:"/src/lib/field/base/base-field"},tagName:"forge-chip-field",customElement:!0}],exports:[{kind:"js",name:"ChipFieldComponent",declaration:{name:"ChipFieldComponent",module:"src/lib/chip-field/chip-field.ts"}}]},{kind:"javascript-module",path:"src/lib/circular-progress/circular-progress.ts",declarations:[{kind:"class",description:"",name:"CircularProgressComponent",cssProperties:[{description:"The height and width of the indicator container.",name:"--forge-circular-progress-size"},{description:"The padding inside the bounding box of the container.",name:"--forge-circular-progress-padding"},{description:"The track indicator width.",name:"--forge-circular-progress-track-width"},{description:"The track background color.",name:"--forge-circular-progress-track-color"},{description:"The track indicator color.",name:"--forge-circular-progress-indicator-color"},{description:"The duration of the arc animation.",name:"--forge-circular-progress-arc-duration"},{description:"The duration of the theme transition.",name:"--forge-circular-progress-theme-transition-duration"},{description:"The easing function to use for the theme transition.",name:"--forge-circular-progress-theme-transition-timing"}],cssParts:[{description:"Styles the progress bar container element",name:"progressbar"}],slots:[{description:"The is the default/unnamed slot. Renders content at the center of the progress indicator.",name:""}],members:[{kind:"field",name:"determinate",type:{text:"boolean"},privacy:"public",description:"Controls the determinate state."},{kind:"field",name:"progress",type:{text:"number"},privacy:"public",description:"Controls the progress while in a determinate state. Accepts values from `0` to `1`."},{kind:"field",name:"theme",type:{text:"CircularProgressTheme"},privacy:"public",description:"Controls the theme of the progress indicator."},{kind:"field",name:"track",type:{text:"boolean"},privacy:"public",description:"Controls the visibility of the track background."}],attributes:[{type:{text:"boolean"},description:"Controls the determinate state.",name:"determinate"},{type:{text:"number"},description:"Controls the progress while in a determinate state. Accepts values from `0` to `1`.",name:"progress"},{type:{text:"CircularProgressTheme"},description:"Controls the theme of the progress indicator.",name:"theme"},{type:{text:"boolean"},description:"Controls the visibility of the track background.",name:"track"}],mixins:[{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-circular-progress",summary:"Circular progress indicators display progress by animating along a circular track in a clockwise direction.",customElement:!0}],exports:[{kind:"js",name:"CircularProgressComponent",declaration:{name:"CircularProgressComponent",module:"src/lib/circular-progress/circular-progress.ts"}}]},{kind:"javascript-module",path:"src/lib/color-picker/color-picker-gradient-slider.ts",declarations:[{kind:"class",description:"",name:"ColorPickerGradientSlider",members:[{kind:"field",name:"_xPercent",type:{text:"number"},privacy:"private"},{kind:"field",name:"_yPercent",type:{text:"number"},privacy:"private"},{kind:"field",name:"_thumbElement",type:{text:"HTMLElement"},privacy:"private"},{kind:"field",name:"_keydownListener",type:{text:"(evt: KeyboardEvent) => void"},privacy:"private"},{kind:"field",name:"_downListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"field",name:"_moveListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"field",name:"_upListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"method",name:"destroy",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"setValue",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"saturation",type:{text:"number"}},{name:"value",type:{text:"number"}}]},{kind:"method",name:"_initialize",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_listen",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_unlisten",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_onKeydown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"_onDown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_onMove",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_onUp",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_updateThumbPosition",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_calculateSliderPercent",privacy:"private",return:{type:{text:"{ x: number; y: number; width: number; height: number }"}},parameters:[{name:"absX",type:{text:"number"}},{name:"absY",type:{text:"number"}}]},{kind:"method",name:"_setThumbPosition",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"xPercent",type:{text:"number"}},{name:"yPercent",type:{text:"number"}}]},{kind:"method",name:"_notify",privacy:"private",return:{type:{text:"void"}}}]}],exports:[{kind:"js",name:"ColorPickerGradientSlider",declaration:{name:"ColorPickerGradientSlider",module:"src/lib/color-picker/color-picker-gradient-slider.ts"}}]},{kind:"javascript-module",path:"src/lib/color-picker/color-picker-slider.ts",declarations:[{kind:"class",description:"",name:"ColorPickerSlider",members:[{kind:"field",name:"_percent",type:{text:"number"},privacy:"private",default:"1"},{kind:"field",name:"_min",type:{text:"number"},privacy:"private",default:"0"},{kind:"field",name:"_max",type:{text:"number"},privacy:"private",default:"1"},{kind:"field",name:"_step",type:{text:"number"},privacy:"private",default:"0.01"},{kind:"field",name:"_thumbElement",type:{text:"HTMLElement"},privacy:"private"},{kind:"field",name:"_keydownListener",type:{text:"(evt: KeyboardEvent) => void"},privacy:"private"},{kind:"field",name:"_downListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"field",name:"_moveListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"field",name:"_upListener",type:{text:"(evt: MouseEvent & TouchEvent) => void"},privacy:"private"},{kind:"method",name:"destroy",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"setValue",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"number"}}]},{kind:"method",name:"_initialize",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_listen",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_unlisten",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_onKeydown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"_onDown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_onMove",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_onUp",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_updateThumbPosition",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"MouseEvent & TouchEvent"}}]},{kind:"method",name:"_calculateSliderPercent",privacy:"private",return:{type:{text:"number"}},parameters:[{name:"absX",type:{text:"number"}}]},{kind:"method",name:"_setThumbPosition",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"percent",type:{text:"number"}}]},{kind:"method",name:"_notify",privacy:"private",return:{type:{text:"void"}}}]}],exports:[{kind:"js",name:"ColorPickerSlider",declaration:{name:"ColorPickerSlider",module:"src/lib/color-picker/color-picker-slider.ts"}}]},{kind:"javascript-module",path:"src/lib/color-picker/color-picker.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-color-picker>` custom element.",name:"ColorPickerComponent",members:[{kind:"field",name:"value",type:{text:"string | null | undefined"},privacy:"public",description:"Gets/sets the value using hex format only."},{kind:"field",name:"rgba",type:{text:"IRGBA | null | undefined"},privacy:"public",description:"Gets/sets the value using rgba format."},{kind:"field",name:"hsva",type:{text:"IHSVA | null | undefined"},privacy:"public",description:"Gets/sets the value using hsva format."},{kind:"field",name:"opacity",type:{text:"number | null | undefined"},privacy:"public",description:"Gets/sets the opacity value, if `allowOpacity` is true."},{kind:"field",name:"allowOpacity",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether opacity is displayed and allowed be to changed."},{kind:"field",name:"debounceChangeEvent",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether change event has a debounce applied to avoid successive updates. Defaults to `false`."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-color-picker",customElement:!0}],exports:[{kind:"js",name:"ColorPickerComponent",declaration:{name:"ColorPickerComponent",module:"src/lib/color-picker/color-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/date-picker/date-picker.ts",declarations:[{kind:"class",description:"",name:"DatePickerComponent",members:[{kind:"field",name:"value",type:{text:"TPublicValue | null | undefined"},privacy:"public",description:"Gets/sets the value of the component.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"min",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the minimum date the calendar will allow.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"max",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the maximum date the calendar will allow.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabledDates",type:{text:"Date | Date[] | null | undefined"},privacy:"public",description:"Gets/sets the dates that are restricted from being selected.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the calendar dropdown is open.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the CSS classes that are applied to the popup element.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the date picker is disabled or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"masked",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the input mask is applied or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"maskFormat",type:{text:"string"},privacy:"public",description:"Gets/sets the mask format that displayed in the input. Default is `MM/DD/YYYY`",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showMaskFormat",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the mask format is displayed in the input or not. Only applies if `masked` is `true`.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"valueMode",type:{text:"DatePickerValueMode"},privacy:"public",description:"Gets/sets the type for the `value` property and `forge-date-picker-change` event.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"notifyInputValueChanges",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the native input will be notified of value changes via the `input` and `change` events.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"allowInvalidDate",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to allow an invalid date to be input. When true, the date picker will not clear out the value of the input if the date was invalid (i.e. could not be parsed).",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showToday",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the today button is visible in the popup.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showClear",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the clear button is visible in the popup.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"parseCallback",type:{text:"DatePickerParseCallback"},privacy:"public",description:"Sets the callback to use for parsing a date value string to a `Date` object.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"formatCallback",type:{text:"DatePickerFormatCallback"},privacy:"public",description:"Sets the callback to use for formatting `Date` value to a custom string format.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"prepareMaskCallback",type:{text:"DatePickerPrepareMaskCallback"},privacy:"public",description:"Sets the callback to use when altering default mask entry.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabledDaysOfWeek",type:{text:"DayOfWeek[]"},privacy:"public",description:"Sets the days of the week to disable from selection.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disableDayCallback",type:{text:"(date: Date) => boolean"},privacy:"public",description:"Sets the callback to use for testing whether a specific date should be disabled or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"yearRange",type:{text:"string"},privacy:"public",description:"Sets the year range.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"locale",type:{text:"string | undefined"},privacy:"public",description:"Sets the locale to use.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}}],superclass:{name:"BaseDatePickerComponent",module:"/src/lib/date-picker/base/base-date-picker"},tagName:"forge-date-picker",customElement:!0}],exports:[{kind:"js",name:"DatePickerComponent",declaration:{name:"DatePickerComponent",module:"src/lib/date-picker/date-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/date-range-picker/date-range-picker.ts",declarations:[{kind:"class",description:"The custom element class behind the `<forge-date-range-picker>` element.",name:"DateRangePickerComponent",members:[{kind:"field",name:"from",type:{text:"Date | string | null | undefined"},privacy:"public",description:'Gets/sets the "from" date range value.'},{kind:"field",name:"to",type:{text:"Date | string | null | undefined"},privacy:"public",description:'Gets/sets the "to" date range value.'},{kind:"field",name:"value",type:{text:"TPublicValue | null | undefined"},privacy:"public",description:"Gets/sets the value of the component.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"min",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the minimum date the calendar will allow.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"max",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the maximum date the calendar will allow.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabledDates",type:{text:"Date | Date[] | null | undefined"},privacy:"public",description:"Gets/sets the dates that are restricted from being selected.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the calendar dropdown is open.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the CSS classes that are applied to the popup element.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the date picker is disabled or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"masked",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the input mask is applied or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"maskFormat",type:{text:"string"},privacy:"public",description:"Gets/sets the mask format that displayed in the input. Default is `MM/DD/YYYY`",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showMaskFormat",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the mask format is displayed in the input or not. Only applies if `masked` is `true`.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"valueMode",type:{text:"DatePickerValueMode"},privacy:"public",description:"Gets/sets the type for the `value` property and `forge-date-picker-change` event.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"notifyInputValueChanges",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the native input will be notified of value changes via the `input` and `change` events.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"allowInvalidDate",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to allow an invalid date to be input. When true, the date picker will not clear out the value of the input if the date was invalid (i.e. could not be parsed).",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showToday",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the today button is visible in the popup.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"showClear",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the clear button is visible in the popup.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"parseCallback",type:{text:"DatePickerParseCallback"},privacy:"public",description:"Sets the callback to use for parsing a date value string to a `Date` object.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"formatCallback",type:{text:"DatePickerFormatCallback"},privacy:"public",description:"Sets the callback to use for formatting `Date` value to a custom string format.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"prepareMaskCallback",type:{text:"DatePickerPrepareMaskCallback"},privacy:"public",description:"Sets the callback to use when altering default mask entry.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disabledDaysOfWeek",type:{text:"DayOfWeek[]"},privacy:"public",description:"Sets the days of the week to disable from selection.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"disableDayCallback",type:{text:"(date: Date) => boolean"},privacy:"public",description:"Sets the callback to use for testing whether a specific date should be disabled or not.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"yearRange",type:{text:"string"},privacy:"public",description:"Sets the year range.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}},{kind:"field",name:"locale",type:{text:"string | undefined"},privacy:"public",description:"Sets the locale to use.",inheritedFrom:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}}],superclass:{name:"BaseDatePickerComponent",module:"/src/lib/date-picker/base/base-date-picker"},tagName:"forge-date-range-picker",customElement:!0}],exports:[{kind:"js",name:"DateRangePickerComponent",declaration:{name:"DateRangePickerComponent",module:"src/lib/date-range-picker/date-range-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/dialog/dialog.ts",declarations:[{kind:"class",description:"",name:"DialogComponent",cssProperties:[{description:"The background color of the dialog.",name:"--forge-dialog-background"},{description:"The shape of the dialog.",name:"--forge-dialog-shape"},{description:"The elevation of the dialog.",name:"--forge-dialog-elevation"},{description:"The spacing between elements inside the dialog.",name:"--forge-dialog-spacing"},{description:"The spacing at the start of the dialog block.",name:"--forge-dialog-block-start-spacing"},{description:"The spacing at the end of the dialog block.",name:"--forge-dialog-block-end-spacing"},{description:"The spacing at the start of the dialog inline.",name:"--forge-dialog-inline-start-spacing"},{description:"The spacing at the end of the dialog inline.",name:"--forge-dialog-inline-end-spacing"},{description:"The padding of the dialog.",name:"--forge-dialog-padding"},{description:"The width of the dialog.",name:"--forge-dialog-width"},{description:"The height of the dialog.",name:"--forge-dialog-height"},{description:"The minimum width of the dialog.",name:"--forge-dialog-min-width"},{description:"The maximum width of the dialog.",name:"--forge-dialog-max-width"},{description:"The minimum height of the dialog.",name:"--forge-dialog-min-height"},{description:"The maximum height of the dialog.",name:"--forge-dialog-max-height"},{description:"The z-index of the dialog.",name:"--forge-dialog-z-index"},{description:"The color of the move handle.",name:"--forge-dialog-move-handle-color"},{description:"The size of the move handle.",name:"--forge-dialog-move-handle-size"},{description:"The cursor style when hovering over the move handle.",name:"--forge-dialog-move-handle-hover-cursor"},{description:"The cursor style when the move handle is active.",name:"--forge-dialog-move-handle-active-cursor"},{description:"The spacing around the move handle.",name:"--forge-dialog-move-handle-spacing"},{description:"The duration of the move transition.",name:"--forge-dialog-move-transition-duration"},{description:"The easing function of the move transition.",name:"--forge-dialog-move-transition-easing"},{description:"The opacity of the dialog when it is being moved.",name:"--forge-dialog-moving-opacity"},{description:"The duration of the enter animation.",name:"--forge-dialog-enter-animation-duration"},{description:"The easing function of the enter animation.",name:"--forge-dialog-enter-animation-easing"},{description:"The duration of the exit animation.",name:"--forge-dialog-exit-animation-duration"},{description:"The easing function of the exit animation.",name:"--forge-dialog-exit-animation-easing"},{description:"The opacity of the dialog during zoom animation.",name:"--forge-dialog-zoom-opacity"},{description:"The scale of the dialog during zoom animation.",name:"--forge-dialog-zoom-scale"},{description:"The opacity of the dialog during fade animation.",name:"--forge-dialog-fade-opacity"},{description:"The opacity of the dialog during slide animation.",name:"--forge-dialog-slide-opacity"},{description:"The translation distance of the dialog during slide animation.",name:"--forge-dialog-slide-translate"},{description:"The opacity of the dialog backdrop.",name:"--forge-dialog-backdrop-opacity"},{description:"The elevation of non-modal dialogs.",name:"--forge-dialog-nonmodal-elevation"},{description:"The duration of the enter animation for fullscreen dialogs.",name:"--forge-dialog-fullscreen-enter-animation-duration"},{description:"The duration of the exit animation for fullscreen dialogs.",name:"--forge-dialog-fullscreen-exit-animation-duration"},{description:"The x-axis position of the dialog.",name:"--forge-dialog-position-x"},{description:"The y-axis position of the dialog.",name:"--forge-dialog-position-y"},{description:"The duration of the enter animation for preset sheet dialogs.",name:"--forge-dialog-preset-sheet-enter-animation-duration"},{description:"The duration of the exit animation for preset sheet dialogs.",name:"--forge-dialog-preset-sheet-exit-animation-duration"}],cssParts:[{description:"The dialog container element.",name:"root"},{description:"The backdrop element.",name:"backdrop"},{description:"The dialog surface element.",name:"surface"},{description:"The alignment container for the move handle.",name:"move-handle-container"},{description:"The move handle element.",name:"move-handle"},{description:"The move handle icon element.",name:"move-handle-icon"}],slots:[{description:"The content of the dialog.",name:""},{description:"The move handle content.",name:"move-handle"}],members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Indicates whether the dialog is open.",default:"false"},{kind:"field",name:"mode",type:{text:"DialogMode"},privacy:"public",description:"The mode of the dialog.",default:'"modal"'},{kind:"field",name:"type",type:{text:"DialogType"},privacy:"public",description:"The type of the dialog.",default:'"dialog"'},{kind:"field",name:"animationType",type:{text:"DialogAnimationType"},privacy:"public",description:"The animation type of the dialog.",default:'"zoom"'},{kind:"field",name:"preset",type:{text:"DialogPreset"},privacy:"public",description:"The preset design that the dialog will apply.",default:'"dialog"'},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public",description:"Indicates whether the dialog is dismissible via escape and backdrop click or not.",default:"false"},{kind:"field",name:"fullscreen",type:{text:"boolean"},privacy:"public",description:"Indicates whether the dialog is fullscreen or not.",default:"false"},{kind:"field",name:"trigger",type:{text:"string"},privacy:"public",description:"The selector of the element that triggers the dialog."},{kind:"field",name:"triggerElement",type:{text:"HTMLElement | null"},privacy:"public",description:"The element that triggers the dialog.",default:"null"},{kind:"field",name:"moveable",type:{text:"boolean"},privacy:"public",description:"Indicates whether the dialog is moveable or not.",default:"false"},{kind:"field",name:"positionStrategy",type:{text:"DialogPositionStrategy"},privacy:"public",description:"Controls whether the dialog is rendered relative to the viewport its nearest containing block.",default:'"viewport"'},{kind:"field",name:"sizeStrategy",type:{text:"DialogSizeStrategy"},privacy:"public",description:"Controls the block and/or inline size of the dialog. Defaults to the size of the content it contains.",default:'"content"'},{kind:"field",name:"placement",type:{text:"DialogPlacement"},privacy:"public",description:"The placement of the dialog.",default:'"center"'},{kind:"method",name:"show",privacy:"public",return:{type:{text:"void"}},description:"Shows the dialog."},{kind:"method",name:"hide",privacy:"public",return:{type:{text:"void"}},description:"Hides the dialog."}],events:[{type:{text:"CustomEvent<void>"},description:"Dispatched when the dialog is opened.",name:"forge-dialog-open"},{type:{text:"CustomEvent<void>"},description:"Dispatched when the dialog is closed.",name:"forge-dialog-close"},{type:{text:"CustomEvent<void>"},description:"Dispatched before the dialog is closed. This event is cancelable.",name:"forge-dialog-before-close"},{type:{text:"CustomEvent<IDialogMoveStartEventData>"},description:"Dispatched when the dialog is first moved.",name:"forge-dialog-move-start"},{type:{text:"CustomEvent<IDialogMoveEventData>"},description:"Dispatched when the dialog is being moved.",name:"forge-dialog-move"},{type:{text:"CustomEvent<void>"},description:"Dispatched when the dialog is done being moved.",name:"forge-dialog-move-end"}],attributes:[{type:{text:"boolean"},description:"Indicates whether the dialog is open.",name:"open",default:"false"},{type:{text:"DialogMode"},description:"The mode of the dialog.",name:"mode",default:'"modal"'},{type:{text:"DialogType"},description:"The type of the dialog.",name:"type",default:'"dialog"'},{type:{text:"DialogAnimationType"},description:"The animation type of the dialog.",name:"animationType",default:'"zoom"'},{type:{text:"DialogPreset"},description:"The preset design that the dialog will apply.",name:"preset",default:'"dialog"'},{type:{text:"boolean"},description:"Indicates whether the dialog is dismissible via escape and backdrop click or not.",name:"persistent",default:"false"},{type:{text:"boolean"},description:"Indicates whether the dialog is fullscreen or not.",name:"fullscreen",default:"false"},{type:{text:"string"},description:"The selector of the element that triggers the dialog.",name:"trigger"},{type:{text:"boolean"},description:"Indicates whether the dialog is moveable or not.",name:"moveable",default:"false"},{type:{text:"DialogPositionStrategy"},description:"Controls whether the dialog is rendered relative to the viewport its nearest containing block.",name:"positionStrategy",default:'"viewport"'},{type:{text:"DialogSizeStrategy"},description:"Controls the block and/or inline size of the dialog. Defaults to the size of the content it contains.",name:"sizeStrategy",default:'"content"'},{type:{text:"DialogPlacement"},description:"The placement of the dialog.",name:"placement",default:'"center"'}],mixins:[{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-dialog",summary:"Dialogs are temporary UI elements that are used to display information, ask for input, or confirm actions.",customElement:!0}],exports:[{kind:"js",name:"DialogComponent",declaration:{name:"DialogComponent",module:"src/lib/dialog/dialog.ts"}}]},{kind:"javascript-module",path:"src/lib/divider/divider.ts",declarations:[{kind:"class",description:"",name:"DividerComponent",cssProperties:[{description:"The color of the divider.",name:"--forge-divider-color"},{description:"The width of the divider.",name:"--forge-divider-width"},{description:"The border-style (dashed, solid) of the divider.",name:"--forge-divider-border-style"},{description:"The margin of divider.",name:"--forge-divider-margin"}],cssParts:[{description:"The root container element.",name:"root"}],members:[{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Controls if the divider is displayed vertically or horizontally."}],attributes:[{type:{text:"boolean"},description:"Controls if the divider is displayed vertically or horizontally.",name:"vertical"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-divider",summary:"Divider is used to separate elements.",customElement:!0}],exports:[{kind:"js",name:"DividerComponent",declaration:{name:"DividerComponent",module:"src/lib/divider/divider.ts"}}]},{kind:"javascript-module",path:"src/lib/expansion-panel/expansion-panel.ts",declarations:[{kind:"class",description:"",name:"ExpansionPanelComponent",cssProperties:[{description:"The duration of the open/close animation.",name:"--forge-expansion-animation-duration"},{description:"The easing function of the open/close animation.",name:"--forge-expansion-animation-easing"}],cssParts:[{description:"The root element of the panel.",name:"root"},{description:"The header of the panel.",name:"header"},{description:"The content of the panel.",name:"content"}],slots:[{description:"The content of the panel.",name:""},{description:"The header of the panel.",name:"header"}],members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether the panel is open or closed."},{kind:"field",name:"orientation",type:{text:"ExpansionPanelOrientation"},privacy:"public",description:"The orientation of the panel."},{kind:"field",name:"animationType",type:{text:"ExpansionPanelAnimationType"},privacy:"public",description:"The type of animation to use when opening/closing the panel."},{kind:"method",name:"toggle",privacy:"public",return:{type:{text:"void"}}}],events:[{description:"Event fired when the panel is toggled open or closed.",name:"forge-expansion-panel-toggle"},{description:"Event fired when the panel has finished animating when toggling.",name:"forge-expansion-panel-animation-complete"}],attributes:[{type:{text:"boolean"},description:"Whether the panel is open or closed.",name:"open"},{type:{text:"ExpansionPanelOrientation"},description:"The orientation of the panel.",name:"orientation"},{type:{text:"ExpansionPanelAnimationType"},description:"The type of animation to use when opening/closing the panel.",name:"animation-type"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-expansion-panel",summary:"Expansion panels provide progressive disclosure of content.",customElement:!0}],exports:[{kind:"js",name:"ExpansionPanelComponent",declaration:{name:"ExpansionPanelComponent",module:"src/lib/expansion-panel/expansion-panel.ts"}}]},{kind:"javascript-module",path:"src/lib/field/field.ts",declarations:[{kind:"class",description:"",name:"FieldComponent",cssProperties:[{description:"The color of content slotted into the default slot.",name:"--forge-field-text-color"},{description:"The margin on the inline axis of an inline positioned label.",name:"--forge-field-label-margin-inline"},{description:"The margin on the block axis of a block positioned label.",name:"--forge-field-label-margin-block"},{description:"The padding at the start and end of the inline axis of the container.",name:"--forge-field-container-padding-inline"},{description:"The padding at the start of the inline axis of the container.",name:"--forge-field-container-padding-inline-start"},{description:"The padding at the end of the inline axis of the container.",name:"--forge-field-container-padding-inline-end"},{description:"The spacing between elements within the container.",name:"--forge-field-container-gap"},{description:"The padding after the start slot.",name:"--forge-field-start-padding-inline-end"},{description:"The padding before the end slot.",name:"--forge-field-end-padding-inline-start"},{description:"The padding after the end slot.",name:"--forge-field-end-padding-inline-end"},{description:"The padding before the popover icon.",name:"--forge-field-popover-icon-padding-inline-start"},{description:"The padding after the popover icon.",name:"--forge-field-popover-icon-padding-inline-end"},{description:"The padding before and after the accessory slot.",name:"--forge-field-accessory-padding-inline"},{description:"The padding before the accessory slot.",name:"--forge-field-accessory-padding-inline-start"},{description:"The padding after the accessory slot.",name:"--forge-field-accessory-padding-inline-end"},{description:"The margin of the support text on the block axis.",name:"--forge-field-support-text-margin-block"},{description:"The spacing between the start and end support text.",name:"--forge-field-support-text-gap"},{description:"The padding before and after the support text.",name:"--forge-field-support-text-padding-inline"},{description:"The padding before the support text.",name:"--forge-field-support-text-padding-inline-start"},{description:"The padding after the support text.",name:"--forge-field-support-text-padding-inline-end"},{description:"The padding at the start and end of the inline axis of a rounded container.",name:"--forge-field-rounded-container-padding-inline"},{description:"The padding at the start of the inline axis of a rounded container.",name:"--forge-field-rounded-container-padding-inline-start"},{description:"The padding at the end of the inline axis of a rounded container.",name:"--forge-field-rounded-container-padding-inline-end"},{description:"The height of the container.",name:"--forge-field-height"},{description:'The height of the container at the "extra-small" density level.',name:"--forge-field-height-extra-small"},{description:'The height of the container at the "small" density level.',name:"--forge-field-height-small"},{description:'The height of the container at the "medium" density level.',name:"--forge-field-height-medium"},{description:'The height of the container at the "large" density level.',name:"--forge-field-height-large"},{description:'The height of the container at the "extra-large" density level.',name:"--forge-field-height-extra-large"},{description:'The height of the container at the "extra-small" density level with an inset label.',name:"--forge-field-inset-height-extra-small"},{description:'The height of the container at the "small" density level with an inset label.',name:"--forge-field-inset-height-small"},{description:'The height of the container at the "medium" density level with an inset label.',name:"--forge-field-inset-height-medium"},{description:'The height of the container at the "large" density level with an inset label.',name:"--forge-field-inset-height-large"},{description:'The height of the container at the "extra-large" density level with an inset label.',name:"--forge-field-inset-height-extra-large"},{description:"The border radius of the container.",name:"--forge-field-shape"},{description:"The border style used in variants that include borders in variants that include borders.",name:"--forge-field-border-style"},{description:"The border width used in variants that include borders in variants that include borders.",name:"--forge-field-border-width"},{description:"The border color used with the default theme in variants that include borders.",name:"--forge-field-border-color"},{description:"The border color used for the accessory border with the default theme in the tonal and raised variants.",name:"--forge-field-tonal-inner-border-color"},{description:"The block size of the inner border in the tonal and raised variants.",name:"--forge-field-inner-border-block-size"},{description:"The color of the non-inset label with the default theme.",name:"--forge-field-label-color"},{description:"The color of the inset label with the default theme.",name:"--forge-field-inset-label-color"},{description:"The border style used in the hover state in variants that include borders.",name:"--forge-field-hover-border-style"},{description:"The border width used in the hover state in variants that include borders.",name:"--forge-field-hover-border-width"},{description:"The border color used with the default theme in the hover state in variants that include borders.",name:"--forge-field-hover-border-color"},{description:"The color used for the invalid state.",name:"--forge-field-invalid-color"},{description:"The border style used for the invalid state in variants that include borders.",name:"--forge-field-invalid-border-style"},{description:"The border width used for the invalid state in variants that include borders.",name:"--forge-field-invalid-border-width"},{description:"The border color used for the invalid state in variants that include borders.",name:"--forge-field-invalid-border-color"},{description:"The border color used for the invalid state when hovering in variants that include borders.",name:"--forge-field-invalid-border-color-hover"},{description:"The background color used for the invalid state in the tonal, filled, and raised variants.",name:"--forge-field-invalid-surface-color"},{description:"The background color used for the invalid state when hovering in the tonal, filled, and raised variants.",name:"--forge-field-invalid-surface-color-hover"},{description:"The color of the label in the invalid state.",name:"--forge-field-invalid-label-color"},{description:"The color of elements on top of the invalid surface.",name:"--forge-field-invalid-on-surface-color"},{description:"The color of the inset label on the invalid surface.",name:"--forge-field-invalid-inset-label-on-surface-color"},{description:"The padding at the start and end of the inline axis of the container in the plain variant.",name:"--forge-field-plain-container-padding-inline"},{description:"The background color used with the default theme in the tonal variant.",name:"--forge-field-tonal-surface-color"},{description:"The text color color used with the default theme in the tonal variant.",name:"--forge-field-tonal-on-surface-color"},{description:"The background color used for the hover state with the default theme in the tonal variant.",name:"--forge-field-tonal-hover-color"},{description:"The background color used with the default theme in the filled variant.",name:"--forge-field-filled-surface-color"},{description:"The text color used with the default theme in the filled variant.",name:"--forge-field-filled-on-surface-color"},{description:"The box shadow of the container in the raised variant.",name:"--forge-field-raised-elevation"},{description:"The box shadow of the container in the raised variant when hovered or active.",name:"--forge-field-raised-active-elevation"},{description:"The background color used with the default theme in the raised variant.",name:"--forge-field-raised-surface-color"},{description:"The text color used with the default theme in the raised variant.",name:"--forge-field-raised-on-surface-color"},{description:"The text content rendered before the label when required.",name:"--forge-field-required-content"},{description:"The color of the required content.",name:"--forge-field-required-color"},{description:"The text content rendered after the label when optional.",name:"--forge-field-optional-content"},{description:"The color of the optional content.",name:"--forge-field-optional-color"},{description:"The duration of the popover icon's animation.",name:"--forge-field-popover-icon-transition-duration"},{description:"The timing function of the popover icon's animation.",name:"--forge-field-popover-icon-transition-timing"},{description:"The rotation of the popover icon when open.",name:"--forge-field-popover-icon-open-rotation"},{description:"Whether a multiline field can be resized and in which direction.",name:"--forge-field-multiline-resize"},{description:"The minimum inline size of a multiline field.",name:"--forge-field-multiline-min-inline-size"},{description:"The maximum inline size of a multiline field.",name:"--forge-field-multiline-max-inline-size"},{description:"The minimum block size of a multiline field.",name:"--forge-field-multiline-min-block-size"},{description:"The maximum block size of a multiline field.",name:"--forge-field-multiline-max-block-size"},{description:"The opacity of the field when disabled.",name:"--forge-field-disabled-opacity"},{description:"The background color of the field when disabled.",name:"--forge-field-disabled-background-color"},{description:"The border color of the field when disabled.",name:"--forge-field-disabled-border-color"},{description:"The duration of the border and background animations.",name:"--forge-field-container-animation-duration"},{description:"The timing function of the border and background animations.",name:"--forge-field-container-animation-timing"},{description:"The duration of the floating animation.",name:"--forge-field-floating-animation-duration"},{description:"The timing function of the floating animation.",name:"--forge-field-floating-animation-timing"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The label element.",name:"label"},{description:"The container element surrounding the input.",name:"container"},{description:"The element containing te input slot.",name:"input"},{description:"The element containing the start slot.",name:"start"},{description:"The element containing the end slot.",name:"end"},{description:"The popover icon element.",name:"popover-icon"},{description:"The element containing the accessory slot.",name:"accessory"},{description:"The support text element.",name:"support-text"},{description:"The element containing the support text start slot.",name:"support-text-start"},{description:"The element containing the support text end slot.",name:"support-text-end"},{description:"The focus indicator element.",name:"focus-indicator"}],slots:[{description:"The default/unnamed slot for the field's input.",name:""},{description:"Renders its content as a positioned label.",name:"label"},{description:"Typically reserved for content/icons that render logically before the default slot content.",name:"start"},{description:"Typically reserved content/icons that render logically after the default slot content.",name:"end"},{description:"Used for content such as a button that is logically connected to the field but should appear distinct from the input.",name:"accessory"},{description:"Used for content that provides additional information about the field. Aligns to the inline start of the field.",name:"support-text-start"},{description:"Used for content that provides additional information about the field. Aligns to the inline end of the field.",name:"support-text-end"}],members:[{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public",description:"The position of the label relative to the input area."},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public",description:"The alignment of the label relative to the input area."},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public",description:"Whether an inset positioned label is floated to the top of the container."},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",description:"Whether the field is in an invalid state."},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",description:"Whether the field is required."},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public",description:"Whether the field is optional."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether the field is disabled."},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public",description:"The variant of the field."},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public",description:"The theme of the field."},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public",description:"The border radius of the field's corners."},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public",description:"The density of the field."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:'Whether the field is at the "extra-small" density level.'},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",description:"Whether the field has a popover icon."},{kind:"field",name:"popoverExpanded",type:{text:"boolean"},privacy:"public",description:"Whether the field's popover icon is in the expanded orientation."},{kind:"field",name:"multiline",type:{text:"boolean"},privacy:"public",description:"Whether the field contains a multiline input."},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public",description:"Whether the field's support text is inset from either side."},{kind:"field",name:"focusIndicatorTargetElement",type:{text:"HTMLElement | null"},privacy:"public",description:"The element to attach the focus indicator to."},{kind:"field",name:"focusIndicatorFocusMode",type:{text:"FocusIndicatorFocusMode"},privacy:"public",description:"The focus mode to use on the focus indicator."},{kind:"field",name:"focusIndicatorAllowFocus",type:{text:"boolean"},privacy:"public",description:"Whether the focus indicator should render when the target element matches `:focus` instead of `:focus-visible`."},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}]}],events:[{type:{text:"CustomEvent<null>"},description:"Dispatches when the user clicks the popover icon.",name:"forge-field-popover-icon-click"}],attributes:[{type:{text:"FieldLabelPosition"},description:"The position of the label relative to the input area.",name:"label-position"},{type:{text:"FieldLabelAlignment"},description:"The alignment of the label relative to the input area.",name:"label-alignment"},{type:{text:"boolean"},description:"Whether an inset positioned label is floated to the top of the container.",name:"float-label"},{type:{text:"boolean"},description:"Whether the field is in an invalid state.",name:"invalid"},{type:{text:"boolean"},description:"Whether the field is required.",name:"required"},{type:{text:"boolean"},description:"Whether the field is optional.",name:"optional"},{type:{text:"boolean"},description:"Whether the field is disabled.",name:"disabled"},{type:{text:"FieldVariant"},description:"The variant of the field.",name:"variant"},{type:{text:"FieldTheme"},description:"The theme of the field.",name:"theme"},{type:{text:"FieldShape"},description:"The border radius of the field's corners.",name:"shape"},{type:{text:"Density"},description:"The density of the field.",name:"density"},{type:{text:"boolean"},description:'Whether the field is at the "extra-small" density level.',name:"dense"},{type:{text:"boolean"},description:"Whether the field has a popover icon.",name:"popover-icon"},{type:{text:"boolean"},description:"Whether the field's popover icon is in the expanded orientation.",name:"popover-expanded"},{type:{text:"boolean"},description:"Whether the field contains a multiline input.",name:"multiline"},{type:{text:"FieldSupportTextInset"},description:"Whether the field's support text is inset from either side.",name:"support-text-inset"},{type:{text:"string"},description:"The id of the element to attach the focus indicator to.",name:"focus-indicator-target"},{type:{text:"FocusIndicatorFocusMode"},description:"The focus mode to use on the focus indicator.",name:"focus-indicator-focus-mode"},{type:{text:"boolean"},description:"Whether the focus indicator should render when the target element matches `:focus` instead of `:focus-visible`.",name:"focus-indicator-allow-focus"}],superclass:{name:"BaseComponent",module:"/src/lib/core"},tagName:"forge-field",summary:`The Forge Field component is a basic component that handles the layout and theming of
form elements that can include a label, various states, and a border around an input area.`,customElement:!0}],exports:[{kind:"js",name:"FieldComponent",declaration:{name:"FieldComponent",module:"src/lib/field/field.ts"}}]},{kind:"javascript-module",path:"src/lib/file-picker/file-picker.ts",declarations:[{kind:"class",description:"",name:"FilePickerComponent",cssProperties:[{description:"Controls the background color.",name:"--forge-file-picker-background"},{description:"Controls the width.",name:"--forge-file-picker-width"},{description:"Controls the height.",name:"--forge-file-picker-height"},{description:"Controls the maximum width.",name:"--forge-file-picker-max-width"},{description:"Controls the border width.",name:"--forge-file-picker-border-width"},{description:"Controls the border style.",name:"--forge-file-picker-border-style"},{description:"Controls the border color.",name:"--forge-file-picker-border-color"},{description:"Controls gap between each element.",name:"--forge-file-picker-gap"},{description:"Controls the padding.",name:"--forge-file-picker-padding"},{description:"Controls the top and bottom padding.",name:"--forge-file-picker-padding-block"},{description:"Controls the left and right padding.",name:"--forge-file-picker-padding-inline"},{description:"Controls the opacity value of the file picker when it's disabled.",name:"--forge-file-picker-disabled-opacity"},{description:"Controls the background color of the file picker when dragging files into the form.",name:"--forge-file-picker-highlight-background"},{description:"Controls the border color of the file picker when dragging files into the form.",name:"--forge-file-picker-highlight-border-color"}],cssParts:[{description:"The <form> element at the root.",name:"form"},{description:"The container element around the primary slot.",name:"primary"},{description:"The container element around the secondary slot.",name:"secondary"},{description:'The <input type="file"> element.',name:"input"},{description:"The container around the helper-text slot.",name:"helper-text-container"}],members:[{kind:"field",name:"accept",type:{text:"string | null"},privacy:"public",description:"Gets/sets the allowed file types."},{kind:"field",name:"maxSize",type:{text:"string | null"},privacy:"public",description:"Gets/sets the maximum allowed file size."},{kind:"field",name:"capture",type:{text:"string | null"},privacy:"public",description:"Gets/sets the camera to use when capturing video or images."},{kind:"field",name:"multiple",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether multiple files are allowed."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the file picker is disabled."},{kind:"field",name:"compact",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the file picker uses the compact variant."},{kind:"field",name:"borderless",type:{text:"boolean"},privacy:"public",description:"Gets and sets whether the file picker is borderless."}],attributes:[{type:{text:"string | null"},description:"Gets/sets the allowed file types.",name:"accept"},{type:{text:"string | null"},description:"Gets/sets the maximum allowed file size.",name:"maxSize"},{type:{text:"string | null"},description:"Gets/sets the camera to use when capturing video or images.",name:"capture"},{type:{text:"boolean"},description:"Gets/sets whether multiple files are allowed.",name:"multiple"},{type:{text:"boolean"},description:"Gets/sets whether the file picker is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Gets/sets whether the file picker uses the compact variant.",name:"compact"},{type:{text:"boolean"},description:"Gets and sets whether the file picker is borderless.",name:"borderless"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-file-picker",summary:`The file-picker component allows for a user to upload files of their own to the system. The component provides a slot for a 
button, as well as drag-and-drop functionality to launch the system file chooser dialog. There are visual queues to let the 
user know when files they are dragging can be dropped, as well as events that are relayed to the developer to handle files 
that are legal and/or illegal based on the parameters set on the component.

The expectation of this component is that it will be used as a familiar element on the page that will let users upload files, 
while providing that visual and functional consistency.`,customElement:!0}],exports:[{kind:"js",name:"FilePickerComponent",declaration:{name:"FilePickerComponent",module:"src/lib/file-picker/file-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/floating-action-button/floating-action-button.ts",declarations:[{kind:"class",description:"",name:"FloatingActionButtonComponent",cssProperties:[{description:"The display property.",name:"--forge-fab-background-display"},{description:"The gap between the icon and the label.",name:"--forge-fab-gap"},{description:"The background color.",name:"--forge-fab-background"},{description:"The text color.",name:"--forge-fab-color"},{description:"The height and min-width of the button.",name:"--forge-fab-size"},{description:"The inline padding of the button.",name:"--forge-fab-padding"},{description:"The box shadow of the button.",name:"--forge-fab-shadow"},{description:"The box shadow of the button when hovered.",name:"--forge-fab-hover-shadow"},{description:"The box shadow of the button when active.",name:"--forge-fab-active-shadow"},{description:"The box shadow of the button when lowered.",name:"--forge-fab-lowered-shadow"},{description:"The box shadow of the button when lowered and hovered.",name:"--forge-fab-lowered-hover-shadow"},{description:"The box shadow of the button when lowered and active.",name:"--forge-fab-lowered-active-shadow"},{description:"The transition duration.",name:"--forge-fab-transition-duration"},{description:"The transition timing function.",name:"--forge-fab-transition-timing"},{description:"The border radius of the button.",name:"--forge-fab-shape"},{description:"The start-start border radius.",name:"--forge-fab-shape-start-start"},{description:"The start-end border radius.",name:"--forge-fab-shape-start-end"},{description:"The end-start border radius.",name:"--forge-fab-shape-end-start"},{description:"The end-end border radius.",name:"--forge-fab-shape-end-end"},{description:"The inline padding of the extended button.",name:"--forge-fab-extended-padding"},{description:"The min-width of the extended button.",name:"--forge-fab-extended-min-width"},{description:"The height and min-width of the small density button.",name:"--forge-fab-density-small-size"},{description:"The height and min-width of the medium density (default) button.",name:"--forge-fab-density-medium-size"},{description:"The height and min-width of the large density button.",name:"--forge-fab-density-large-size"},{description:"The cursor when disabled.",name:"--forge-fab-disabled-cursor"},{description:"The background color when disabled.",name:"--forge-fab-disabled-background"},{description:"The text color when disabled.",name:"--forge-fab-disabled-color"},{description:"The opacity when disabled.",name:"--forge-fab-disabled-opacity"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The focus-indicator indicator element.",name:"focus-indicator"},{description:"The state-layer surface element.",name:"state-layer"}],slots:[{description:"This is a default/unnamed slot. Typically used for icon-only or label-only FABs. If the content forces the width to be large than the height, then the FAB will be in extended mode.",name:""},{description:"An element to logically render at the start of the button content.",name:"start"},{description:"Reserved specifically for label text. This forces the button into extended mode.",name:"label"},{description:"An element to logically render at the end of the button content.",name:"end"}],members:[{kind:"field",name:"theme",type:{text:"ButtonTheme"},privacy:"public",description:"Sets the theme of the button."},{kind:"field",name:"density",type:{text:"FloatingActionButtonDensity"},privacy:"public",description:"Sets the density of the button."},{kind:"field",name:"elevation",type:{text:"FloatingActionButtonElevation"},privacy:"public",description:"Sets the elevation of the button."},{kind:"field",name:"type",type:{text:"ButtonType"},privacy:"public",description:"The type of button. Defaults to `button`. Valid values are `button`, `submit`, and `reset`.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is disabled.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",description:"Whether or not the button shows a built-in popover icon.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"name",type:{text:"string"},privacy:"public",description:"The name of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The form value of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is dense.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0,description:"The form reference of the button if within a `<form>` element.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}},description:"Clicks the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"ExperimentalFocusOptions"}}],description:"Focuses the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}}],events:[{description:"Fires when the button is clicked.",name:"click"}],attributes:[{type:{text:"string"},description:"Sets the theme of the button.",name:"theme"},{type:{text:"string"},description:"Sets the density of the button.",name:"density"},{type:{text:"string"},description:"Sets the elevation of the button.",name:"elevation"},{type:{text:"string"},description:"The type of button. Defaults to `button`. Valid values are `button`, `submit`, and `reset`.",name:"type"},{type:{text:"boolean"},description:"Whether or not the button is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether or not the button shows a built-in popover icon.",name:"popover-icon"},{type:{text:"string"},description:"The name of the button.",name:"name"},{type:{text:"string"},description:"The form value of the button.",name:"value"},{type:{text:"boolean"},description:"Whether or not the button is dense.",name:"dense"}],superclass:{name:"BaseButton",module:"/src/lib/button/base/base-button"},tagName:"forge-fab",summary:"Floating action buttons are used to represent the most important action on a page.",customElement:!0}],exports:[{kind:"js",name:"FloatingActionButtonComponent",declaration:{name:"FloatingActionButtonComponent",module:"src/lib/floating-action-button/floating-action-button.ts"}}]},{kind:"javascript-module",path:"src/lib/focus-indicator/focus-indicator.ts",declarations:[{kind:"class",description:"",name:"FocusIndicatorComponent",cssProperties:[{description:"The width of the focus indicator when active. When animating this is the max extent.",name:"--forge-focus-indicator-active-width"},{description:"The color of the focus indicator.",name:"--forge-focus-indicator-color"},{description:"The animation duration.",name:"--forge-focus-indicator-duration"},{description:"The offset of the focus indicator when outward.",name:"--forge-focus-indicator-outward-offset"},{description:"The offset of the focus indicator when inward.",name:"--forge-focus-indicator-inward-offset"},{description:"The shape of the focus indicator.",name:"--forge-focus-indicator-shape"},{description:"The width of the focus indicator when resting.",name:"--forge-focus-indicator-width"},{description:"The start start shape.",name:"--forge-focus-indicator-shape-start-start"},{description:"The start end shape.",name:"--forge-focus-indicator-shape-start-end"},{description:"The end start shape.",name:"--forge-focus-indicator-shape-end-start"},{description:"The end end shape.",name:"--forge-focus-indicator-shape-end-end"},{description:"The block offset.",name:"--forge-focus-indicator-offset-block"},{description:"The inline offset.",name:"--forge-focus-indicator-offset-inline"}],cssParts:[{description:"The focus indicator element.",name:"indicator"}],members:[{kind:"field",name:"targetElement",type:{text:"HTMLElement"},privacy:"public",description:"The element to attach the focus indicator to."},{kind:"field",name:"target",type:{text:"string"},privacy:"public",description:"The id of the element to attach the focus indicator to."},{kind:"field",name:"active",type:{text:"boolean"},privacy:"public",description:"Controls whether the indicator is active."},{kind:"field",name:"inward",type:{text:"boolean"},privacy:"public",description:"Controls whether the indicator renders inward."},{kind:"field",name:"circular",type:{text:"boolean"},privacy:"public",description:"Controls whether the indicator renders circular."},{kind:"field",name:"allowFocus",type:{text:"boolean"},privacy:"public",description:"Controls whether the indicator renders when the target element matches `:focus` instead of `:focus-visible`."},{kind:"field",name:"focusMode",type:{text:"FocusIndicatorFocusMode"},privacy:"public",description:"The focus mode to use. Defaults to `focusin`."}],attributes:[{type:{text:"string"},description:"The id of the element to attach the focus indicator to.",name:"target"},{type:{text:"boolean"},description:"Controls whether the indicator is active.",name:"active"},{type:{text:"boolean"},description:"Controls whether the indicator renders inward.",name:"inward"},{type:{text:"boolean"},description:"Controls whether the indicator renders circular.",name:"circular"},{type:{text:"boolean"},description:"Controls whether the indicator renders when the target element matches `:focus` instead of `:focus-visible`.",name:"allow-focus"},{type:{text:"FocusIndicatorFocusMode"},description:"The focus mode to use. Defaults to `focusin`.",name:"focus-mode"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-focus-indicator",summary:"Renders a focus indicator when an attached element matches `:focus-visible`.",customElement:!0}],exports:[{kind:"js",name:"FocusIndicatorComponent",declaration:{name:"FocusIndicatorComponent",module:"src/lib/focus-indicator/focus-indicator.ts"}}]},{kind:"javascript-module",path:"src/lib/icon/icon-registry.ts",declarations:[{kind:"class",description:"The registry for SVG icon instances being used within the current context.",name:"IconRegistry",members:[{kind:"field",name:"_icons",type:{text:"Map<string, IIconDescriptor>"},privacy:"private",static:!0,readonly:!0},{kind:"field",name:"_listeners",privacy:"private",static:!0,default:"new Map<string, Array<() => void>>()"},{kind:"method",name:"define",privacy:"public",static:!0,return:{type:{text:"void"}},parameters:[{name:"icon",type:{text:"IIcon | IIcon[] | string"},description:"The icon(s) to register."},{name:"svgData",optional:!0,type:{text:"string"}}],description:"Defines a new icon."},{kind:"method",name:"remove",privacy:"public",static:!0,return:{type:{text:"void"}},parameters:[{name:"icon",type:{text:"IIcon | string"},description:"The icon to unregister."}],description:"Removes a defined icon."},{kind:"method",name:"removeListener",privacy:"public",static:!0,return:{type:{text:"void"}},parameters:[{name:"key",type:{text:"string"},description:"The icon name."},{name:"listener",type:{text:"() => void"},description:"The listener callback."}],description:"Removes a listener"},{kind:"method",name:"clear",privacy:"public",static:!0,return:{type:{text:"void"}},description:"Removes all defined icons."},{kind:"method",name:"get",privacy:"public",static:!0,return:{type:{text:"IIconDescriptor | undefined"}},parameters:[{name:"name",type:{text:"string"}}],description:"Gets the icon data by its name, or `undefined` if not found."},{kind:"method",name:"setNode",privacy:"public",static:!0,return:{type:{text:"void"}},parameters:[{name:"name",type:{text:"string"}},{name:"node",type:{text:"SVGElement"}}],description:"Sets the icon node for a given icon name."},{kind:"method",name:"getIconNames",privacy:"public",static:!0,return:{type:{text:"string[]"}},description:"Gets the names of registered icons."},{kind:"method",name:"awaitIcon",privacy:"public",static:!0,return:{type:{text:"void"}},parameters:[{name:"key",type:{text:"string"}},{name:"listener",type:{text:"() => void"}}],description:"Registers a listener to be notified when an icon with the provided key is registered in the future."},{kind:"field",name:"size",type:{text:"number"},privacy:"public",static:!0,description:"Gets the number of defined icons in the registry.",readonly:!0},{kind:"method",name:"_register",privacy:"private",static:!0,return:{type:{text:"void"}},parameters:[{name:"key",type:{text:"string"}},{name:"value",type:{text:"string"}}],description:"Registers an icon, and attempts to invalidate any listeners."},{kind:"method",name:"_invalidateListeners",privacy:"private",static:!0,return:{type:{text:"void"}},parameters:[{name:"key",type:{text:"string"}}],description:"Gets all listeners for a specific key, calls the listeners (if any are found), and removes the listeners after they are called."},{kind:"method",name:"_parseIcon",privacy:"private",static:!0,return:{type:{text:"IIcon"}},parameters:[{name:"icon",type:{text:"IIcon | string"}},{name:"data",default:"''"}],description:"Normalizes incoming parameters to an `IIcon` type."},{kind:"method",name:"_isIconObject",privacy:"private",static:!0,return:{type:{text:"icon is IIcon"}},parameters:[{name:"icon",type:{text:"any"}}],description:"Determines if the provided `icon` matches the `IIcon` shape."}]}],exports:[{kind:"js",name:"IconRegistry",declaration:{name:"IconRegistry",module:"src/lib/icon/icon-registry.ts"}}]},{kind:"javascript-module",path:"src/lib/icon/icon.ts",declarations:[{kind:"class",description:"",name:"IconComponent",cssProperties:[{description:"The color of the icon.",name:"--forge-icon-color"},{description:"The size of the icon. Defaults to the font-size of the context it is placed in.",name:"--forge-icon-size"},{description:"The width of the icon.",name:"--forge-icon-width"},{description:"The height of the icon.",name:"--forge-icon-height"},{description:"The font size of the icon.",name:"--forge-icon-font-size"}],cssParts:[{description:"The internal SVG element.",name:"svg"}],members:[{kind:"field",name:"name",type:{text:"string"},privacy:"public",description:"The name of the icon to render."},{kind:"field",name:"src",type:{text:"string"},privacy:"public",description:"Provides the ability to set the SVG string content directly."},{kind:"field",name:"lazy",type:{text:"boolean"},privacy:"public",description:"Controls whether the icon will be loaded dynamically when it comes into view. False by default."},{kind:"field",name:"external",type:{text:"boolean"},privacy:"public",description:"Controls whether external network requests are allowed for this icon. Only pertains for icons that aren't already defined in the registry."},{kind:"field",name:"externalType",type:{text:"IconExternalType"},privacy:"public",description:'The type of icon to load externally. Possible values: "standard" (default), "extended", "custom".'},{kind:"field",name:"externalUrlBuilder",type:{text:"IconUrlBuilder"},privacy:"public",description:"A callback that can be provided to generate a URL that will be used to fetch an SVG icon."},{kind:"field",name:"viewbox",type:{text:"string"},privacy:"public",description:"A custom value to apply to the `viewBox` attribute on the internal `<svg>` element."},{kind:"field",name:"theme",type:{text:"IconTheme"},privacy:"public",description:"The theme to apply to the icon."},{kind:"method",name:"layout",privacy:"public",return:{type:{text:"void"}},description:"Forces a reload of the icon."}],attributes:[{type:{text:"string"},description:"The name of the icon to render.",name:"name"},{type:{text:"string"},description:"Provides the ability to set the SVG string content directly.",name:"src"},{type:{text:"boolean"},description:"Controls whether the icon will be loaded dynamically when it comes into view. False by default.",name:"lazy"},{type:{text:"boolean"},description:"Controls whether external network requests are allowed for this icon. Only pertains for icons that aren't already defined in the registry.",name:"external"},{type:{text:"IconExternalType"},description:'The type of icon to load externally. Possible values: "standard" (default), "extended", "custom".',name:"externalType"},{type:{text:"string"},description:"A custom value to apply to the `viewBox` attribute on the internal `<svg>` element.",name:"viewbox"},{type:{text:"IconTheme"},description:"The theme to apply to the icon.",name:"theme"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-icon",summary:"Icons are used to represent information visually",customElement:!0}],exports:[{kind:"js",name:"IconComponent",declaration:{name:"IconComponent",module:"src/lib/icon/icon.ts"}}]},{kind:"javascript-module",path:"src/lib/icon-button/icon-button.ts",declarations:[{kind:"class",description:"",name:"IconButtonComponent",cssProperties:[{description:"The display property of the button.",name:"--forge-icon-button-display"},{description:"The height and min-width of the button.",name:"--forge-icon-button-size"},{description:"The gap between the icon content.",name:"--forge-icon-button-gap"},{description:"The color of the icon.",name:"--forge-icon-button-icon-color"},{description:"The background color of the button.",name:"--forge-icon-button-background-color"},{description:"The size of the icon.",name:"--forge-icon-button-icon-size"},{description:"The cursor of the button.",name:"--forge-icon-button-cursor"},{description:"The inline padding of the button.",name:"--forge-icon-button-padding"},{description:"The border of the button.",name:"--forge-icon-button-border"},{description:"The shadow of the button.",name:"--forge-icon-button-shadow"},{description:"The transition duration of the button.",name:"--forge-icon-button-transition-duration"},{description:"The transition timing of the button.",name:"--forge-icon-button-transition-timing"},{description:"The shape of the button.",name:"--forge-icon-button-shape"},{description:"The start-start border-radius of the button.",name:"--forge-icon-button-shape-start-start"},{description:"The start-end border-radius of the button.",name:"--forge-icon-button-shape-start-end"},{description:"The end-start border-radius of the button.",name:"--forge-icon-button-shape-end-start"},{description:"The end-end border-radius of the button.",name:"--forge-icon-button-shape-end-end"},{description:"The squared border-radius of the button.",name:"--forge-icon-button-shape-squared"},{description:"The border width when in the outlined variant.",name:"--forge-icon-button-outlined-border-width"},{description:"The border style when in the outlined variant.",name:"--forge-icon-button-outlined-border-style"},{description:"The border color when in the outlined variant.",name:"--forge-icon-button-outlined-border-color"},{description:"The icon color when in the tonal variant.",name:"--forge-icon-button-tonal-icon-color"},{description:"The background color when in the tonal variant.",name:"--forge-icon-button-tonal-background-color"},{description:"The icon color when in the filled variant.",name:"--forge-icon-button-filled-icon-color"},{description:"The background color when in the filled variant.",name:"--forge-icon-button-filled-background-color"},{description:"The shadow when in the raised variant.",name:"--forge-icon-button-raised-shadow"},{description:"The shadow when in the raised variant and hovered.",name:"--forge-icon-button-raised-hover-shadow"},{description:"The shadow when in the raised variant and active.",name:"--forge-icon-button-raised-active-shadow"},{description:"The shadow when in the raised variant and disabled.",name:"--forge-icon-button-raised-disabled-shadow"},{description:"The size of the button when in the small density.",name:"--forge-icon-button-density-small-size"},{description:"The padding of the button when in the small density.",name:"--forge-icon-button-density-small-padding"},{description:"The size of the icon when in the small density.",name:"--forge-icon-button-density-small-icon-size"},{description:"The size of the button when in the medium density.",name:"--forge-icon-button-density-medium-size"},{description:"The padding of the button when in the medium density.",name:"--forge-icon-button-density-medium-padding"},{description:"The size of the button when in the large density.",name:"--forge-icon-button-density-large-size"},{description:"The color of the icon when in toggle mode and toggled on.",name:"--forge-icon-button-toggle-on-icon-color"},{description:"The background color when in the outlined variant and toggled on.",name:"--forge-icon-button-outlined-toggle-on-background-color"},{description:"The icon color when in the outlined variant and toggled on.",name:"--forge-icon-button-outlined-toggle-on-icon-color"},{description:"The background color when in the tonal variant and toggled.",name:"--forge-icon-button-tonal-toggle-background-color"},{description:"The background color when in the tonal variant and toggled on.",name:"--forge-icon-button-tonal-toggle-on-background-color"},{description:"The icon color when in the tonal variant and toggled on.",name:"--forge-icon-button-tonal-toggle-on-icon-color"},{description:"The background color when in the filled variant and toggled.",name:"--forge-icon-button-filled-toggle-background-color"},{description:"The icon color when in the filled variant and toggled.",name:"--forge-icon-button-filled-toggle-icon-color"},{description:"The background color when in the filled variant and toggled on.",name:"--forge-icon-button-filled-toggle-on-background-color"},{description:"The icon color when in the filled variant and toggled on.",name:"--forge-icon-button-filled-toggle-on-icon-color"},{description:"The cursor when the button is disabled.",name:"--forge-icon-button-disabled-cursor"},{description:"The opacity when the button is disabled.",name:"--forge-icon-button-disabled-opacity"},{description:"The padding of the popover icon.",name:"--forge-icon-button-popover-icon-padding"},{description:"The color of the focus indicator.",name:"--forge-icon-button-focus-indicator-color"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The focus-indicator indicator element.",name:"focus-indicator"},{description:"The state-layer surface element.",name:"state-layer"}],slots:[{description:"This is a default/unnamed slot for the icon.",name:""},{description:'The icon to show when in `toggle` mode when toggled "on".',name:"on"},{description:"Elements to logically render before the icon.",name:"start"},{description:"Elements to logically render after the icon.",name:"end"},{description:"Absolutely positions the element in the top-end corner of the button (typically reserved for badge-like content).",name:"badge"}],members:[{kind:"field",name:"toggle",type:{text:"boolean"},privacy:"public",description:"Whether or not the icon button can be toggled."},{kind:"field",name:"on",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is on. Only applies when `toggle` is `true`."},{kind:"field",name:"theme",type:{text:"IconButtonTheme"},privacy:"public",description:"The theme of the button. Valid values are `primary`, `secondary`, `tertiary`, `success`, `error`, `warning`, `info`."},{kind:"field",name:"variant",type:{text:"IconButtonVariant"},privacy:"public",description:"The variant of the button. Valid values are `text`, `outlined`, `filled`, and `raised`."},{kind:"field",name:"shape",type:{text:"string"},privacy:"public",description:"The shape of the button. Valid values are `circular` and `squared`."},{kind:"field",name:"density",type:{text:"IconButtonDensity"},privacy:"public",description:"The density of the button. Valid values are `small`, `medium`, and `large`."},{kind:"field",name:"type",type:{text:"ButtonType"},privacy:"public",description:"The type of button. Defaults to `button`. Valid values are `button`, `submit`, and `reset`.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is disabled.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",description:"Whether or not the button shows a built-in popover icon.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"name",type:{text:"string"},privacy:"public",description:"The name of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The form value of the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is dense.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0,description:"The form reference of the button if within a `<form>` element.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}},description:"Clicks the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"ExperimentalFocusOptions"}}],description:"Focuses the button.",inheritedFrom:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}}],events:[{type:{text:"Event"},description:"Fires when the button is clicked.",name:"click"},{type:{text:"Event"},description:"Fires when the icon button is toggled.",name:"forge-icon-button-toggle"}],attributes:[{type:{text:"boolean"},description:"Whether or not the icon button can be toggled.",name:"toggle"},{type:{text:"boolean"},description:"Whether or not the button is on. Only applies when `toggle` is `true`.",name:"on"},{type:{text:"IconButtonVariant"},description:"The variant of the button. Valid values are `text`, `outlined`, `filled`, and `raised`.",name:"variant"},{type:{text:"IconButtonTheme"},description:"The theme of the button. Valid values are `primary`, `secondary`, `tertiary`, `success`, `error`, `warning`, `info`.",name:"theme"},{type:{text:"string"},description:"The shape of the button. Valid values are `circular` and `squared`.",name:"shape"},{type:{text:"IconButtonDensity"},description:"The density of the button. Valid values are `small`, `medium`, and `large`.",name:"density"},{type:{text:"string"},description:"The type of button. Defaults to `button`. Valid values are `button`, `submit`, and `reset`.",name:"type"},{type:{text:"boolean"},description:"Whether or not the button is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether or not the button shows a built-in popover icon.",name:"popover-icon"},{type:{text:"string"},description:"The name of the button.",name:"name"},{type:{text:"string"},description:"The form value of the button.",name:"value"},{type:{text:"boolean"},description:"Whether or not the button is dense.",name:"dense"}],superclass:{name:"BaseButton",module:"/src/lib/button/base/base-button"},tagName:"forge-icon-button",summary:"Icons buttons are used to trigger an action or event.",customElement:!0}],exports:[{kind:"js",name:"IconButtonComponent",declaration:{name:"IconButtonComponent",module:"src/lib/icon-button/icon-button.ts"}}]},{kind:"javascript-module",path:"src/lib/inline-message/inline-message.ts",declarations:[{kind:"class",description:"",name:"InlineMessageComponent",cssProperties:[{description:"The background color.",name:"--forge-inline-message-background"},{description:"The text color.",name:"--forge-inline-message-color"},{description:"The shape (border) radius.",name:"--forge-inline-message-shape"},{description:"The padding around the content.",name:"--forge-inline-message-padding"},{description:"The inline padding around the content.",name:"--forge-inline-message-padding-inline"},{description:"The block padding around the content.",name:"--forge-inline-message-padding-block"},{description:"The border width.",name:"--forge-inline-message-border-width"},{description:"The border style. Defaults to `none`.",name:"--forge-inline-message-border-style"},{description:"The border color.",name:"--forge-inline-message-border-color"},{description:"The gap/space between the content elements.",name:"--forge-inline-message-gap"},{description:"The gap/space between the icon and the content.",name:"--forge-inline-message-icon-gap"},{description:"The gap/space between the title and the message.",name:"--forge-inline-message-content-gap"},{description:"The icon color.",name:"--forge-inline-message-icon-color"}],cssParts:[{description:"The root layout element.",name:"root"},{description:"The container element for the title and message content.",name:"container"}],slots:[{description:"The message text.",name:""},{description:"The title of the inline message.",name:"title"},{description:"The icon to display.",name:"icon"}],members:[{kind:"field",name:"theme",type:{text:"InlineMessageTheme"},privacy:"public",description:'The theme to apply. Defaults to `"info"`.'}],attributes:[{type:{text:"InlineMessageTheme"},description:'The theme to apply. Defaults to `"info"`.',name:"theme"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-inline-message",summary:"Inline messages are used to provide feedback to the user about a specific action or state.",customElement:!0}],exports:[{kind:"js",name:"InlineMessageComponent",declaration:{name:"InlineMessageComponent",module:"src/lib/inline-message/inline-message.ts"}}]},{kind:"javascript-module",path:"src/lib/keyboard-shortcut/keyboard-shortcut.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-keyboard-shortcut>` custom element.",name:"KeyboardShortcutComponent",members:[{kind:"field",name:"key",type:{text:"string | null | undefined"},privacy:"public",description:"Gets/sets the key binding."},{kind:"field",name:"keyBinding",type:{text:"string | null | undefined"},privacy:"public",description:"Alias for key."},{kind:"field",name:"target",type:{text:"string"},privacy:"public",description:"Gets/sets the target element selector."},{kind:"field",name:"global",type:{text:"boolean"},privacy:"public",description:"Gets/sets the global listener state."},{kind:"field",name:"allowWhileTyping",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the callback will be called while in a text entry field."},{kind:"field",name:"preventDefault",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to prevent default on keyboard events"},{kind:"field",name:"capture",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to use capturing on keyboard events"},{kind:"field",name:"useCode",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to match codes instead of keys on keyboard events"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the callback will be called."},{kind:"field",name:"activateCallback",type:{text:"KeyboardShortcutActivateCallback | null | undefined"},privacy:"public",description:"Gets/sets whether the activation callback."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-keyboard-shortcut",customElement:!0}],exports:[{kind:"js",name:"KeyboardShortcutComponent",declaration:{name:"KeyboardShortcutComponent",module:"src/lib/keyboard-shortcut/keyboard-shortcut.ts"}}]},{kind:"javascript-module",path:"src/lib/label/label-aware.ts",declarations:[{kind:"function",name:"isLabelAware",return:{type:{text:""}},parameters:[{name:"obj",type:{text:"any"},description:"The object to check."}],description:"Determines if an object is label aware."}],exports:[{kind:"js",name:"isLabelAware",declaration:{name:"isLabelAware",module:"src/lib/label/label-aware.ts"}}]},{kind:"javascript-module",path:"src/lib/label/label.ts",declarations:[{kind:"class",description:"",name:"LabelComponent",cssParts:[{description:"Styles the label's root element.",name:"label"}],members:[{kind:"field",name:"for",type:{text:"string | null | undefined"},privacy:"public",description:"The id of the associated element."},{kind:"field",name:"forElement",type:{text:"HTMLElement | null | undefined"},privacy:"public",description:"The associated element."},{kind:"field",name:"clickTarget",type:{text:"HTMLElement | null | undefined"},privacy:"public",description:"The element that a click should be simulated on. If not defined clicks act on the associated element."},{kind:"field",name:"dynamic",type:{text:"boolean"},privacy:"public",description:"Propagates changes in the label's text content to the associated element."},{kind:"field",name:"nonInteractive",type:{text:"boolean"},privacy:"public",description:"Removes click handling from the label."},{kind:"field",name:"legend",type:{text:"boolean"},privacy:"public",description:"Whether or not the label should be associated with an ancestor element."},{kind:"method",name:"update",privacy:"public",return:{type:{text:"void"}},description:"Updates the targetted element with the label's current text content."}],attributes:[{type:{text:"string"},description:"The id of the associated form component.",name:"for"},{type:{text:"boolean"},description:"Propagates changes in the label's text content to the associated element.",name:"dynamic"},{type:{text:"boolean"},description:"Removes click handling from the label.",name:"non-interactive"},{type:{text:"boolean"},description:"Whether or not the label should be associated with an ancestor element.",name:"legend"}],superclass:{name:"BaseComponent",module:"/src/lib/core"},tagName:"forge-label",summary:`The Forge Label component is used to associate a text label with a compatible Forge
component.`,customElement:!0}],exports:[{kind:"js",name:"LabelComponent",declaration:{name:"LabelComponent",module:"src/lib/label/label.ts"}}]},{kind:"javascript-module",path:"src/lib/label-value/label-value.ts",declarations:[{kind:"class",description:"",name:"LabelValueComponent",cssProperties:[{description:"Aligns the label and value. Possible values: `start` (default), `center`, `end`.",name:"--forge-label-value-align"},{description:"The spacing between the label and value.",name:"--forge-label-value-label-spacing"},{description:"The block start spacing for the label.",name:"--forge-label-value-label-block-start-spacing"},{description:"The block end spacing for the label.",name:"--forge-label-value-label-block-end-spacing"},{description:"The color to apply to the label.",name:"--forge-label-value-label-color"},{description:"The spacing between the icon and the label.",name:"--forge-label-value-icon-spacing"},{description:"The spacing between the label and value when displayed inline.",name:"--forge-label-value-inline-label-spacing"},{description:"The color to apply to the value when empty.",name:"--forge-label-value-empty-color"},{description:"The font-style to apply to the value when empty.",name:"--forge-label-value-empty-style"}],cssParts:[{description:"The root layout container element.",name:"root"},{description:"The label container element.",name:"label"},{description:"The value container element.",name:"value"},{description:"The icon container element.",name:"icon"}],slots:[{description:"The label to display.",name:"label"},{description:"The value to display.",name:"value"},{description:"An icon to display next to the label.",name:"icon"}],members:[{kind:"field",name:"_empty",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_ellipsis",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_inline",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"empty",type:{text:"boolean"},privacy:"public",description:"If true, the value will be displayed in an alternative emphasized style.",default:"false"},{kind:"field",name:"ellipsis",type:{text:"boolean"},privacy:"public",description:"If true, the value will be truncated with an ellipsis if it overflows its container.",default:"false"},{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public",description:"If true, the label and value will be displayed on the same line.",default:"false"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",deprecated:"Use `inline` instead."}],attributes:[{type:{text:"boolean"},description:"If present, the value will be displayed in an alternative emphasized style.",name:"empty"},{type:{text:"boolean"},description:"If present, the value will be truncated with an ellipsis if it overflows its container.",name:"ellipsis"},{type:{text:"boolean"},description:"If present, the label and value will be displayed on the same line.",name:"inline"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-label-value",summary:"Label-value pairs are used to display a label and a value in a compact format.",customElement:!0}],exports:[{kind:"js",name:"LabelValueComponent",declaration:{name:"LabelValueComponent",module:"src/lib/label-value/label-value.ts"}}]},{kind:"javascript-module",path:"src/lib/linear-progress/linear-progress.ts",declarations:[{kind:"class",description:"",name:"LinearProgressComponent",cssProperties:[{description:"The height of the element.",name:"--forge-linear-progress-height"},{description:"The background color of the indicator.",name:"--forge-linear-progress-track-color"},{description:"The shape of the indicator.",name:"--forge-linear-progress-track-shape"},{description:"The color of the indicator.",name:"--forge-linear-progress-indicator-color"},{description:"The height of the indicator only.",name:"--forge-linear-progress-indicator-height"},{description:"The duration of the determinate animation.",name:"--forge-linear-progress-determinate-duration"},{description:"The duration of the indeterminate animation.",name:"--forge-linear-progress-indeterminate-duration"},{description:"The easing function to use for the determinate animation.",name:"--forge-linear-progress-determinate-easing"},{description:"The duration of the theme transition.",name:"--forge-linear-progress-theme-transition-duration"},{description:"The easing function to use for the theme transition.",name:"--forge-linear-progress-theme-transition-timing"}],cssParts:[{description:"Styles the progress bar container element",name:"progressbar"}],members:[{kind:"field",name:"determinate",type:{text:"boolean"},privacy:"public",description:"Controls the determinate state."},{kind:"field",name:"progress",type:{text:"number"},privacy:"public",description:"Controls the progress while in a determinate state. Accepts values from `0` to `1`."},{kind:"field",name:"buffer",type:{text:"number"},privacy:"public",description:"Controls the buffer progress while in a determinate state. Accepts values from `0` to `1`."},{kind:"field",name:"theme",type:{text:"string"},privacy:"public",description:"Sets the theme."}],attributes:[{type:{text:"boolean"},description:"Controls the determinate state.",name:"determinate"},{type:{text:"number"},description:"Controls the progress while in a determinate state. Accepts values from `0` to `1`.",name:"progress"},{type:{text:"number"},description:"Controls the buffer progress while in a determinate state. Accepts values from `0` to `1`.",name:"buffer"},{type:{text:"string"},description:"Sets the theme.",name:"theme"}],mixins:[{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-linear-progress",summary:"Linear progress indicators display progress by animating along a linear track in a horizontal direction.",customElement:!0}],exports:[{kind:"js",name:"LinearProgressComponent",declaration:{name:"LinearProgressComponent",module:"src/lib/linear-progress/linear-progress.ts"}}]},{kind:"javascript-module",path:"src/lib/list-dropdown/list-dropdown-aware.ts",declarations:[{kind:"class",description:"",name:"ListDropdownAware",members:[{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the list of classes to apply to the popup element."},{kind:"field",name:"popupHeaderBuilder",type:{text:"ListDropdownHeaderBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup."},{kind:"field",name:"popupFooterBuilder",type:{text:"ListDropdownFooterBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup."},{kind:"field",name:"syncPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width is synchronized with the popup target width."},{kind:"field",name:"optionLimit",type:{text:"number"},privacy:"public",description:"Gets/sets the maximum number of options to display in the dropdown."},{kind:"field",name:"observeScroll",type:{text:"boolean"},privacy:"public",description:"Controls the observation of scroll events on the dropdown."},{kind:"field",name:"observeScrollThreshold",type:{text:"number"},privacy:"public",description:"The number of pixels from the bottom to trigger the scroll bottom event. Only applicable if `observeScroll` is true."},{kind:"field",name:"constrainPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width will be constrained to a max width of the viewport width (default: `100vw`)."},{kind:"field",name:"wrapOptionText",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the options will wrap their text or not.\nThis only applies if `constrainPopupWidth` is `true`, if there is an explicit width set via CSS."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"ListDropdownAware",declaration:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}}]},{kind:"javascript-module",path:"src/lib/list-dropdown/list-dropdown.ts",declarations:[{kind:"class",description:"",name:"ListDropdown",members:[{kind:"method",name:"destroy",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"open",privacy:"public",return:{type:{text:"void"}},description:"Opens the dropdown."},{kind:"method",name:"close",privacy:"public",return:{type:{text:"Promise<void>"}},description:"Closes the dropdown."},{kind:"method",name:"getActiveOptionIndex",privacy:"public",return:{type:{text:"number"}},description:"Gets the currently highlighted option index in the dropdown."},{kind:"method",name:"getActiveOption",privacy:"public",return:{type:{text:"IListDropdownOption | undefined"}}},{kind:"method",name:"toggleOptionMultiple",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"index",type:{text:"number"}},{name:"isSelected",type:{text:"boolean"}}],description:"Toggles the selected option by index. Only applies when in multiselect mode."},{kind:"method",name:"activateSelectedOption",privacy:"public",return:{type:{text:"void"}},description:"Activates the first selected option."},{kind:"method",name:"activateFirstOption",privacy:"public",return:{type:{text:"number"}},description:"Activates the first non-disabled option."},{kind:"method",name:"activateOption",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"index",type:{text:"number"}}],description:"Activates (highlights) an option by index."},{kind:"method",name:"activateInitialOption",privacy:"public",return:{type:{text:"void"}},description:"Activates the first activatable option."},{kind:"method",name:"clearActiveOption",privacy:"public",return:{type:{text:"void"}},description:"Clears the active option from the dropdown"},{kind:"method",name:"setSelectedValues",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"values",type:{text:"any[]"}}],description:"Sets the selected values. Only applies when in multiselect mode."},{kind:"field",name:"dropdownElement",type:{text:"HTMLElement | undefined"},privacy:"public",readonly:!0},{kind:"method",name:"setOptions",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"Array<IListDropdownOption | IListDropdownOptionGroup>"}}]},{kind:"method",name:"appendOptions",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"Array<IListDropdownOption | IListDropdownOptionGroup>"}}]},{kind:"method",name:"scrollSelectedOptionIntoView",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"animate",optional:!0,type:{text:"boolean"}}]},{kind:"method",name:"setScrollBottomListener",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"listener",type:{text:"() => void"}},{name:"threshold",optional:!0,type:{text:"number"}}]},{kind:"method",name:"removeScrollBottomListener",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"setBusyVisibility",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"isVisible",type:{text:"boolean"}}]},{kind:"method",name:"handleKey",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"key",type:{text:"string"}}]}]}],exports:[{kind:"js",name:"ListDropdown",declaration:{name:"ListDropdown",module:"src/lib/list-dropdown/list-dropdown.ts"}}]},{kind:"javascript-module",path:"src/lib/menu/menu.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-menu>` custom element.",name:"MenuComponent",members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Gets/sets the open state."},{kind:"field",name:"options",type:{text:"Array<IMenuOption | IMenuOptionGroup> | MenuOptionFactory"},privacy:"public",description:"Gets/sets the array of options to display in the menu."},{kind:"field",name:"selectedIndex",type:{text:"number"},privacy:"public",description:"Gets/sets the selected option to the index. Does not support cascading menus."},{kind:"field",name:"selectedValue",type:{text:"any"},privacy:"public",description:"Gets/sets the value of the option to select."},{kind:"field",name:"placement",type:{text:"`${PositionPlacement}`"},privacy:"public",description:"Gets/sets the menu placement (default is bottom-left)."},{kind:"field",name:"fallbackPlacements",type:{text:"`${PositionPlacement}`[]"},privacy:"public",description:"Gets/sets the fallback menu placement for overriding the default of any side."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Gets/sets dense state of the list options used in the menu popup."},{kind:"field",name:"iconClass",type:{text:"string"},privacy:"public",description:"Gets/sets the class name to use for option icons."},{kind:"field",name:"persistSelection",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether selection of menu items is persisted.",deprecated:"Please use `<forge-select-dropdown>` for handling selection states."},{kind:"field",name:"mode",type:{text:"MenuMode"},privacy:"public",description:"Gets/sets the mode that this menu is using."},{kind:"field",name:"popupOffset",type:{text:"IOverlayOffset"},privacy:"public",description:"Sets the position adjustment on the internal popup element."},{kind:"field",name:"optionBuilder",type:{text:"MenuOptionBuilder"},privacy:"public",description:"Sets the callback that will be executed for each option in the dropdown for producing custom option templates."},{kind:"field",name:"popupElement",type:{text:"HTMLElement | undefined"},privacy:"public",description:"Gets the currently active popup element when the dropdown is open.",readonly:!0},{kind:"method",name:"propagateKeyEvent",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}],description:"Force propagates the key event from another element this component."},{kind:"method",name:"activateFirstOption",privacy:"public",return:{type:{text:"void"}}},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the list of classes to apply to the popup element.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"popupHeaderBuilder",type:{text:"ListDropdownHeaderBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"popupFooterBuilder",type:{text:"ListDropdownFooterBuilder"},privacy:"public",description:"Gets/sets the callback function for generating header content within the popup.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"syncPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width is synchronized with the popup target width.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"optionLimit",type:{text:"number"},privacy:"public",description:"Gets/sets the maximum number of options to display in the dropdown.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"observeScroll",type:{text:"boolean"},privacy:"public",description:"Controls the observation of scroll events on the dropdown.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"observeScrollThreshold",type:{text:"number"},privacy:"public",description:"The number of pixels from the bottom to trigger the scroll bottom event. Only applicable if `observeScroll` is true.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"constrainPopupWidth",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the popup width will be constrained to a max width of the viewport width (default: `100vw`).",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}},{kind:"field",name:"wrapOptionText",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the options will wrap their text or not.\nThis only applies if `constrainPopupWidth` is `true`, if there is an explicit width set via CSS.",inheritedFrom:{name:"ListDropdownAware",module:"src/lib/list-dropdown/list-dropdown-aware.ts"}}],superclass:{name:"ListDropdownAware",module:"/src/lib/list-dropdown/list-dropdown-aware"},tagName:"forge-menu",customElement:!0}],exports:[{kind:"js",name:"MenuComponent",declaration:{name:"MenuComponent",module:"src/lib/menu/menu.ts"}}]},{kind:"javascript-module",path:"src/lib/open-icon/open-icon.ts",declarations:[{kind:"class",description:"",name:"OpenIconComponent",cssProperties:[{description:"The color of the icon.",name:"--forge-open-icon-color"},{description:"The size of the icon.",name:"--forge-open-icon-size"},{description:"The height of the icon. Defaults to `size`.",name:"--forge-open-icon-height"},{description:"The width of the icon. Defaults to `size`.",name:"--forge-open-icon-width"},{description:"The initial rotation of the icon.",name:"--forge-open-icon-initial-rotation"},{description:"The rotation of the icon when open.",name:"--forge-open-icon-open-rotation"},{description:"The duration of the open animation.",name:"--forge-open-icon-animation-duration"},{description:"The duration of the open animation when in a half orientation.",name:"--forge-open-icon-half-animation-duration"},{description:"The timing function of the open animation.",name:"--forge-open-icon-animation-timing"}],cssParts:[{description:"The root element of the icon.",name:"root"},{description:"The icon element.",name:"icon"}],slots:[{description:"The icon to display when open.",name:""}],members:[{kind:"field",name:"_open",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_orientation",type:{text:"OpenIconOrientation"},privacy:"private"},{kind:"field",name:"_rotation",type:{text:"OpenIconRotation"},privacy:"private"},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether the icon is open or closed."},{kind:"field",name:"orientation",type:{text:"OpenIconOrientation"},privacy:"public",description:"The orientation of the rotation."},{kind:"field",name:"rotation",type:{text:"OpenIconRotation"},privacy:"public",description:"The rotation amount."}],attributes:[{type:{text:"boolean"},description:"Whether the icon is open or closed.",name:"open"},{type:{text:"OpenIconOrientation"},description:"The orientation of the rotation.",name:"orientation"},{type:{text:"OpenIconRotation"},description:"The rotation amount.",name:"rotation"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-open-icon",summary:"Open icons are used to indicate whether a section is open or closed.",customElement:!0}],exports:[{kind:"js",name:"OpenIconComponent",declaration:{name:"OpenIconComponent",module:"src/lib/open-icon/open-icon.ts"}}]},{kind:"javascript-module",path:"src/lib/overlay/overlay.ts",declarations:[{kind:"class",description:"",name:"OverlayComponent",cssProperties:[{description:"The `position` of the overlay.",name:"--forge-overlay-position"},{description:"The `z-index` of the overlay. Defaults to the `popup` range.",name:"--forge-overlay-z-index"},{description:"The `height` of the overlay. Defaults to `min-content`.",name:"--forge-overlay-height"},{description:"The `width` of the overlay. Defaults to `min-content`.",name:"--forge-overlay-width"},{description:"The `block-start` position of the overlay.",name:"--forge-overlay-position-block-start"},{description:"The `block-end` position of the overlay.",name:"--forge-overlay-position-block-end"},{description:"The `inline-start` position of the overlay.",name:"--forge-overlay-position-inline-start"},{description:"The `inline-end` position of the overlay.",name:"--forge-overlay-position-inline-end"}],cssParts:[{description:"The component's root element.",name:"root"}],slots:[{description:"The content to render inside the positioned overlay container.",name:""}],members:[{kind:"field",name:"arrowElement",type:{text:"HTMLElement"},privacy:"public",description:"The element to use as the arrow for the overlay."},{kind:"field",name:"arrowElementOffset",type:{text:"number"},privacy:"public",description:"The offset to apply to the arrow element."},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether or not the overlay is open.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public",description:"Whether or not the overlay should be rendered inline (not in the :top-layer).",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"anchorElement",type:{text:"HTMLElement | VirtualElement | null"},privacy:"public",description:"The element to anchor the overlay to.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"anchor",type:{text:"string | null"},privacy:"public",description:"The id of the element to anchor the overlay to.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"noAnchor",type:{text:"boolean"},privacy:"public",description:"Whether or not the overlay should be rendered without an anchor (centered on page by default).",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"placement",type:{text:"OverlayPlacement"},privacy:"public",description:"The placement of the overlay relative to the anchor element.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"positionStrategy",type:{text:"OverlayPositionStrategy"},privacy:"public",description:"The positioning strategy to use for the overlay. Valid values are `'fixed'` and `'absolute'`.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"offset",type:{text:"IOverlayOffset"},privacy:"public",description:"The offset to apply to the overlay position relative to the anchor element.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"shift",type:{text:"boolean"},privacy:"public",description:"Whether or not the anchor element should shift along the side of the overlay when scrolling.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"hide",type:{text:"OverlayHideState"},privacy:"public",description:"Whether or not the overlay should hide itself when the anchor element is out of view.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public",description:"Whether or not the overlay handles light dismiss itself or not.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"flip",type:{text:"OverlayFlipState"},privacy:"public",description:"Whether or not the overlay should flip to the opposite placement when not enough room.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"boundary",type:{text:"string | null"},privacy:"public",description:"The id of the element to use as the boundary for the overlay.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"boundaryElement",type:{text:"HTMLElement | null"},privacy:"public",description:"The element to use as the boundary for the overlay.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"fallbackPlacements",type:{text:"PositionPlacement[] | null"},privacy:"public",description:"The fallback placements to use when the overlay cannot be placed in the desired placement.",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"method",name:"position",privacy:"public",return:{type:{text:"void"}},inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}},{kind:"field",name:"auto",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}}],events:[{type:{text:"CustomEvent<OverlayToggleEventData>"},description:"Dispatches when the overlay is light dismissed via the escape key or clicking outside the overlay.",name:"forge-overlay-light-dismiss"}],attributes:[{type:{text:"string"},description:"The id of the element to anchor the overlay to.",name:"anchor"},{type:{text:"string"},description:"Whether or not the overlay should be rendered without an anchor (centered on page by default).",name:"no-anchor"},{type:{text:"string"},description:"Whether or not the overlay is open.",name:"open"},{type:{text:"string"},description:"Whether or not the overlay should be rendered inline (not in the :top-layer).",name:"inline"},{type:{text:"string"},description:"The placement of the overlay relative to the anchor element.",name:"placement"},{type:{text:"string"},description:"The positioning strategy to use for the overlay. Valid values are `'fixed'` and `'absolute'`.",name:"position-strategy"},{type:{text:"string"},description:"Whether or not the overlay should hide itself when the anchor element is out of view.",name:"hide"},{type:{text:"string"},description:"Whether or not the overlay handles light dismiss itself or not.",name:"persistent"},{type:{text:"string"},description:"Whether or not the anchor element should shift along the side of the overlay when scrolling.",name:"shift"},{type:{text:"string"},description:"Tells the overlay not to flip to the opposite placement when not enough room.",name:"no-flip"},{type:{text:"string"},description:"The placement of the overlay around the anchor element **after** dynamic positioning. This is a read-only attribute that is only available when open.",name:"position-placement"},{type:{text:"string"},description:"The id of the element to use as the boundary for the overlay.",name:"boundary"},{type:{text:"string"},description:"The fallback placements to use when the overlay cannot be placed in the desired placement. Should be a comma separated list of placements.",name:"fallback-placements"}],superclass:{name:"BaseOverlay",module:"/src/lib/overlay/base/base-overlay"},tagName:"forge-overlay",summary:`Overlays are used to render content in an element that rendered above all content on the page,
and positioned around a specified anchor element.`,customElement:!0}],exports:[{kind:"js",name:"OverlayComponent",declaration:{name:"OverlayComponent",module:"src/lib/overlay/overlay.ts"}}]},{kind:"javascript-module",path:"src/lib/page-state/page-state.ts",declarations:[{kind:"class",description:"",name:"PageStateComponent",cssProperties:[{description:"The width of the page state.",name:"--forge-page-state-width"},{description:"The height of the page state.",name:"--forge-page-state-height"},{description:"The spacing of the page state.",name:"--forge-page-state-spacing"},{description:"The mobile width of the page state.",name:"--forge-page-state-mobile-width"},{description:"The graphic height of the page state.",name:"--forge-page-state-graphic-height"},{description:"The graphic spacing of the page state.",name:"--forge-page-state-graphic-spacing"},{description:"The mobile graphic height of the page state.",name:"--forge-page-state-mobile-graphic-height"},{description:"The title color of the page state.",name:"--forge-page-state-title-color"},{description:"The title spacing of the page state.",name:"--forge-page-state-title-spacing"},{description:"The message color of the page state.",name:"--forge-page-state-message-color"},{description:"The message spacing of the page state.",name:"--forge-page-state-message-spacing"},{description:"The actions spacing of the page state.",name:"--forge-page-state-actions-spacing"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The graphic container element.",name:"graphic-container"},{description:"The title container element.",name:"title-container"},{description:"The message container element.",name:"message-container"},{description:"The actions container element.",name:"actions-container"}],slots:[{description:"The slot where the graphic will be rendered.",name:"graphic"},{description:"The slot where the title will be rendered.",name:"title"},{description:"The slot where the message will be rendered.",name:"message"},{description:"The slot where the actions will be rendered.",name:"actions"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-page-state",customElement:!0}],exports:[{kind:"js",name:"PageStateComponent",declaration:{name:"PageStateComponent",module:"src/lib/page-state/page-state.ts"}}]},{kind:"javascript-module",path:"src/lib/paginator/paginator.ts",declarations:[{kind:"class",description:"",name:"PaginatorComponent",members:[{kind:"field",name:"pageIndex",type:{text:"number"},privacy:"public",description:"The zero-based page index. Default is 0."},{kind:"field",name:"pageSize",type:{text:"number"},privacy:"public",description:"Number of items to display on a page. By default set to 25."},{kind:"field",name:"offset",type:{text:"number"},privacy:"public",description:"Sets page index by providing the number of items to skip. The getter for this property returns the number of items to skip."},{kind:"field",name:"total",type:{text:"number"},privacy:"public",description:"The total number of items to be paginated. Default is 0."},{kind:"field",name:"pageSizeOptions",type:{text:"number[]"},privacy:"public",description:"The set of provided page size options to display to the user."},{kind:"field",name:"label",type:{text:"string"},privacy:"public",description:'A label for the paginator. Default is "Rows per page:".'},{kind:"field",name:"firstLast",type:{text:"boolean"},privacy:"public",description:"Whether to show the first page and last page buttons. Default is false."},{kind:"field",name:"first",type:{text:"boolean"},privacy:"public",description:"Whether to show the first page button. Default is false."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether the paginator is disabled. Default is false."},{kind:"field",name:"alternative",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"rangeLabelCallback",type:{text:"PaginatorRangeLabelBuilder"},privacy:"public"},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions"}}]}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-paginator",customElement:!0}],exports:[{kind:"js",name:"PaginatorComponent",declaration:{name:"PaginatorComponent",module:"src/lib/paginator/paginator.ts"}}]},{kind:"javascript-module",path:"src/lib/popover/popover.ts",declarations:[{kind:"class",description:"",name:"PopoverComponent",cssProperties:[{description:"The background color of the popover surface.",name:"--forge-popover-background"},{description:"The border radius of the popover surface.",name:"--forge-popover-border-radius"},{description:"The box shadow of the popover surface.",name:"--forge-popover-box-shadow"},{description:"The border width of the popover surface.",name:"--forge-popover-border-width"},{description:"The border style of the popover surface.",name:"--forge-popover-border-style"},{description:"The border color of the popover surface.",name:"--forge-popover-border-color"},{description:"The width of the popover surface. Defaults to `auto`.",name:"--forge-popover-width"},{description:"The height of the popover surface. Defaults to `auto`.",name:"--forge-popover-height"},{description:"The minimum width of the popover surface. Defaults to `none`.",name:"--forge-popover-min-width"},{description:"The maximum width of the popover surface. Defaults to `none`.",name:"--forge-popover-max-width"},{description:"The minimum height of the popover surface. Defaults to `none`.",name:"--forge-popover-min-height"},{description:"The maximum height of the popover surface. Defaults to `none`.",name:"--forge-popover-max-height"},{description:"The size of the arrow.",name:"--forge-popover-arrow-size"},{description:"The height of the arrow.",name:"--forge-popover-arrow-height"},{description:"The width of the arrow.",name:"--forge-popover-arrow-width"},{description:"The background color of the arrow. Defaults to the background color of the popover surface.",name:"--forge-popover-arrow-background-color"},{description:"The rotation of the arrow when the popover is placed on the top.",name:"--forge-popover-arrow-top-rotation"},{description:"The rotation of the arrow when the popover is placed on the right.",name:"--forge-popover-arrow-right-rotation"},{description:"The rotation of the arrow when the popover is placed on the bottom.",name:"--forge-popover-arrow-bottom-rotation"},{description:"The rotation of the arrow when the popover is placed on the left.",name:"--forge-popover-arrow-left-rotation"},{description:"The border width of the popover surface and arrow when an arrow is applied.",name:"--forge-popover-arrow-border-width"},{description:"The clip path to use for the arrow element.",name:"--forge-popover-arrow-clip-path"},{description:"The animation timing function to use for the popover animation.",name:"--forge-popover-animation-timing"},{description:"The duration of the zoom animation.",name:"--forge-popover-zoom-duration"},{description:"The timing function to use for the zoom animation.",name:"--forge-popover-zoom-timing"},{description:"The duration of the slide animation.",name:"--forge-popover-slide-duration"},{description:"The timing function to use for the slide animation.",name:"--forge-popover-slide-timing"},{description:"The start offset to use for the slide animation.",name:"--forge-popover-slide-offset"},{description:"The duration of the fade animation.",name:"--forge-popover-fade-duration"},{description:"The timing function to use for the fade animation.",name:"--forge-popover-fade-timing"},{description:"The `block-start` position of the popover.",name:"--forge-popover-position-block-start"},{description:"The `block-end` position of the popover.",name:"--forge-popover-position-block-end"},{description:"The `inline-start` position of the popover.",name:"--forge-popover-position-inline-start"},{description:"The `inline-end` position of the popover.",name:"--forge-popover-position-inline-end"},{description:'The maximum height of the popover when using `preset="dropdown"`. Defaults to `256px`.',name:"--forge-popover-preset-dropdown-max-height"},{description:'The overflow behavior of the popover when using `preset="dropdown"`. Defaults to `auto visible` (vertical scrolling only).',name:"--forge-popover-preset-dropdown-overflow"}],cssParts:[{description:"The overlay root element.",name:"overlay"},{description:"The surface container element for the slotted content.",name:"surface"}],slots:[{description:"The content to render inside the popover.",name:""}],members:[{kind:"field",name:"arrow",type:{text:"boolean"},privacy:"public",description:"Whether or not the popover should render an arrow."},{kind:"field",name:"animationType",type:{text:"PopoverAnimationType"},privacy:"public",description:"The animation type to use for the popover. Valid values are `'none'`, `'fade'`, `'slide'`, and `'zoom'` (default)."},{kind:"field",name:"triggerType",type:{text:"PopoverTriggerType | PopoverTriggerType[]"},privacy:"public",description:"The trigger type(s) to use for the popover. Valid values are `'click'` (default), `'hover'`, `'focus'`, and `'longpress'`. Multiple can be specified."},{kind:"field",name:"longpressDelay",type:{text:"number"},privacy:"public",description:"The delay in milliseconds before a longpress event is detected."},{kind:"field",name:"persistentHover",type:{text:"boolean"},privacy:"public",description:"Whether or not the popover should remain open when the user hovers outside the popover."},{kind:"field",name:"hoverDelay",type:{text:"number"},privacy:"public",description:"The delay in milliseconds before the popover is shown."},{kind:"field",name:"hoverDismissDelay",type:{text:"number"},privacy:"public",description:"The delay in milliseconds before the popover is dismissed when the user hovers outside of the popover."},{kind:"field",name:"preset",type:{text:"PopoverPreset"},privacy:"public",description:"The preset to use for the popover."},{kind:"method",name:"hideAsync",privacy:"public",return:{type:{text:"Promise<void>"}}},{kind:"method",name:"position",privacy:"public",return:{type:{text:"void"}},inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"overlay",type:{text:"IOverlayComponent"},privacy:"public",readonly:!0,inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"anchorElement",type:{text:"HTMLElement | VirtualElement | null"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"anchor",type:{text:"string | null"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"noAnchor",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"placement",type:{text:"OverlayPlacement"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"positionStrategy",type:{text:"OverlayPositionStrategy"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"offset",type:{text:"IOverlayOffset"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"shift",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"hide",type:{text:"OverlayHideState"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"flip",type:{text:"OverlayFlipState"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"boundary",type:{text:"string | null"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"boundaryElement",type:{text:"HTMLElement | null"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}},{kind:"field",name:"fallbackPlacements",type:{text:"PositionPlacement[] | null"},privacy:"public",inheritedFrom:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}}],events:[{type:{text:"CustomEvent<IPopoverToggleEventData"},description:"Dispatches before the popover is toggled, and is cancelable.",name:"forge-popover-beforetoggle"},{type:{text:"CustomEvent<IPopoverToggleEventData"},description:"Dispatches after the popover is toggled.",name:"forge-popover-toggle"}],attributes:[{type:{text:"string"},description:"Whether or not the popover should render an arrow.",name:"arrow"},{type:{text:"string"},description:"The animation type to use for the popover. Valid values are `'none'`, `'fade'`, `'slide'`, and `'zoom'` (default).",name:"animation-type"},{type:{text:"string"},description:"The trigger type(s) to use for the popover. Valid values are `'click'` (default), `'hover'`, `'focus'`, and `'longpress'`. Multiple can be specified.",name:"trigger-type"},{type:{text:"string"},description:"The delay in milliseconds before a longpress event is detected.",name:"longpress-delay"},{type:{text:"string"},description:"Whether or not the popover should remain open when the user hovers outside the popover.",name:"persistent-hover"},{type:{text:"string"},description:"The delay in milliseconds before the popover is dismissed when the user hovers outside of the popover.",name:"hover-dismiss-delay"},{type:{text:"number"},description:"The delay in milliseconds before the popover is shown.",name:"hover-delay"},{type:{text:"string"},description:"The preset to use for the popover.",name:"preset"}],superclass:{name:"OverlayAware",module:"/src/lib/overlay/base/overlay-aware"},tagName:"forge-popover",summary:"Popovers are used to render content in an element that is above all other content on the page.",customElement:!0}],exports:[{kind:"js",name:"PopoverComponent",declaration:{name:"PopoverComponent",module:"src/lib/popover/popover.ts"}}]},{kind:"javascript-module",path:"src/lib/profile-card/profile-card.ts",declarations:[{kind:"class",description:"",name:"ProfileCardComponent",members:[{kind:"field",name:"fullName",type:{text:"string"},privacy:"public"},{kind:"field",name:"email",type:{text:"string"},privacy:"public"},{kind:"field",name:"signOut",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"profile",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"signOutText",type:{text:"string"},privacy:"public"},{kind:"field",name:"profileText",type:{text:"string"},privacy:"public"},{kind:"field",name:"avatarText",type:{text:"string"},privacy:"public"},{kind:"field",name:"avatarIcon",type:{text:"string"},privacy:"public"},{kind:"field",name:"avatarImageUrl",type:{text:"string"},privacy:"public"},{kind:"field",name:"avatarLetterCount",type:{text:"number"},privacy:"public"},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions"}}]}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-profile-card",customElement:!0}],exports:[{kind:"js",name:"ProfileCardComponent",declaration:{name:"ProfileCardComponent",module:"src/lib/profile-card/profile-card.ts"}}]},{kind:"javascript-module",path:"src/lib/scaffold/scaffold.ts",declarations:[{kind:"class",description:"",name:"ScaffoldComponent",cssProperties:[{description:"The `height` of the scaffold.",name:"--forge-scaffold-height"},{description:"The `width` of the scaffold.",name:"--forge-scaffold-width"},{description:"The `overflow` of the scaffold.",name:"--forge-scaffold-overflow"},{description:"The `position` of the scaffold body.",name:"--forge-scaffold-body-position"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The header of the scaffold.",name:"header"},{description:"The body of the scaffold.",name:"body"}],slots:[{description:"Places content in the header.",name:"header"},{description:"Places content in the body.",name:"body"},{description:"Places content in the footer.",name:"footer"},{description:"Places content to the left of all content.",name:"left"},{description:"Places content to the right of all content.",name:"right"},{description:"Places content in the header of the body.",name:"body-header"},{description:"Places content in the footer of the body.",name:"body-footer"},{description:"Places content to the left of the body content.",name:"body-left"},{description:"Places content to the right of the body content.",name:"body-right"}],members:[{kind:"field",name:"viewport",type:{text:"boolean"},privacy:"public",description:"Whether the scaffold should be full viewport height."}],attributes:[{type:{text:"boolean"},description:"Whether the scaffold should be full viewport height.",name:"viewport"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-scaffold",summary:"A scaffold provides a generic layout structure for your content using common named areas.",customElement:!0}],exports:[{kind:"js",name:"ScaffoldComponent",declaration:{name:"ScaffoldComponent",module:"src/lib/scaffold/scaffold.ts"}}]},{kind:"javascript-module",path:"src/lib/skeleton/skeleton.ts",declarations:[{kind:"class",description:"",name:"SkeletonComponent",cssProperties:[{description:"The duration of the skeleton animation.",name:"--forge-skeleton-animation-duration"},{description:"The width of the skeleton.",name:"--forge-skeleton-width"},{description:"The height of the skeleton.",name:"--forge-skeleton-height"},{description:"The background color of the skeleton.",name:"--forge-skeleton-background"},{description:"The shape of the skeleton.",name:"--forge-skeleton-shape"},{description:"The margin of the skeleton.",name:"--forge-skeleton-margin"},{description:"The height of the button skeleton.",name:"--forge-skeleton-button-height"},{description:"The width of the button skeleton.",name:"--forge-skeleton-button-width"},{description:"The height of the form field skeleton.",name:"--forge-skeleton-form-field-height"},{description:"The width of the form field skeleton.",name:"--forge-skeleton-form-field-width"},{description:"The height of the chip skeleton.",name:"--forge-skeleton-chip-height"},{description:"The width of the chip skeleton.",name:"--forge-skeleton-chip-width"},{description:"The shape of the chip skeleton.",name:"--forge-skeleton-chip-shape"},{description:"The height of the list item skeleton.",name:"--forge-skeleton-list-item-height"},{description:"The margin of the list item skeleton.",name:"--forge-skeleton-list-item-margin"},{description:"The height of the text skeleton.",name:"--forge-skeleton-text-height"},{description:"The color of the gradient skeleton.",name:"--forge-skeleton-gradient-color"},{description:"The size of the avatar skeleton.",name:"--forge-skeleton-avatar-size"},{description:"The shape of the avatar skeleton.",name:"--forge-skeleton-avatar-shape"}],cssParts:[{description:"The root element of the skeleton.",name:"root"}],attributes:[{type:{text:"string"},description:"Apply form field styles to the skeleton.",name:"form-field"},{type:{text:"string"},description:"Apply button styles to the skeleton.",name:"button"},{type:{text:"string"},description:"Apply chip styles to the skeleton.",name:"chip"},{type:{text:"string"},description:"Apply list item styles to the skeleton.",name:"list-item"},{type:{text:"string"},description:"Apply text styles to the skeleton.",name:"text"},{type:{text:"string"},description:"Apply avatar styles to the skeleton.",name:"avatar"},{type:{text:"string"},description:"Apply stretch styles to the skeleton.",name:"stretch"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-skeleton",summary:"Skeleton is used to provide a placeholder for content that is loading.",customElement:!0}],exports:[{kind:"js",name:"SkeletonComponent",declaration:{name:"SkeletonComponent",module:"src/lib/skeleton/skeleton.ts"}}]},{kind:"javascript-module",path:"src/lib/slider/slider.ts",declarations:[{kind:"class",description:"",name:"SliderComponent",cssProperties:[{description:"The primary color of the slider.",name:"--forge-theme-primary"},{description:"The color of elements placed on top of the primary color (the label text for example).",name:"--forge-theme-on-primary"},{description:"The height of the track.",name:"--forge-slider-track-height"},{description:"The color of the active track.",name:"--forge-slider-active-track-color"},{description:"The height of the active track.",name:"--forge-slider-active-track-height"},{description:"The shape of the active track.",name:"--forge-slider-active-track-shape"},{description:"The color of the active track when disabled.",name:"--forge-slider-disabled-active-track-color"},{description:"The opacity of the active track when disabled.",name:"--forge-slider-disabled-active-track-opacity"},{description:"The color of the slider handle when disabled.",name:"--forge-slider-disabled-handle-color"},{description:"The color of the inactive track when disabled.",name:"--forge-slider-disabled-inactive-track-color"},{description:"The opacity of the inactive track when disabled.",name:"--forge-slider-disabled-inactive-track-opacity"},{description:"The color of the slider handle when focused.",name:"--forge-slider-focus-handle-color"},{description:"The color of the slider handle.",name:"--forge-slider-handle-color"},{description:"The height of the slider handle.",name:"--forge-slider-handle-height"},{description:"The width of the slider handle.",name:"--forge-slider-handle-width"},{description:"The shape of the slider handle.",name:"--forge-slider-handle-shape"},{description:"The color of the slider handle when hovered.",name:"--forge-slider-hover-handle-color"},{description:"The color of the inactive track.",name:"--forge-slider-inactive-track-color"},{description:"The height of the inactive track.",name:"--forge-slider-inactive-track-height"},{description:"The shape of the inactive track.",name:"--forge-slider-inactive-track-shape"},{description:"The shape of the label container.",name:"--forge-slider-label-container-shape"},{description:"The color of the label container.",name:"--forge-slider-label-container-color"},{description:"The height of the label container.",name:"--forge-slider-label-container-height"},{description:"The color of the label text.",name:"--forge-slider-label-text-color"},{description:"The color of the slider handle when pressed.",name:"--forge-slider-pressed-handle-color"},{description:"The size of the state layer.",name:"--forge-slider-state-layer-size"},{description:"The color of the slider handle outline when overlapping.",name:"--forge-slider-with-overlap-handle-outline-color"},{description:"The width of the slider handle outline when overlapping.",name:"--forge-slider-with-overlap-handle-outline-width"},{description:"The color of the active tick mark container when tick marks are visible.",name:"--forge-slider-with-tick-marks-active-container-color"},{description:"The size of the tick mark container when tick marks are visible.",name:"--forge-slider-with-tick-marks-container-size"},{description:"The color of the active tick mark container when tick marks are visible and disabled.",name:"--forge-slider-with-tick-marks-disabled-active-container-color"},{description:"The color of the inactive tick mark container when tick marks are visible and disabled.",name:"--forge-slider-with-tick-marks-disabled-inactive-container-color"},{description:"The color of the inactive tick mark container when tick marks are visible.",name:"--forge-slider-with-tick-marks-inactive-container-color"}],cssParts:[{description:"Styles the slider container element.",name:"slider"},{description:"Styles the track element.",name:"track"},{description:"Styles the end handle element.",name:"handle-end"},{description:"Styles the end handle thumb element.",name:"handle-end-thumb"},{description:"Styles the end handle label element.",name:"handle-end-label"},{description:"Styles the end handle label content element.",name:"handle-end-label-content"},{description:"Styles the start handle element.",name:"handle-start"},{description:"Styles the start handle thumb element.",name:"handle-start-thumb"},{description:"Styles the start handle label element.",name:"handle-start-label"},{description:"Styles the start handle label content element.",name:"handle-start-label-content"}],members:[{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0},{kind:"field",name:"labels",type:{text:"NodeList"},privacy:"public",readonly:!0},{kind:"field",name:"name",type:{text:"string"},privacy:"public",description:"The form control name."},{kind:"field",name:"nameStart",type:{text:"string"},privacy:"public",description:"The form control name for the start handle in range mode."},{kind:"field",name:"nameEnd",type:{text:"string"},privacy:"public",description:"The form control name for the end handle in range mode."},{kind:"method",name:"formDisabledCallback",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"isDisabled",type:{text:"boolean"}}]},{kind:"field",name:"value",type:{text:"number"},privacy:"public",description:"The current value of the slider."},{kind:"field",name:"valueStart",type:{text:"number"},privacy:"public",description:"The current start value of the slider."},{kind:"field",name:"valueEnd",type:{text:"number"},privacy:"public",description:"The current end value of the slider."},{kind:"field",name:"label",type:{text:"string"},privacy:"public",description:"The label text for the slider handle."},{kind:"field",name:"labelStart",type:{text:"string"},privacy:"public",description:"The label text for the start slider handle."},{kind:"field",name:"labelEnd",type:{text:"string"},privacy:"public",description:"The label text for the end slider handle."},{kind:"field",name:"labelBuilder",type:{text:"SliderLabelBuilder"},privacy:"public",description:"A function that returns a label for the slider handle."},{kind:"field",name:"min",type:{text:"number"},privacy:"public",description:"The minimum value of the slider."},{kind:"field",name:"max",type:{text:"number"},privacy:"public",description:"The maximum value of the slider."},{kind:"field",name:"step",type:{text:"number"},privacy:"public",description:"The step value of the slider."},{kind:"field",name:"tickmarks",type:{text:"boolean"},privacy:"public",description:"Controls if tickmarks are visible."},{kind:"field",name:"labeled",type:{text:"boolean"},privacy:"public",description:"Controls if labels are visible."},{kind:"field",name:"range",type:{text:"boolean"},privacy:"public",description:"Controls range mode."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Controls if the slider is disabled."},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"Controls if the slider is readonly."}],events:[{type:{text:"CustomEvent"},description:"Dispatches when the slider value changes.",name:"forge-slider-input"},{type:{text:"CustomEvent"},description:"Dispatches when the slider value changes and the value has been committed.",name:"forge-slider-change"}],attributes:[{type:{text:"string"},description:"Sets the current value of the slider.",name:"value"},{type:{text:"string"},description:"Sets the current start value of the slider in range mode.",name:"value-start"},{type:{text:"string"},description:"Sets the current end value of the slider in range mode.",name:"value-end"},{type:{text:"string"},description:"Sets the label text for the slider handle.",name:"label"},{type:{text:"string"},description:"Sets the label text for the start slider handle in range mode.",name:"label-start"},{type:{text:"string"},description:"Sets the label text for the end slider handle in range mode.",name:"label-end"},{type:{text:"string"},description:"Sets the minimum value of the slider.",name:"min"},{type:{text:"string"},description:"Sets the maximum value of the slider.",name:"max"},{type:{text:"string"},description:"Sets the step value of the slider.",name:"step"},{type:{text:"string"},description:"Controls if tickmarks are visible.",name:"tickmarks"},{type:{text:"string"},description:"Controls if labels are visible.",name:"labeled"},{type:{text:"string"},description:"Controls range mode.",name:"range"},{type:{text:"string"},description:"Controls if the slider is disabled.",name:"disabled"},{type:{text:"string"},description:"Controls if the slider is readonly.",name:"readonly"},{type:{text:"string"},description:"Controls the form control name.",name:"name"},{type:{text:"string"},description:"Controls the form control name for the start handle in range mode.",name:"name-start"},{type:{text:"string"},description:"Controls the form control name for the end handle in range mode.",name:"name-end"}],superclass:{name:"BaseFormComponent",module:"/src/lib/core/base/base-form-component"},tagName:"forge-slider",summary:"Sliders allow users to make selections from a range of values.",customElement:!0}],exports:[{kind:"js",name:"SliderComponent",declaration:{name:"SliderComponent",module:"src/lib/slider/slider.ts"}}]},{kind:"javascript-module",path:"src/lib/split-button/split-button.ts",declarations:[{kind:"class",description:"",name:"SplitButtonComponent",cssProperties:[{description:"The minimum width of the slotted buttons.",name:"--forge-split-button-min-width"},{description:"The gap between the slotted buttons.",name:"--forge-split-button-gap"},{description:"The offset of the focus indicator around the buttons.",name:"--forge-split-button-focus-indicator-offset"},{description:"The offset of the focus indicator divider when using outlined buttons.",name:"--forge-split-button-focus-indicator-divider-offset"}],slots:[{description:"This is a default/unnamed slot.",name:""}],members:[{kind:"field",name:"variant",type:{text:"SplitButtonVariant"},privacy:"public",description:"The variant of the buttons. Valid values are `text`, `outlined`, `tonal`, `filled`, and `raised`."},{kind:"field",name:"theme",type:{text:"ButtonTheme"},privacy:"public",description:"The theme of the buttons. Valid values are `primary`, `secondary`, `tertiary`, `success`, `error`, `warning`, `info`."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the buttons are disabled."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether or not the buttons are dense."},{kind:"field",name:"pill",type:{text:"boolean"},privacy:"public",description:"Whether or not the buttons are pill-shaped."}],attributes:[{type:{text:"SplitButtonVariant"},description:"The variant of the buttons. Valid values are `text`, `outlined`, `tonal`, `filled`, and `raised`.",name:"variant"},{type:{text:"ButtonTheme"},description:"The theme of the buttons. Valid values are `primary`, `secondary`, `tertiary`, `success`, `error`, `warning`, `info`.",name:"theme"},{type:{text:"boolean"},description:"Whether or not the buttons are disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether or not the buttons are dense.",name:"dense"},{type:{text:"boolean"},description:"Whether or not the buttons are pill-shaped.",name:"pill"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-split-button",summary:"Split buttons are used for splitting an action into two parts.",customElement:!0}],exports:[{kind:"js",name:"SplitButtonComponent",declaration:{name:"SplitButtonComponent",module:"src/lib/split-button/split-button.ts"}}]},{kind:"javascript-module",path:"src/lib/stack/stack.ts",declarations:[{kind:"class",description:"",name:"StackComponent",cssProperties:[{description:"Controls the align-items CSS property of the root stack element.",name:"--forge-stack-alignment"},{description:"Controls the justify-content CSS property of the root stack element.",name:"--forge-stack-justify"},{description:"Controls the gap between each child element within a stack.",name:"--forge-stack-gap"},{description:"Controls the height of the root stack element.",name:"--forge-stack-height"},{description:"Controls the flex shorthand property of a child element within the stack.",name:"--forge-stack-stretch"}],cssParts:[{description:"The root container element.",name:"root"}],slots:[{description:"The default/unnamed slot for stack content.",name:""}],members:[{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public",description:"Sets the direction of child items to be horizontal."},{kind:"field",name:"wrap",type:{text:"boolean"},privacy:"public",description:"Wrap is used to wrap child elements to a new row when there's not enough space. This only works when inline is set to true."},{kind:"field",name:"stretch",type:{text:"boolean"},privacy:"public",description:"Stretch allows each child element to take up as much width as possible until the parent container is filled. You can override this on each individual child element by changing its --forge-stack-stretch CSS custom property."},{kind:"field",name:"gap",type:{text:"string"},privacy:"public",description:"Controls the amount of space between child elements within a stack."},{kind:"field",name:"alignment",type:{text:"StackAlignment"},privacy:"public",description:"Controls the align-items property of the stack."},{kind:"field",name:"justify",type:{text:"StackAlignment"},privacy:"public",description:"Controls the justify-content property of the stack."}],attributes:[{type:{text:"boolean"},description:"Sets the direction of child items to be horizontal.",name:"inline"},{type:{text:"boolean"},description:"Wrap is used to wrap child elements to a new row when there's not enough space. This only works when inline is set to true.",name:"wrap"},{type:{text:"boolean"},description:"Stretch allows each child element to take up as much width as possible until the parent container is filled. You can override this on each individual child element by changing its --forge-stack-stretch CSS custom property.",name:"stretch"},{type:{text:"string"},description:"Controls the amount of space between child elements within a stack.",name:"gap"},{type:{text:"StackAlignment"},description:"Controls the align-items property of the stack. See [justify-content on MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content).",name:"alignment"},{type:{text:"StackAlignment"},description:"Controls the justify-content property of the stack. See [align-items on MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items).",name:"justify"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-stack",summary:"The stack is a utility component that helps manage spacing and alignment of immediate children along a vertical or horizontal axis.",customElement:!0}],exports:[{kind:"js",name:"StackComponent",declaration:{name:"StackComponent",module:"src/lib/stack/stack.ts"}}]},{kind:"javascript-module",path:"src/lib/state-layer/state-layer.ts",declarations:[{kind:"class",description:"",name:"StateLayerComponent",cssProperties:[{description:"The color of the state layer. Defaults to the on-surface theme.",name:"--forge-state-layer-color"},{description:"The color of the state layer when hovered.",name:"--forge-state-layer-hover-color"},{description:"The opacity of the state layer when hovered.",name:"--forge-state-layer-hover-opacity"},{description:"The color of the state layer when pressed.",name:"--forge-state-layer-pressed-color"},{description:"The opacity of the state layer when pressed.",name:"--forge-state-layer-pressed-opacity"},{description:"The duration of the hover animation.",name:"--forge-state-layer-hover-duration"},{description:"The duration of the animation.",name:"--forge-state-layer-animation-duration"},{description:"The duration of the pressed animation.",name:"--forge-state-layer-pressed-duration"}],cssParts:[{description:"The surface element.",name:"surface"}],members:[{kind:"field",name:"targetElement",type:{text:"HTMLElement"},privacy:"public",description:"The element to attach the state layer to."},{kind:"field",name:"target",type:{text:"string"},privacy:"public",description:"The id of the element to attach the state layer to."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Controls whether the state layer is disabled."},{kind:"method",name:"playAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"coords",optional:!0,type:{text:"StateLayerCoords"},description:"The coordinates to play the animation from."}],description:`Triggers the animation to run.

Note: If coordinates are not provided, the transition will originate from the center of the target element.`}],attributes:[{type:{text:"string"},description:"The id of the element to attach the state layer to.",name:"target"},{type:{text:"boolean"},description:"Controls whether the state layer is disabled.",name:"disabled"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-state-layer",summary:"State layers show the interaction status of an element.",customElement:!0}],exports:[{kind:"js",name:"StateLayerComponent",declaration:{name:"StateLayerComponent",module:"src/lib/state-layer/state-layer.ts"}}]},{kind:"javascript-module",path:"src/lib/switch/switch.ts",declarations:[{kind:"class",description:"",name:"SwitchComponent",cssProperties:[{description:"The primary color of the switch.",name:"--forge-theme-primary"},{description:"The color of elements placed on top of the primary color (the handle icons for example).",name:"--forge-theme-on-primary"},{description:"The color of the handle in the switch's on state.",name:"--forge-switch-handle-on-color"},{description:"The color of the handle in the switch's off state.",name:"--forge-switch-handle-off-color"},{description:"The color of the handle when the switch is active (pressed) in its on state.",name:"--forge-switch-handle-active-on-color"},{description:"The color of the handle when the switch is active (pressed) in its off state.",name:"--forge-switch-handle-active-off-color"},{description:"The inline and block size of the handle.",name:"--forge-switch-handle-size"},{description:"The inline size of the handle.",name:"--forge-switch-handle-width"},{description:"The block size of the handle.",name:"--forge-switch-handle-height"},{description:"The scale transformation applied to the handle.",name:"--forge-switch-handle-scale"},{description:"The scale transformation applied to the handle in the switch's on state.",name:"--forge-switch-handle-on-scale"},{description:"The scale transformation applied to the handle in the switch's off state.",name:"--forge-switch-handle-off-scale"},{description:"The scale transformation applied to the handle when the switch is active (pressed).",name:"--forge-switch-handle-active-scale"},{description:"The scale transformation applied to the handle when the switch is active (pressed) in its on state.",name:"--forge-switch-handle-active-on-scale"},{description:"The scale transformation applied to the handle when the switch is active (pressed) in its off state.",name:"--forge-switch-handle-active-off-scale"},{description:"The shape of the handle.",name:"--forge-switch-handle-shape"},{description:"The handle's shadow.",name:"--forge-switch-handle-elevation"},{description:"The handle's shadow in the switch's on state.",name:"--forge-switch-handle-on-elevation"},{description:"The handle's shadow in the switch's off state.",name:"--forge-switch-handle-off-elevation"},{description:"The handle's shadow when the switch is active (pressed).",name:"--forge-switch-handle-active-elevation"},{description:"The handle's shadow when the switch is active (pressed) in its on state.",name:"--forge-switch-handle-active-on-elevation"},{description:"The handle's shadow when the switch is active (pressed) in its off state.",name:"--forge-switch-handle-active-off-elevation"},{description:"The color of the track in the switch's on state.",name:"--forge-switch-track-on-color"},{description:"The color fo the track in the switch's off state.",name:"--forge-switch-track-off-color"},{description:"The color of the track when the switch is active (pressed) in its on state.",name:"--forge-switch-track-active-on-color"},{description:"The color fo the track when the switch is active (pressed) in its off state.",name:"--forge-switch-track-active-off-color"},{description:"The inline size of the track.",name:"--forge-switch-track-width"},{description:"The block size of the track.",name:"--forge-switch-track-height"},{description:"The shape of the track.",name:"--forge-switch-track-shape"},{description:"The width of the track border.",name:"--forge-switch-track-border-width"},{description:"The width of the track border in the switch's on state.",name:"--forge-switch-track-on-border-width"},{description:"The width of the track border in the switch's off state.",name:"--forge-switch-track-off-border-width"},{description:"The width of the track border when the switch is active (pressed) in its on state.",name:"--forge-switch-track-active-on-border-width"},{description:"The width of the track border when the switch is active (pressed) in its off state.",name:"--forge-switch-track-active-off-border-width"},{description:"The color of the track border.",name:"--forge-switch-track-border-color"},{description:"The color of the track border in the switch's on state.",name:"--forge-switch-track-on-border-color"},{description:"The color of the track border in the switch's off state.",name:"--forge-switch-track-off-border-color"},{description:"The color of the track border when the switch is active (pressed) in its on state.",name:"--forge-switch-track-active-on-border-color"},{description:"The color of the track border when the switch is active (pressed) in its off state.",name:"--forge-switch-track-active-off-border-color"},{description:"The color of the handle icons.",name:"--forge-switch-icon-color"},{description:"The color of the handle icon in the switch's on state.",name:"--forge-switch-icon-on-color"},{description:"The color of the handle icon in the switch's off state.",name:"--forge-switch-icon-off-color"},{description:"The color of the handle icon when the switch is active (pressed) in its on state.",name:"--forge-switch-icon-active-on-color"},{description:"The color of the handle icon when the switch is active (pressed) in its off state.",name:"--forge-switch-icon-active-off-color"},{description:"The size of the handle icon.",name:"--forge-switch-icon-size"},{description:"The size of the handle icon in the switch's on state.",name:"--forge-switch-icon-on-size"},{description:"The size of the handle icon in the switch's off state.",name:"--forge-switch-icon-off-size"},{description:"The scale transformation applied to the handle icons.",name:"--forge-switch-icon-scale"},{description:"The scale transformation applied to the handle icons in the switch's on state.",name:"--forge-switch-icon-on-scale"},{description:"The scale transformation applied to the handle icons in the switch's off state.",name:"--forge-switch-icon-off-scale"},{description:"The scale transformation applied to the handle icons when the switch is active (pressed) in its on state.",name:"--forge-switch-icon-active-on-scale"},{description:"The scale transformation applied to the handle icons when the switch is active (pressed) in its off state.",name:"--forge-switch-icon-active-off-scale"},{description:"The space between the switch and label.",name:"--forge-switch-gap"},{description:"How the switch and label are distributed along their main axis.",name:"--forge-switch-justify"},{description:"Whether the switch and label are arranged along the inline or block axis.",name:"--forge-switch-direction"},{description:"The inline and block size of the handle's state layer.",name:"--forge-switch-state-layer-size"},{description:"The inline size of the handle's state layer.",name:"--forge-switch-state-layer-width"},{description:"The block size of the handle's state layer.",name:"--forge-switch-state-layer-height"},{description:"The color of the handle's state layer when the switch is in its on state.",name:"--forge-switch-state-layer-on-color"},{description:"The color of the handle's state layer when the switch is in its off state.",name:"--forge-switch-state-layer-off-color"},{description:"The inline and block size of the handle's state layer when the dense switch is used.",name:"--forge-switch-state-layer-dense-size"},{description:"The inline size of the handle's state layer when the dense switch is used.",name:"--forge-switch-state-layer-dense-width"},{description:"The block size of the handle's state layer when the dense switch is used.",name:"--forge-switch-state-layer-dense-height"},{description:"The opacity of the switch when disabled.",name:"--forge-switch-disabled-opacity"},{description:"The duration of animations.",name:"--forge-switch-animation-duration"},{description:"The timing function used in most animations.",name:"--forge-switch-animation-timing"},{description:"The timing function used in active state animations.",name:"--forge-switch-active-animation-timing"}],cssParts:[{description:"Styles the switch container element.",name:"switch"},{description:"Styles the track element.",name:"track"},{description:"Styles the handle element.",name:"handle"},{description:"Styles the on icon element.",name:"icon-on"},{description:"Styles the off icon element.",name:"icon-off"},{description:"Styles the label element.",name:"label"},{description:"Styles the state layer root element.",name:"state-layer"},{description:"Styles the focus indicator root element.",name:"focus-indicator"}],members:[{kind:"method",name:"setFormValue",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"FormValue | null"}},{name:"state",optional:!0,type:{text:"FormValue | null | undefined"}}]},{kind:"field",name:"on",type:{text:"boolean"},privacy:"public",description:"Whether the switch is on the on or off state."},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",deprecated:"use `on` instead",description:"Deprecated. Alias for `on`."},{kind:"field",name:"defaultOn",type:{text:"boolean"},privacy:"public",description:"Whether the switch is on or off by default."},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The value of the switch."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"The density state."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Controls if the switch is disabled."},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",description:"Controls if the switch is required."},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"Controls if the switch is readonly."},{kind:"field",name:"icon",type:{text:"SwitchIconVisibility"},privacy:"public",description:"Controls the presence of the off and on icons."},{kind:"field",name:"labelPosition",type:{text:"SwitchLabelPosition"},privacy:"public",description:"Whether the label appears before or after the switch."},{kind:"method",name:"toggle",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"force",optional:!0,type:{text:"boolean"},description:"Whether to set the switch on or off."}],description:"Toggles the switch on or off."}],events:[{type:{text:"CustomEvent"},description:"Dispatches when the switch's value changes.",name:"forge-switch-change"}],attributes:[{type:{text:"string"},description:"Controls whether the switch is in the on or off state.",name:"on"},{type:{text:"string"},description:"Deprecated. Alias for `on`.",name:"selected"},{type:{text:"string"},description:"Controls whether the switch is in the on or off state by default.",name:"default-on"},{type:{text:"string"},description:"The value of the switch.",name:"value"},{type:{text:"string"},description:"Sets the density state.",name:"dense"},{type:{text:"string"},description:"Controls if the switch is disabled.",name:"disabled"},{type:{text:"string"},description:"Controls if the switch is required.",name:"required"},{type:{text:"string"},description:"Controls if the switch is readonly.",name:"readonly"},{type:{text:"string"},description:"Controls the presence of the off and on icons.",name:"icon"},{type:{text:"string"},description:"Sets whether the label appears before or after the switch.",name:"label-position"}],mixins:[{name:"WithFormAssociation",module:"/src/lib/core/mixins/form/with-form-associated"},{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"},{name:"WithFocusable",module:"/src/lib/core/mixins/focus/with-focusable"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core"},tagName:"forge-switch",summary:"Switches toggle the state of a single setting on or off.",customElement:!0}],exports:[{kind:"js",name:"SwitchComponent",declaration:{name:"SwitchComponent",module:"src/lib/switch/switch.ts"}}]},{kind:"javascript-module",path:"src/lib/table/multi-sort-manager.ts",declarations:[{kind:"class",description:"",name:"MultiSortManager",members:[{kind:"field",name:"_sortedColumns",type:{text:"ISortedItem[]"},privacy:"private",default:"[]"},{kind:"field",name:"sortedColumns",type:{text:"ISortedItem[]"},privacy:"public",readonly:!0},{kind:"method",name:"addSortColumn",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"column",type:{text:"ISortedItem"}}]},{kind:"method",name:"updateSortColumn",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"column",type:{text:"ISortedItemUpdate"}}]},{kind:"method",name:"setSortColumns",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"columns",type:{text:"ISortedItem[]"}}]},{kind:"method",name:"removeSortColumn",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"columnOrIndex",type:{text:"ISortedItem | number"}}]},{kind:"method",name:"isSortColumn",privacy:"public",return:{type:{text:"boolean"}},parameters:[{name:"columnOrIndex",type:{text:"ISortedItem | number"}}]},{kind:"method",name:"clearMultiSort",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"getSortColumn",privacy:"public",return:{type:{text:"ISortedItem | undefined"}},parameters:[{name:"columnIndex",type:{text:"number"}}]},{kind:"method",name:"_updateSortNumbers",privacy:"private",return:{type:{text:"void"}}}]}],exports:[{kind:"js",name:"MultiSortManager",declaration:{name:"MultiSortManager",module:"src/lib/table/multi-sort-manager.ts"}}]},{kind:"javascript-module",path:"src/lib/table/table-row.ts",declarations:[{kind:"class",description:"Represents a row within the table.",name:"TableRow"}],exports:[{kind:"js",name:"TableRow",declaration:{name:"TableRow",module:"src/lib/table/table-row.ts"}}]},{kind:"javascript-module",path:"src/lib/table/table.ts",declarations:[{kind:"class",description:"The custom element class behind the `<forge-table>` component.",name:"TableComponent",members:[{kind:"method",name:"hideColumn",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"columnIndex",type:{text:"number"},description:"The index of the column to hide."}],description:"Hides a column from the table."},{kind:"method",name:"showColumn",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"columnIndex",type:{text:"number"},description:"The index of the column to show."}],description:"Shows a hidden column in th table."},{kind:"method",name:"isColumnHidden",privacy:"public",return:{type:{text:"boolean"}},parameters:[{name:"columnIndex",type:{text:"number"},description:"The index of the column."}],description:"Determines if a column at the given index is hidden or not."},{kind:"method",name:"getSelectedRows",privacy:"public",return:{type:{text:"any[]"}},description:"Returns the selected row instances."},{kind:"method",name:"selectRow",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"data",type:{text:"any"},description:"The row data behind the row that should be selected."}],description:"Selects a row in the table. Only applicable if `select` is true."},{kind:"method",name:"selectRows",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"data",type:{text:"any[]"},description:"The row data begind the rows that should be selected."},{name:"preserveExisting",default:"false",type:{text:"boolean"},description:"Should existing row selections be preserved or cleared.",optional:!0}],description:"Selects one or more rows in the table. Only applicable if `select` is true."},{kind:"method",name:"deselectRow",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"data",type:{text:"any"},description:"The data behind the row that should be deselected."}],description:"Deselects a single row in the table."},{kind:"method",name:"deselectRows",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"data",type:{text:"any[]"},description:"The data behind the rows that should be deselected."}],description:"Deselects one or more rows in the table."},{kind:"method",name:"clearSelections",privacy:"public",return:{type:{text:"void"}},description:"Clears all selected table rows."},{kind:"method",name:"render",privacy:"public",return:{type:{text:"void"}},description:"Forces the table to re-render based on its current configuration."},{kind:"method",name:"expandRow",privacy:"public",return:{type:{text:"Promise<void>"}},parameters:[{name:"rowIndex",type:{text:"any"},description:"The index of the row to expand."},{name:"template",type:{text:"TableViewTemplate"}}],description:"Expands a collapsed row."},{kind:"method",name:"collapseRow",privacy:"public",return:{type:{text:"Promise<void>"}},parameters:[{name:"rowIndex",type:{text:"number"},description:"The index of the row to expand."}],description:"Collapses an expanded row."},{kind:"method",name:"isRowExpanded",privacy:"public",return:{type:{text:"boolean"}},parameters:[{name:"rowIndex",type:{text:"number"},description:"The row index to check."}],description:"Checks if a row is expanded or not."},{kind:"method",name:"selectRowsByIndex",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"indexes",type:{text:"number | number[]"},description:"The row index/indexes to select."},{name:"preserveExisting",optional:!0,type:{text:"boolean"}}],description:"Selects a rows by an index or array of indexes."},{kind:"method",name:"deselectRowsByIndex",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"indexes",type:{text:"number | number[]"},description:"The row index/indexes to deselect"}],description:"Deselects a rows by an index or array of indexes."},{kind:"method",name:"isRowSelected",privacy:"public",return:{type:{text:"boolean"}},parameters:[{name:"rowData",type:{text:"{ [key: string]: any }"},description:"The row object data to check."}],description:"Checks if a row is selected or not."},{kind:"field",name:"data",type:{text:"any[]"},privacy:"public",description:"The data to be display in the table body."},{kind:"field",name:"columnConfigurations",type:{text:"IColumnConfiguration[]"},privacy:"public",description:"The column configuration options."},{kind:"field",name:"select",type:{text:"boolean"},privacy:"public",description:"Controls the visibility of the select column."},{kind:"field",name:"multiselect",type:{text:"boolean"},privacy:"public",description:"Controls the visibility of the select all checkbox (only applied when `select` is `true`)."},{kind:"field",name:"selectKey",type:{text:"string | string[]"},privacy:"public",description:"The row key for matching data to selections."},{kind:"field",name:"tooltipSelect",type:{text:"string | TableSelectTooltipCallback"},privacy:"public"},{kind:"field",name:"tooltipSelectAll",type:{text:"string"},privacy:"public"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Controls whether the table is dense or not. False by default."},{kind:"field",name:"roomy",type:{text:"boolean"},privacy:"public",description:"Controls whether the table is roomy or not. False by default."},{kind:"field",name:"filter",type:{text:"boolean"},privacy:"public",description:"Controls whether the table filters are visible or not."},{kind:"field",name:"fixedHeaders",type:{text:"boolean"},privacy:"public",description:"Controls whether the table applies fixed headers when in scroll containers."},{kind:"field",name:"layoutType",type:{text:"TableLayoutType"},privacy:"public",description:"Controls the table layout algorithm."},{kind:"field",name:"wrapContent",type:{text:"boolean"},privacy:"public",description:"Controls whether the content in each cell wraps or not (true by default)."},{kind:"field",name:"resizable",type:{text:"boolean"},privacy:"public",description:"Controls whether the columns are resizable or not."},{kind:"field",name:"minResizeWidth",type:{text:"number"},privacy:"public",description:"Gets/sets the minimum width that a column can be resized to by the user dragging the resize handle."},{kind:"field",name:"allowRowClick",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the rows respond to (and emit) row click events."},{kind:"field",name:"multiColumnSort",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"rowCreated",type:{text:"TableRowCreatedCallback"},privacy:"public"},{kind:"field",name:"cellCreated",type:{text:"TableCellCreatedCallback"},privacy:"public"},{kind:"field",name:"selectAllTemplate",type:{text:"TableHeaderSelectAllTemplate"},privacy:"public"},{kind:"field",name:"selectCheckboxAlignment",type:{text:"`${CellAlign}`"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-table",customElement:!0}],exports:[{kind:"js",name:"TableComponent",declaration:{name:"TableComponent",module:"src/lib/table/table.ts"}}]},{kind:"javascript-module",path:"src/lib/table/types.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/lib/text-field/text-field.ts",declarations:[{kind:"class",description:"",name:"TextFieldComponent",cssParts:[{description:"The root container element.",name:"root"},{description:"The label element.",name:"label"},{description:"The container element surrounding the input.",name:"container"},{description:"The element containing te input slot.",name:"input"},{description:"The element containing the start slot.",name:"start"},{description:"The element containing the end slot.",name:"end"},{description:"The popover icon element.",name:"popover-icon"},{description:"The element containing the accessory slot.",name:"accessory"},{description:"The support text element.",name:"support-text"},{description:"The element containing the support text start slot.",name:"support-text-start"},{description:"The element containing the support text end slot.",name:"support-text-end"},{description:"The focus indicator element.",name:"focus-indicator"}],slots:[{description:"The default/unnamed slot for the field's input.",name:""},{description:"Renders its content as a positioned label.",name:"label"},{description:"Typically reserved for content/icons that render logically before the default slot content.",name:"start"},{description:"Typically reserved content/icons that render logically after the default slot content.",name:"end"},{description:"Content slotted here replaces the default clear button.",name:"clear-button"},{description:"Sets the text content of the clear button's tooltip and accessible label.",name:"clear-button-tooltip"},{description:"Used for content such as a button that is logically connected to the field but should appear distinct from the input.",name:"accessory"},{description:"Used for content that provides additional information about the field. Aligns to the inline start of the field.",name:"support-text-start"},{description:"Used for content that provides additional information about the field. Aligns to the inline end of the field.",name:"support-text-end"}],members:[{kind:"field",name:"popoverTargetElement",type:{text:"HTMLElement"},privacy:"public",readonly:!0,description:"Gets a reference to the element that the popover should target for best alignment."},{kind:"field",name:"showClear",type:{text:"boolean"},privacy:"public",description:"Whether the clear button appears when text has been entered."},{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"popoverExpanded",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public",inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}],inheritedFrom:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}}],events:[{type:{text:"CustomEvent<null>"},description:"Dispatches when the clear button is clicked.",name:"forge-text-field-clear"}],attributes:[{type:{text:"boolean"},description:"Whether the clear button appears when text has been entered.",name:"show-clear"}],superclass:{name:"BaseField",module:"/src/lib/field/base/base-field"},tagName:"forge-text-field",summary:"The Forge Text Field component wraps and styles an input or textarea element.",customElement:!0}],exports:[{kind:"js",name:"TextFieldComponent",declaration:{name:"TextFieldComponent",module:"src/lib/text-field/text-field.ts"}}]},{kind:"javascript-module",path:"src/lib/time-picker/time-picker.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-time-picker>` custom element.",name:"TimePickerComponent",members:[{kind:"field",name:"value",type:{text:"string | null | undefined"},privacy:"public"},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"allowSeconds",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"masked",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showMaskFormat",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"use24HourTime",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"allowInvalidTime",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"min",type:{text:"string | null | undefined"},privacy:"public"},{kind:"field",name:"max",type:{text:"string | null | undefined"},privacy:"public"},{kind:"field",name:"restrictedTimes",type:{text:"string[]"},privacy:"public"},{kind:"field",name:"startTime",type:{text:"string | null | undefined"},privacy:"public"},{kind:"field",name:"step",type:{text:"number"},privacy:"public"},{kind:"field",name:"allowInput",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showNow",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"showHourOptions",type:{text:"boolean"},privacy:"public",description:"Whether or not to display hour options in dropdown"},{kind:"field",name:"customOptions",type:{text:"ITimePickerOption[]"},privacy:"public"},{kind:"field",name:"validationCallback",type:{text:"TimePickerValidationCallback"},privacy:"public"},{kind:"field",name:"parseCallback",type:{text:"TimePickerParseCallback"},privacy:"public"},{kind:"field",name:"formatCallback",type:{text:"TimePickerFormatCallback"},privacy:"public"},{kind:"field",name:"coercionCallback",type:{text:"TimePickerCoercionCallback"},privacy:"public"},{kind:"field",name:"prepareMaskCallback",type:{text:"TimePickerPrepareMaskCallback"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public"},{kind:"field",name:"allowDropdown",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popupTarget",type:{text:"string"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-time-picker",customElement:!0}],exports:[{kind:"js",name:"TimePickerComponent",declaration:{name:"TimePickerComponent",module:"src/lib/time-picker/time-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/toast/toast.ts",declarations:[{kind:"class",description:"",name:"ToastComponent",cssProperties:[{description:"The background color of the toast.",name:"--forge-toast-background"},{description:"The text color of the toast.",name:"--forge-toast-color"},{description:"The offset of the toast from the edge of the viewport.",name:"--forge-toast-offset"},{description:"The shape of the toast.",name:"--forge-toast-shape"},{description:"The elevation of the toast.",name:"--forge-toast-elevation"},{description:"The text color of the action button.",name:"--forge-toast-action-color"},{description:"The minimum width of the toast.",name:"--forge-toast-min-width"},{description:"The maximum width of the toast.",name:"--forge-toast-max-width"},{description:"The minimum height of the toast.",name:"--forge-toast-min-height"},{description:"The padding of the toast when inline.",name:"--forge-toast-inline-padding"},{description:"The spacing between toasts.",name:"--forge-toast-spacing"},{description:"The padding of the toast message.",name:"--forge-toast-message-padding"},{description:"The duration of the enter animation.",name:"--forge-toast-enter-duration"},{description:"The timing function of the enter animation.",name:"--forge-toast-enter-timing"},{description:"The duration of the exit animation.",name:"--forge-toast-exit-duration"},{description:"The timing function of the exit animation.",name:"--forge-toast-exit-timing"},{description:"The origin of the slide animation.",name:"--forge-toast-slide-origin"}],cssParts:[{description:"The surface container.",name:"surface"},{description:"The message container.",name:"message"},{description:"The action button.",name:"action-button"},{description:"The close button.",name:"close-button"},{description:"The `<forge-overlay>` element.",name:"overlay"}],members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"The open state."},{kind:"field",name:"duration",type:{text:"number"},privacy:"public",description:"The duration in milliseconds that the toast is displayed."},{kind:"field",name:"placement",type:{text:"ToastPlacement"},privacy:"public",description:"The placement of the toast."},{kind:"field",name:"actionText",type:{text:"string"},privacy:"public",description:"The text for the action button. This controls the visibility of the action button."},{kind:"field",name:"dismissible",type:{text:"boolean"},privacy:"public",description:"Whether the toast is dismissible (displays a close button)."},{kind:"field",name:"dismissLabel",type:{text:"string"},privacy:"public",description:"The accessible label for the dismiss button."},{kind:"field",name:"theme",type:{text:"ToastTheme"},privacy:"public",description:"The theme of the toast."},{kind:"method",name:"show",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"hide",privacy:"public",return:{type:{text:"Promise<void>"}}}],events:[{type:{text:"CustomEvent<void>"},description:"Dispatched when the action button is clicked.",name:"forge-toast-action"},{type:{text:"CustomEvent<void>"},description:"Dispatched when the toast is closed.",name:"forge-toast-close"}],attributes:[{type:{text:"boolean"},description:"The open state.",name:"open"},{type:{text:"number"},description:"The duration in milliseconds that the toast is displayed.",name:"duration"},{type:{text:"ToastPlacement"},description:"The placement of the toast.",name:"placement"},{type:{text:"string"},description:"The text for the action button. This controls the visibility of the action button.",name:"action-text"},{type:{text:"boolean"},description:"Whether the toast is dismissible (displays a close button).",name:"dismissible"},{type:{text:"string"},description:"The accessible label for the dismiss button.",name:"dismiss-label"},{type:{text:"ToastTheme"},description:"The theme of the toast.",name:"theme"}],mixins:[{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-toast",summary:"Toasts are non-modal notifications that appear in response to user interactions.",customElement:!0}],exports:[{kind:"js",name:"ToastComponent",declaration:{name:"ToastComponent",module:"src/lib/toast/toast.ts"}}]},{kind:"javascript-module",path:"src/lib/toolbar/toolbar.ts",declarations:[{kind:"class",description:"",name:"ToolbarComponent",cssProperties:[{description:"Controls the height.",name:"--forge-theme-height"},{description:"Controls the minimum height.",name:"--forge-theme-min-height"},{description:"Controls the background-color of the toolbar.",name:"--forge-theme-surface"},{description:"Controls the divider width.",name:"--forge-toolbar-divider-width"},{description:"Controls the divider style.",name:"--forge-toolbar-divider-style"},{description:"Controls the divider color.",name:"--forge-toolbar-divider-color"},{description:"Controls the border radius of the toolbar.",name:"--forge-toolbar-shape"},{description:"Controls the border radius of the top left corner.",name:"--forge-toolbar-start-start-shape"},{description:"Controls the border radius of the top right corner.",name:"--forge-toolbar-start-end-shape"},{description:"Controls the border radius of the bottom left corner.",name:"--forge-toolbar-end-start-shape"},{description:"Controls the border radius of the bottom right corner.",name:"--forge-toolbar-end-end-shape"},{description:"Controls the left and right padding using the padding-inline style.",name:"--forge-toolbar-padding"},{description:"Controls the top and bottom padding using the padding-block style.",name:"--forge-toolbar-padding-block"},{description:"Controls the left and right padding using the padding-block style.",name:"--forge-toolbar-padding-inline"}],cssParts:[{description:"The root container element wrapping all slots and content.",name:"root"},{description:"The internal container element for the start, center, and end slots.",name:"inner"},{description:"The container element for the before-start slot.",name:"before-section-start"},{description:"The container element for the start slot.",name:"section-start"},{description:"The container element for the center slot.",name:"section-center"},{description:"The container element for the end slot.",name:"section-end"},{description:"The container element for the after-end slot.",name:"after-section-end"}],members:[{kind:"field",name:"_inverted",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"inverted",type:{text:"boolean"},privacy:"public",description:"Controls whether a bottom divider (default) or top divider (true) is used."}],attributes:[{type:{text:"boolean"},description:"Controls whether a bottom divider (default) or top divider (true) is used.",name:"inverted"},{type:{text:"boolean"},description:"Hides the internal divider.",name:"no-divider"},{type:{text:"boolean"},description:"Deprecated. Use no-divider instead.",name:"no-border"},{type:{text:"boolean"},description:"Sets the internal padding style to 0.",name:"no-padding"},{type:{text:"boolean"},description:"Forces the internal container to use height: auto for dynamic content that doesn't fit the static height.",name:"auto-height"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-toolbar",summary:`Toolbars allow you to place titles and actions within a container and align them to the start, center, or end of the toolbar.\r
This component is useful as headers and footers within pages, dialogs, sections... etc. to ensure consistent layout and alignment.`,customElement:!0}],exports:[{kind:"js",name:"ToolbarComponent",declaration:{name:"ToolbarComponent",module:"src/lib/toolbar/toolbar.ts"}}]},{kind:"javascript-module",path:"src/lib/tooltip/tooltip.ts",declarations:[{kind:"class",description:"",name:"TooltipComponent",cssProperties:[{description:"The background color of the tooltip surface.",name:"--forge-tooltip-background"},{description:"The text color of the tooltip surface.",name:"--forge-tooltip-color"},{description:"The shape of the tooltip surface.",name:"--forge-tooltip-shape"},{description:"The padding of the tooltip surface.",name:"--forge-tooltip-padding"},{description:"The block padding of the tooltip surface.",name:"--forge-tooltip-padding-block"},{description:"The inline padding of the tooltip surface.",name:"--forge-tooltip-padding-inline"},{description:"The maximum width of the tooltip surface.",name:"--forge-tooltip-max-width"},{description:"The elevation of the tooltip surface.",name:"--forge-tooltip-elevation"},{description:"The border width of the tooltip surface.",name:"--forge-tooltip-border-width"},{description:"The border style of the tooltip surface.",name:"--forge-tooltip-border-style"},{description:"The border color of the tooltip surface.",name:"--forge-tooltip-border-color"},{description:"The animation timing function of the tooltip surface.",name:"--forge-tooltip-animation-timing"},{description:"The animation duration of the tooltip surface.",name:"--forge-tooltip-animation-duration"},{description:"The animation offset of the tooltip surface.",name:"--forge-tooltip-animation-offset"},{description:"The size of the tooltip arrow.",name:"--forge-tooltip-arrow-size"},{description:"The height of the tooltip arrow.",name:"--forge-tooltip-arrow-height"},{description:"The width of the tooltip arrow.",name:"--forge-tooltip-arrow-width"},{description:"The shape of the tooltip arrow.",name:"--forge-tooltip-arrow-shape"},{description:"The clip path of the tooltip arrow.",name:"--forge-tooltip-arrow-clip-path"},{description:"The rotation of the tooltip arrow.",name:"--forge-tooltip-arrow-rotation"},{description:"The rotation of the tooltip arrow when the tooltip is placed on top.",name:"--forge-tooltip-arrow-top-rotation"},{description:"The rotation of the tooltip arrow when the tooltip is placed on the right.",name:"--forge-tooltip-arrow-right-rotation"},{description:"The rotation of the tooltip arrow when the tooltip is placed on the bottom.",name:"--forge-tooltip-arrow-bottom-rotation"},{description:"The rotation of the tooltip arrow when the tooltip is placed on the left.",name:"--forge-tooltip-arrow-left-rotation-"}],cssParts:[{description:"The tooltip surface.",name:"surface"},{description:"The tooltip arrow.",name:"arrow"},{description:"The overlay surface.",name:"overlay"}],slots:[{description:"The content to display in the tooltip.",name:""}],members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether or not the tooltip is open."},{kind:"field",name:"type",type:{text:"TooltipType"},privacy:"public",description:"The type of tooltip. Valid values are `presentation` (default), `label`, and `description`."},{kind:"field",name:"anchor",type:{text:"string"},privacy:"public",description:"The id of the element that the tooltip is anchored to."},{kind:"field",name:"anchorElement",type:{text:"HTMLElement | null"},privacy:"public"},{kind:"field",name:"target",type:{text:"string"},privacy:"public",deprecated:"use `anchor` instead"},{kind:"field",name:"placement",type:{text:"TooltipPlacement"},privacy:"public",description:"The placement of the tooltip relative to the anchor element."},{kind:"field",name:"position",type:{text:"`${TooltipPlacement}`"},privacy:"public",deprecated:"use `placement` instead"},{kind:"field",name:"delay",type:{text:"number"},privacy:"public",description:"The delay in milliseconds before the tooltip is shown."},{kind:"field",name:"offset",type:{text:"number"},privacy:"public",description:"The offset in pixels between the tooltip and the anchor element."},{kind:"field",name:"flip",type:{text:"OverlayFlipState"},privacy:"public",description:"How the tooltip should place itself if there is not enough space at the desired placement."},{kind:"field",name:"boundary",type:{text:"string | null"},privacy:"public",description:"The id of the element that the tooltip should be constrained to."},{kind:"field",name:"boundaryElement",type:{text:"HTMLElement | null"},privacy:"public",description:"The element that the tooltip should be constrained to."},{kind:"field",name:"fallbackPlacements",type:{text:"PositionPlacement[] | null"},privacy:"public",description:"The fallback placements of the tooltip relative to the anchor element."},{kind:"field",name:"triggerType",type:{text:"TooltipTriggerType | TooltipTriggerType[]"},privacy:"public",description:"The trigger type(s) that will open the tooltip. Valid values are `hover` (default), `longpress`, and `focus`."}],attributes:[{type:{text:"boolean"},description:"Whether or not the tooltip is open.",name:"open"},{type:{text:"TooltipType"},description:"The type of tooltip. Valid values are `presentation` (default), `label`, and `description`.",name:"type"},{type:{text:"string"},description:"The id of the element that the tooltip is anchored to.",name:"anchor"},{type:{text:"TooltipPlacement"},description:"The placement of the tooltip relative to the anchor element.",name:"placement"},{type:{text:"number"},description:"The delay in milliseconds before the tooltip is shown.",name:"delay"},{type:{text:"number"},description:"The offset in pixels between the tooltip and the anchor element.",name:"offset"},{type:{text:"OverlayFlipState"},description:"How the tooltip should place itself if there is not enough space at the desired placement.",name:"flip"},{type:{text:"string | null"},description:"The id of the element that the tooltip should be constrained to.",name:"boundary"},{type:{text:"PositionPlacement[]"},description:"The fallback placements of the tooltip relative to the anchor element.",name:"fallbackPlacements"}],mixins:[{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-tooltip",summary:"Tooltips display information related to an element when the user hovers over an element.",customElement:!0}],exports:[{kind:"js",name:"TooltipComponent",declaration:{name:"TooltipComponent",module:"src/lib/tooltip/tooltip.ts"}}]},{kind:"javascript-module",path:"src/lib/view-switcher/view-switcher.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-view-switcher>` custom element.",name:"ViewSwitcherComponent",members:[{kind:"field",name:"index",type:{text:"number"},privacy:"public",description:"Gets/sets the currently visible view index."},{kind:"field",name:"animationType",type:{text:"`${ViewSwitcherAnimationType}`"},privacy:"public",description:"Gets/sets the animation type."},{kind:"method",name:"next",privacy:"public",return:{type:{text:"void"}},description:"Transitions to the next view."},{kind:"method",name:"previous",privacy:"public",return:{type:{text:"void"}},description:"Transitions to the previous view."},{kind:"method",name:"goToStart",privacy:"public",return:{type:{text:"void"}},description:"Transitions to the first view."},{kind:"method",name:"goToEnd",privacy:"public",return:{type:{text:"void"}},description:"Transitions to the last view."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-view-switcher",customElement:!0}],exports:[{kind:"js",name:"ViewSwitcherComponent",declaration:{name:"ViewSwitcherComponent",module:"src/lib/view-switcher/view-switcher.ts"}}]},{kind:"javascript-module",path:"src/test/utils/test-harness.ts",declarations:[{kind:"class",description:"",name:"TestHarness",members:[{kind:"method",name:"initElementRefs",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"invalidate",privacy:"public",return:{type:{text:"void"}}}]}],exports:[{kind:"js",name:"TestHarness",declaration:{name:"TestHarness",module:"src/test/utils/test-harness.ts"}}]},{kind:"javascript-module",path:"src/test/utils/utils.ts",declarations:[{kind:"function",name:"tryCleanupPopovers",return:{type:{text:"void"}}},{kind:"function",name:"isVisibleInScrollContainer",return:{type:{text:"boolean"}},parameters:[{name:"scrollContainer",type:{text:"HTMLElement"}},{name:"element",type:{text:"HTMLElement"}}]},{kind:"function",name:"mockPlatform",return:{type:{text:"() => void"}},parameters:[{name:"property",type:{text:"string"}},{name:"value",type:{text:"any"}}]}],exports:[{kind:"js",name:"tryCleanupPopovers",declaration:{name:"tryCleanupPopovers",module:"src/test/utils/utils.ts"}},{kind:"js",name:"isVisibleInScrollContainer",declaration:{name:"isVisibleInScrollContainer",module:"src/test/utils/utils.ts"}},{kind:"js",name:"mockPlatform",declaration:{name:"mockPlatform",module:"src/test/utils/utils.ts"}}]},{kind:"javascript-module",path:"src/dev/src/theme/dark-theme.ts",declarations:[{kind:"function",name:"toggleDarkTheme",return:{type:{text:"Promise<boolean>"}}},{kind:"function",name:"listenThemeChange",return:{type:{text:"Promise<void>"}}}],exports:[{kind:"js",name:"toggleDarkTheme",declaration:{name:"toggleDarkTheme",module:"src/dev/src/theme/dark-theme.ts"}},{kind:"js",name:"listenThemeChange",declaration:{name:"listenThemeChange",module:"src/dev/src/theme/dark-theme.ts"}}]},{kind:"javascript-module",path:"src/dev/src/utils/utils.ts",declarations:[{kind:"function",name:"showToast",return:{type:{text:"void"}},parameters:[{name:"message",type:{text:"string"}}]},{kind:"function",name:"randomTimeout",return:{type:{text:"number"}},parameters:[{name:"min",type:{text:"number"}},{name:"max",type:{text:"number"}}]},{kind:"function",name:"setCookie",return:{type:{text:"void"}},parameters:[{name:"name",type:{text:"string"}},{name:"value",type:{text:"string"}},{name:"expDays",default:"365"}]},{kind:"function",name:"getCookie",return:{type:{text:"string"}},parameters:[{name:"name",type:{text:"string"}}]}],exports:[{kind:"js",name:"showToast",declaration:{name:"showToast",module:"src/dev/src/utils/utils.ts"}},{kind:"js",name:"randomTimeout",declaration:{name:"randomTimeout",module:"src/dev/src/utils/utils.ts"}},{kind:"js",name:"setCookie",declaration:{name:"setCookie",module:"src/dev/src/utils/utils.ts"}},{kind:"js",name:"getCookie",declaration:{name:"getCookie",module:"src/dev/src/utils/utils.ts"}}]},{kind:"javascript-module",path:"src/dev/pages/accordion/accordion.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/app-bar/app-bar.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/autocomplete/autocomplete.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/avatar/avatar.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/badge/badge.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/banner/banner.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/bottom-sheet/bottom-sheet.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/button/button.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/button-area/button-area.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/button-toggle/button-toggle.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/calendar/calendar.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/card/card.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/checkbox/checkbox.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/chip-field/chip-field.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/chips/chips.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/circular-progress/circular-progress.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/color-picker/color-picker.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/date-picker/date-picker.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/date-range-picker/date-range-picker.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/dialog/dialog.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/divider/divider.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/drawer/drawer.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/expansion-panel/expansion-panel.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/fab/fab.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/field/field.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/file-picker/file-picker.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/focus-indicator/focus-indicator.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/icon/icon.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/icon-button/icon-button.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/inline-message/inline-message.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/keyboard-shortcut/keyboard-shortcut.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/label/label.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/label-value/label-value.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/linear-progress/linear-progress.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/list/list.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/menu/menu.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/open-icon/open-icon.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/overlay/overlay.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/page-state/page-state.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/paginator/paginator.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/popover/popover.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/profile-card/profile-card.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/radio/radio.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/scaffold/scaffold.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/select/select.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/skeleton/skeleton.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/slider/slider.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/split-button/split-button.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/split-view/split-view.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/stack/stack.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/state-layer/state-layer.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/stepper/stepper.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/switch/switch.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/table/table.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/tabs/tabs.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/text-field/text-field.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/theme/theme.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/time-picker/time-picker.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/toast/toast.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/toolbar/toolbar.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/tooltip/tooltip.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/typography/typography.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/dev/pages/view-switcher/view-switcher.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/lib/app-bar/app-bar/app-bar.ts",declarations:[{kind:"class",description:"",name:"AppBarComponent",cssProperties:[{description:"The background color of the app bar.",name:"--forge-app-bar-background"},{description:"The text color of the app bar.",name:"--forge-app-bar-foreground"},{description:"The `z-index` of the app bar.",name:"--forge-app-bar-z-index"},{description:"The elevation of the app bar.",name:"--forge-app-bar-elevation"},{description:"The height of the app bar.",name:"--forge-app-bar-height"},{description:"The inline padding of the app bar.",name:"--forge-app-bar-row-padding"},{description:"The space between the logo and title.",name:"--forge-app-bar-logo-gap"},{description:"The padding around the title element.",name:"--forge-app-bar-title-padding"},{description:"The transition duration for animations.",name:"--forge-app-bar-transition-duration"},{description:"The transition timing function for animations.",name:"--forge-app-bar-transition-timing"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The title element.",name:"title"}],slots:[{description:"Reserved for the brand logo.",name:"logo"},{description:"Reserved for the application title. This will overwrite the `titleText` property/attribute.",name:"title"},{description:"Places content at the beginning of the app bar.",name:"start"},{description:"Places content in the center of the app bar.",name:"center"},{description:"Places content at the end of the app bar.",name:"end"}],members:[{kind:"field",name:"titleText",type:{text:"string"},privacy:"public",description:"The text to display in the title."},{kind:"field",name:"elevation",type:{text:"AppBarElevation"},privacy:"public",description:"The elevation of the app bar."},{kind:"field",name:"theme",type:{text:"AppBarTheme"},privacy:"public",description:"The theme of the app bar."},{kind:"field",name:"href",type:{text:"string"},privacy:"public",description:"The href that will be used to make the logo and title area a clickable link."},{kind:"field",name:"target",type:{text:"string"},privacy:"public"}],events:[{type:{text:"CustomEvent<void>"},description:"Fires when the app bar is clicked.",name:"forge-app-bar-navigate"}],attributes:[{type:{text:"string"},description:"The text to display in the title.",name:"title-text"},{type:{text:"string"},description:"The elevation of the app bar.",name:"elevation"},{type:{text:"string"},description:"The theme of the app bar.",name:"theme"},{type:{text:"string"},description:"The href that will be used to make the logo and title area a clickable link",name:"href"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar",customElement:!0}],exports:[{kind:"js",name:"AppBarComponent",declaration:{name:"AppBarComponent",module:"src/lib/app-bar/app-bar/app-bar.ts"}}]},{kind:"javascript-module",path:"src/lib/app-bar/help-button/app-bar-help-button.ts",declarations:[{kind:"class",description:"",name:"AppBarHelpButtonComponent",members:[{kind:"field",name:"options",type:{text:"IMenuOption[]"},privacy:"public",description:"The menu options to display when the button is clicked"},{kind:"field",name:"icon",type:{text:"string"},privacy:"public",description:"The name of an alternative icon to display."}],attributes:[{type:{text:"string"},description:"The name of an alternative icon to display.",name:"icon"},{type:{text:"string"},description:"The aria-label to apply to the button.",name:"aria-label"},{type:{text:"string"},description:"The id of an element to use as the aria-labelledby attribute.",name:"aria-labelledby"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar-help-button",customElement:!0}],exports:[{kind:"js",name:"AppBarHelpButtonComponent",declaration:{name:"AppBarHelpButtonComponent",module:"src/lib/app-bar/help-button/app-bar-help-button.ts"}}]},{kind:"javascript-module",path:"src/lib/app-bar/menu-button/app-bar-menu-button.ts",declarations:[{kind:"class",description:"",name:"AppBarMenuButtonComponent",members:[{kind:"field",name:"_iconButtonElement",type:{text:"IIconButtonComponent"},privacy:"private"},{kind:"field",name:"_iconElement",type:{text:"IIconComponent"},privacy:"private"},{kind:"field",name:"_forwardObserver",type:{text:"MutationObserver | undefined"},privacy:"private"},{kind:"field",name:"_iconName",type:{text:"string"},privacy:"private"},{kind:"field",name:"icon",type:{text:"string"},privacy:"public",description:"The name of an alternative icon to display."}],attributes:[{type:{text:"string"},description:"The name of an alternative icon to display.",name:"icon"},{type:{text:"string"},description:"The aria-label to apply to the button.",name:"aria-label"},{type:{text:"string"},description:"The id of an element to use as the aria-labelledby attribute.",name:"aria-labelledby"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar-menu-button",customElement:!0}],exports:[{kind:"js",name:"AppBarMenuButtonComponent",declaration:{name:"AppBarMenuButtonComponent",module:"src/lib/app-bar/menu-button/app-bar-menu-button.ts"}}]},{kind:"javascript-module",path:"src/lib/app-bar/notification-button/app-bar-notification-button.ts",declarations:[{kind:"class",description:"",name:"AppBarNotificationButtonComponent",members:[{kind:"field",name:"count",type:{text:"number | string"},privacy:"public",description:"The number to display in the badge."},{kind:"field",name:"dot",type:{text:"boolean"},privacy:"public",description:"Whether to display the dot variant of the badge or not."},{kind:"field",name:"theme",type:{text:"string"},privacy:"public",description:"The theme to apply to the badge."},{kind:"field",name:"icon",type:{text:"string"},privacy:"public",description:"The name of an alternative icon to display."},{kind:"field",name:"showBadge",type:{text:"boolean"},privacy:"public",description:"Whether to display the badge or not."}],attributes:[{type:{text:"string"},description:"The number to display in the badge.",name:"count"},{type:{text:"boolean"},description:"Whether to display the dot variant of the badge or not.",name:"dot"},{type:{text:"boolean"},description:"Whether to display the badge or not.",name:"show-badge"},{type:{text:"string"},description:"The theme to apply to the badge.",name:"theme"},{type:{text:"string"},description:"The name of an alternative icon to display.",name:"icon"},{type:{text:"string"},description:"The aria-label to apply to the button.",name:"aria-label"},{type:{text:"string"},description:"The id of an element to use as the aria-labelledby attribute.",name:"aria-labelledby"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar-notification-button",customElement:!0}],exports:[{kind:"js",name:"AppBarNotificationButtonComponent",declaration:{name:"AppBarNotificationButtonComponent",module:"src/lib/app-bar/notification-button/app-bar-notification-button.ts"}}]},{kind:"javascript-module",path:"src/lib/app-bar/profile-button/app-bar-profile-button.ts",declarations:[{kind:"class",description:"",name:"AppBarProfileButtonComponent",members:[{kind:"field",name:"fullName",type:{text:"string"},privacy:"public",description:"The full name."},{kind:"field",name:"email",type:{text:"string"},privacy:"public",description:"The email address."},{kind:"field",name:"avatarImageUrl",type:{text:"string"},privacy:"public",description:"The url of the avatar image to display."},{kind:"field",name:"avatarLetterCount",type:{text:"number"},privacy:"public",description:"The number of letters to display in the avatar."},{kind:"field",name:"avatarText",type:{text:"string"},privacy:"public",description:"The text to display in the avatar."},{kind:"field",name:"avatarIcon",type:{text:"string"},privacy:"public",description:"The name of an alternative icon to display in the avatar."},{kind:"field",name:"signOutButton",type:{text:"boolean"},privacy:"public",description:"Whether to display the sign out button or not. Defaults to `true`."},{kind:"field",name:"profileButton",type:{text:"boolean"},privacy:"public",description:"Whether to display the profile button or not."},{kind:"field",name:"signOutButtonText",type:{text:"string"},privacy:"public",description:"The text to display in the sign out button."},{kind:"field",name:"profileButtonText",type:{text:"string"},privacy:"public",description:"The text to display in the profile button."},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Whether the profile card is open or not."},{kind:"field",name:"popupElement",type:{text:"IPopoverComponent | undefined"},privacy:"public",readonly:!0,description:"The popup element when open."},{kind:"field",name:"profileCardBuilder",type:{text:"AppBarProfileButtonProfileCardBuilder"},privacy:"public",description:"Sets the profile card builder callback that will be used to add extra content to the profile card."}],attributes:[{type:{text:"string"},description:"The url of the avatar image to display.",name:"avatar-image-url"},{type:{text:"number"},description:"The number of letters to display in the avatar.",name:"avatar-letter-count"},{type:{text:"string"},description:"The text to display in the avatar.",name:"avatar-text"},{type:{text:"string"},description:"The name of an alternative icon to display in the avatar.",name:"avatar-icon"},{type:{text:"string"},description:"The full name.",name:"full-name"},{type:{text:"string"},description:"The email address.",name:"email"},{type:{text:"boolean"},description:"Whether to display the sign out button or not. Defaults to `true`.",name:"sign-out-button"},{type:{text:"boolean"},description:"Whether to display the profile button or not.",name:"profile-button"},{type:{text:"string"},description:"The text to display in the sign out button.",name:"sign-out-button-text"},{type:{text:"string"},description:"The text to display in the profile button.",name:"profile-button-text"},{type:{text:"boolean"},description:"Whether the profile card is open or not.",name:"open"},{type:{text:"string"},description:"The aria-label to apply to the button.",name:"aria-label"},{type:{text:"string"},description:"The id of an element to use as the aria-labelledby attribute.",name:"aria-labelledby"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar-profile-button",customElement:!0}],exports:[{kind:"js",name:"AppBarProfileButtonComponent",declaration:{name:"AppBarProfileButtonComponent",module:"src/lib/app-bar/profile-button/app-bar-profile-button.ts"}}]},{kind:"javascript-module",path:"src/lib/app-bar/search/app-bar-search.ts",declarations:[{kind:"class",description:"",name:"AppBarSearchComponent",cssProperties:[{description:"Controls the border-color of the container outline, the font-color, and icon color.",name:"--forge-theme-on-primary"},{description:"Controls the font color of the buttons.",name:"--forge-theme-on-surface"},{description:"Controls the placeholder font color.",name:"--forge-theme-text-medium"},{description:"Controls the background-color of the container.",name:"--forge-app-bar-search-theme-background"},{description:"Controls the focused background-color of the container.",name:"--forge-app-bar-search-theme-background-focused"},{description:"Controls the hover opacity of the outline.",name:"--forge-app-bar-search-theme-hover-opacity"},{description:"Controls the disabled opacity of the component.",name:"--forge-app-bar-search-theme-disabled-opacity"}],cssParts:[{description:"The root element",name:"root"},{description:"The input container element.",name:"container"},{description:"The icon container element.",name:"icon-container"},{description:"The <forge-icon> element.",name:"icon"},{description:"The context container element.",name:"context"},{description:"The context divider element.",name:"context-divider"},{description:"The context button element.",name:"context-button"},{description:"The context button text element.",name:"context-button-text"},{description:"The context button icon element.",name:"context-button-icon"},{description:"The global icon container element.",name:"global-icon-container"},{description:"The global icon <forge-icon> element.",name:"global-icon"},{description:"The action container element around the slot.",name:"actions-container"}],slots:[{description:"The default (unnamed) slot is where child `<input>` elements will be placed.",name:""},{description:"Places actions at the end of the input.",name:"action"}],members:[{kind:"field",name:"value",type:{text:"string"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"placeholder",type:{text:"string"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-app-bar-search",customElement:!0}],exports:[{kind:"js",name:"AppBarSearchComponent",declaration:{name:"AppBarSearchComponent",module:"src/lib/app-bar/search/app-bar-search.ts"}}]},{kind:"javascript-module",path:"src/lib/button/base/base-button.ts",declarations:[{kind:"class",description:"",name:"BaseButton",members:[{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0},{kind:"field",name:"name",type:{text:"string"},privacy:"public"},{kind:"field",name:"value",type:{text:"string"},privacy:"public"},{kind:"field",name:"type",type:{text:"ButtonType"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public"},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}},description:"Clicks the button."},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",type:{text:"ExperimentalFocusOptions"}}],description:"Focuses the button."}],mixins:[{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"BaseButton",declaration:{name:"BaseButton",module:"src/lib/button/base/base-button.ts"}}]},{kind:"javascript-module",path:"src/lib/button-toggle/button-toggle/button-toggle.ts",declarations:[{kind:"class",description:"",name:"ButtonToggleComponent",cssProperties:[{description:"The `display` style for the button toggle container element.",name:"--forge-button-toggle-display"},{description:"The minimum width.",name:"--forge-button-toggle-min-width"},{description:"The spacing between the button toggle and its content.",name:"--forge-button-toggle-spacing"},{description:"The padding on the block axis.",name:"--forge-button-toggle-padding-block"},{description:"The padding on the inline axis.",name:"--forge-button-toggle-padding-inline"},{description:"The font-size of start/end slotted content.",name:"--forge-button-toggle-icon-size"},{description:"The color of the button toggle content.",name:"--forge-button-toggle-color"},{description:"The background of the button toggle.",name:"--forge-button-toggle-background"},{description:"The background of the button toggle when hovered.",name:"--forge-button-toggle-hover-background"},{description:"The background of the button toggle when active.",name:"--forge-button-toggle-active-background"},{description:"The cursor of the button toggle.",name:"--forge-button-toggle-cursor"},{description:"The border-width of the button toggle.",name:"--forge-button-toggle-border-width"},{description:"The border-style of the button toggle.",name:"--forge-button-toggle-border-style"},{description:"The border-color of the button toggle.",name:"--forge-button-toggle-border-color"},{description:"The shape radius of the button toggle.",name:"--forge-button-toggle-shape"},{description:"The start-start shape radius of the button toggle.",name:"--forge-button-toggle-shape-start-start"},{description:"The start-end shape radius of the button toggle.",name:"--forge-button-toggle-shape-start-end"},{description:"The end-start shape radius of the button toggle.",name:"--forge-button-toggle-shape-end-start"},{description:"The end-end shape radius of the button toggle.",name:"--forge-button-toggle-shape-end-end"},{description:"The background of the button toggle when selected.",name:"--forge-button-toggle-selected-background"},{description:"The color of the button toggle content when selected.",name:"--forge-button-toggle-selected-color"},{description:"The background of the button toggle when selected and disabled.",name:"--forge-button-toggle-selected-disabled-background"},{description:"The height of the button toggle when dense.",name:"--forge-button-toggle-dense-height"},{description:"The opacity of the button toggle when disabled.",name:"--forge-button-toggle-disabled-opacity"},{description:"The cursor of the button toggle when disabled.",name:"--forge-button-toggle-disabled-cursor"},{description:"The color of the button toggle content when disabled.",name:"--forge-button-toggle-disabled-color"},{description:"The background of the button toggle when disabled.",name:"--forge-button-toggle-disabled-background"},{description:"The transition-duration of various properties.",name:"--forge-button-toggle-transition-duration"},{description:"The transition-timing of various properties.",name:"--forge-button-toggle-transition-timing"},{description:"The color of the focus indicator.",name:"--forge-button-toggle-focus-indicator-color"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The focus indicator element.",name:"focus-indicator"},{description:"The state layer surface element.",name:"state-layer"}],slots:[{description:"The default/unnamed slot for the button toggle's content.",name:""},{description:"Typically reserved for content/icons that render logically before the default slot content.",name:"start"},{description:"Typically reserved content/icons that render logically after the default slot content.",name:"end"}],members:[{kind:"field",name:"value",type:{text:"unknown"},privacy:"public",description:"The value of the button toggle."},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is selected."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is disabled."},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"Whether or not the button is readonly."},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"ExperimentalFocusOptions"}}]},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}}}],events:[{type:{text:"CustomEvent<IButtonToggleSelectEventData>"},description:"Dispatches when the user toggles the button.",name:"forge-button-toggle-select"}],attributes:[{type:{text:"unknown"},description:"The value of the button toggle.",name:"value"},{type:{text:"boolean"},description:"Whether or not the button is selected.",name:"selected"},{type:{text:"boolean"},description:"Whether or not the button is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether or not the button is readonly.",name:"readonly"}],mixins:[{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithFocusable",module:"/src/lib/core/mixins/focus/with-focusable"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-button-toggle",customElement:!0}],exports:[{kind:"js",name:"ButtonToggleComponent",declaration:{name:"ButtonToggleComponent",module:"src/lib/button-toggle/button-toggle/button-toggle.ts"}}]},{kind:"javascript-module",path:"src/lib/button-toggle/button-toggle-group/button-toggle-group.ts",declarations:[{kind:"class",description:"",name:"ButtonToggleGroupComponent",cssProperties:[{description:"The `display` of the group container elements.",name:"--forge-button-toggle-group-display"},{description:"The space between button toggle elements.",name:"--forge-button-toggle-group-gap"},{description:"The padding around the button toggle elements when outlined.",name:"--forge-button-toggle-group-padding"},{description:"The block padding around the button toggle elements when outlined.",name:"--forge-button-toggle-group-padding-block"},{description:"The inline padding around the button toggle elements when outlined.",name:"--forge-button-toggle-group-padding-inline"},{description:"The height of the group element.",name:"--forge-button-toggle-group-height"},{description:"The height of the group element when dense.",name:"--forge-button-toggle-group-dense-height"},{description:"The width of the outline around the group element.",name:"--forge-button-toggle-group-outline-width"},{description:"The style of the outline around the group element.",name:"--forge-button-toggle-group-outline-style"},{description:"The color of the outline around the group element.",name:"--forge-button-toggle-group-outline-color"},{description:"The color of the outline around the group element when hovered or focused.",name:"--forge-button-toggle-group-outline-color-active"},{description:"The shape radius of the group container element.",name:"--forge-button-toggle-group-shape"},{description:"The start-start shape radius.",name:"--forge-button-toggle-group-shape-start-start"},{description:"The start-end shape radius.",name:"--forge-button-toggle-group-shape-start-end"},{description:"The end-start shape radius.",name:"--forge-button-toggle-group-shape-end-start"},{description:"The end-end shape radius.",name:"--forge-button-toggle-group-shape-end-end"},{description:"The transition duration for all animations on the group.",name:"--forge-button-toggle-group-transition-duration"},{description:"The transition timing for all animations on the group.",name:"--forge-button-toggle-group-transition-timing"}],cssParts:[{description:"The root container element for the group.",name:"root"}],slots:[{description:"The is a default/unnamed slot for child button toggle elements.",name:""}],members:[{kind:"field",name:"value",type:{text:"any"},privacy:"public",description:"The value of the selected button toggle(s)."},{kind:"field",name:"outlined",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should be outlined."},{kind:"field",name:"multiple",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should allow multiple selections."},{kind:"field",name:"mandatory",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should require a selection once a button has been toggled on."},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should be displayed vertically."},{kind:"field",name:"stretch",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should stretch to fill the available width."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should be dense."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should be disabled."},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"Whether or not the group should be readonly."},{kind:"field",name:"theme",type:{text:"ButtonToggleGroupTheme"},privacy:"public",description:"The theme to use for the group."}],events:[{type:{text:"CustomEvent<IButtonToggleGroupChangeEventData>"},description:"Dispatches when the value of the group changes.",name:"forge-button-toggle-group-change"}],attributes:[{type:{text:"any"},description:"The value of the selected button toggle(s).",name:"value"},{type:{text:"boolean"},description:"Whether or not the group should be outlined.",name:"outlined"},{type:{text:"boolean"},description:"Whether or not the group should allow multiple selections.",name:"multiple"},{type:{text:"boolean"},description:"Whether or not the group should stretch to fill the available width.",name:"stretch"},{type:{text:"boolean"},description:"Whether or not the group should require a selection once a button has been toggled on.",name:"mandatory"},{type:{text:"boolean"},description:"Whether or not the group should be displayed vertically.",name:"vertical"},{type:{text:"boolean"},description:"Whether or not the group should be disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether or not the group should be readonly.",name:"readonly"},{type:{text:"boolean"},description:"Whether or not the group should be dense.",name:"dense"},{type:{text:"ButtonToggleGroupTheme"},description:"The theme to use for the group.",name:"theme"}],mixins:[{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"},{name:"WithFormAssociation",module:"/src/lib/core/mixins/form/with-form-associated"},{name:"WithFormValidity",module:"/src/lib/core/mixins/form/with-form-validity"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-button-toggle-group",customElement:!0}],exports:[{kind:"js",name:"ButtonToggleGroupComponent",declaration:{name:"ButtonToggleGroupComponent",module:"src/lib/button-toggle/button-toggle-group/button-toggle-group.ts"}}]},{kind:"javascript-module",path:"src/lib/calendar/calendar-dropdown/calendar-dropdown.ts",declarations:[{kind:"class",description:"",name:"CalendarDropdown",members:[{kind:"field",name:"calendar",type:{text:"ICalendarComponent | undefined"},privacy:"public"},{kind:"field",name:"dropdownElement",type:{text:"IPopoverComponent | undefined"},privacy:"public"},{kind:"field",name:"id",type:{text:"string"},privacy:"public",default:"`${this.id}-activedescendent-`"},{kind:"field",name:"targetElement",type:{text:"HTMLElement"},privacy:"public",default:"targetElement"},{kind:"field",name:"activeChangeCallback",type:{text:"((id: string) => void) | undefined"},privacy:"public"},{kind:"field",name:"closeCallback",type:{text:"(() => void) | undefined"},privacy:"public"},{kind:"field",name:"_announcerElement",type:{text:"HTMLElement | undefined"},privacy:"private"},{kind:"field",name:"_popupClasses",type:{text:"string[]"},privacy:"private",default:"[]"},{kind:"field",name:"isOpen",type:{text:"boolean"},privacy:"public",readonly:!0},{kind:"field",name:"popupClasses",type:{text:"string | string[] | null"},privacy:"public"},{kind:"field",name:"locale",type:{text:"string | undefined"},privacy:"public"},{kind:"method",name:"close",privacy:"public",return:{type:{text:"Promise<void>"}},parameters:[{name:"{ force = false }",default:"{}"}]},{kind:"method",name:"destroy",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"open",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"config",type:{text:"Partial<ICalendarComponent>"}}]},{kind:"method",name:"propagateKeyboardEvent",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"_createCalendar",privacy:"private",return:{type:{text:"ICalendarComponent"}},parameters:[{name:"config",type:{text:"Partial<ICalendarComponent>"}}]},{kind:"method",name:"_createDropdown",privacy:"private",return:{type:{text:"IPopoverComponent"}}}]}],exports:[{kind:"js",name:"CalendarDropdown",declaration:{name:"CalendarDropdown",module:"src/lib/calendar/calendar-dropdown/calendar-dropdown.ts"}}]},{kind:"javascript-module",path:"src/lib/calendar/calendar-menu/calendar-menu.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/lib/chips/chip/chip.ts",declarations:[{kind:"class",description:"",name:"ChipComponent",cssProperties:[{description:"The background color of the chip.",name:"--forge-chip-background"},{description:"The background color of the chip.",name:"--forge-chip-color"},{description:"The shape of the chip.",name:"--forge-chip-shape"},{description:"The spacing between chips.",name:"--forge-chip-spacing"},{description:"The height of the chip.",name:"--forge-chip-height"},{description:"The inline padding of the chip.",name:"--forge-chip-padding-inline"},{description:"The block padding of the chip.",name:"--forge-chip-padding-block"},{description:"The cursor style of the chip.",name:"--forge-chip-cursor"},{description:"The font size of the chip icon.",name:"--forge-chip-icon-font-size"},{description:"The opacity of the disabled chip.",name:"--forge-chip-disabled-opacity"},{description:"The cursor style of the disabled chip.",name:"--forge-chip-disabled-cursor"},{description:"The height of the dense chip.",name:"--forge-chip-dense-height"},{description:"The inline padding of the dense chip.",name:"--forge-chip-dense-padding-inline"},{description:"The spacing between dense chips.",name:"--forge-chip-dense-spacing"},{description:"The font size of the dense chip.",name:"--forge-chip-dense-font-size"},{description:"The font weight of the dense chip.",name:"--forge-chip-dense-font-weight"},{description:"The offset of the focus indicator for dense chips.",name:"--forge-chip-dense-focus-indicator-offset"},{description:"The font size of the icon in dense chips.",name:"--forge-chip-dense-icon-font-size"},{description:"The spacing of the remove button in chips.",name:"--forge-chip-remove-button-spacing"},{description:"The height of the remove button in dense chips.",name:"--forge-chip-remove-button-height-dense"},{description:"The icon size of the remove button in dense chips.",name:"--forge-chip-remove-button-icon-size-dense"},{description:"The spacing of the remove button in dense chips.",name:"--forge-chip-remove-button-spacing-dense"},{description:"The background color of the selected chip.",name:"--forge-chip-selected-background"},{description:"The text color of the selected chip.",name:"--forge-chip-selected-color"},{description:"The text color of the invalid chip.",name:"--forge-chip-invalid-color"},{description:"The background color of the invalid selected chip.",name:"--forge-chip-invalid-selected-background"},{description:"The text color of the invalid selected chip.",name:"--forge-chip-invalid-selected-color"},{description:"The width of the chip border.",name:"--forge-chip-border-width"},{description:"The style of the chip border.",name:"--forge-chip-border-style"},{description:"The color of the chip border.",name:"--forge-chip-border-color"},{description:"The background color of the chip field.",name:"--forge-chip-field-background"},{description:"The text color of the chip field.",name:"--forge-chip-field-color"},{description:"The shape of the chip field.",name:"--forge-chip-field-shape"},{description:"The color of the chip field border.",name:"--forge-chip-field-border-color"},{description:"The cursor style of the chip field.",name:"--forge-chip-field-cursor"},{description:"The size of the checkmark in chips.",name:"--forge-chip-checkmark-size"},{description:"The color of the checkmark in chips.",name:"--forge-chip-checkmark-color"},{description:"The spacing of the checkmark in chips.",name:"--forge-chip-checkmark-spacing"},{description:"The size of the avatar in chips.",name:"--forge-chip-avatar-size"},{description:"The size of the avatar in dense chips.",name:"--forge-chip-avatar-size-dense"},{description:"The font size of the avatar in chips.",name:"--forge-chip-avatar-font-size"},{description:"The font size of the avatar in dense chips.",name:"--forge-chip-avatar-font-size-dense"},{description:"The spacing of the avatar in chips.",name:"--forge-chip-avatar-spacing"},{description:"The spacing of the avatar in dense chips.",name:"--forge-chip-avatar-spacing-dense"},{description:"The duration of the chip transition.",name:"--forge-chip-transition-duration"},{description:"The easing function of the chip transition.",name:"--forge-chip-transition-easing"},{description:"The delay of the checkmark transition in chips.",name:"--forge-chip-checkmark-transition-delay"}],cssParts:[{description:"The component's root element.",name:"root"},{description:"The trigger element of the chip.",name:"trigger"},{description:"The focus indicator of the chip.",name:"focus-indicator"},{description:"The state layer surface.",name:"state-layer"}],slots:[{description:"The content of the chip.",name:""},{description:"The start content of the chip.",name:"start"},{description:"The end content of the chip.",name:"end"}],members:[{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions"}}]},{kind:"method",name:"focusRemoveButton",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"click",privacy:"public",return:{type:{text:"void"}}},{kind:"field",name:"type",type:{text:"ChipType"},privacy:"public",description:"The type of chip."},{kind:"field",name:"value",type:{text:"unknown"},privacy:"public",description:"The value of the chip."},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",description:"Whether the chip is selected."},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",description:"Whether the chip is invalid."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether the chip is disabled."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether the chip is dense."},{kind:"field",name:"theme",type:{text:"ChipTheme"},privacy:"public",description:"The theme of the chip."},{kind:"field",name:"href",type:{text:"string"},privacy:"public",description:"The href of the chip."},{kind:"field",name:"target",type:{text:"string"},privacy:"public",description:"The target of the chip."},{kind:"field",name:"download",type:{text:"string"},privacy:"public",description:"The download of the chip."},{kind:"field",name:"rel",type:{text:"string"},privacy:"public",description:"The rel of the chip."}],events:[{type:{text:"IChipDeleteEventData"},description:"Event fired when the chip is deleted.",name:"forge-chip-delete"},{type:{text:"IChipSelectEventData"},description:"Event fired when the chip is selected.",name:"forge-chip-select"}],attributes:[{type:{text:"ChipType"},description:"The type of chip.",name:"type"},{type:{text:"unknown"},description:"The value of the chip.",name:"value"},{type:{text:"boolean"},description:"Whether the chip is selected.",name:"selected"},{type:{text:"boolean"},description:"Whether the chip is invalid.",name:"invalid"},{type:{text:"boolean"},description:"Whether the chip is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether the chip is dense.",name:"dense"},{type:{text:"ChipTheme"},description:"The theme of the chip.",name:"theme"},{type:{text:"string"},description:"The href of the chip.",name:"href"},{type:{text:"string"},description:"The target of the chip.",name:"target"},{type:{text:"string"},description:"The download of the chip.",name:"download"},{type:{text:"string"},description:"The rel of the chip.",name:"rel"}],superclass:{name:"BaseComponent",module:"/src/lib/core"},tagName:"forge-chip",customElement:!0}],exports:[{kind:"js",name:"ChipComponent",declaration:{name:"ChipComponent",module:"src/lib/chips/chip/chip.ts"}}]},{kind:"javascript-module",path:"src/lib/chips/chip-set/chip-set.ts",declarations:[{kind:"class",description:"",name:"ChipSetComponent",cssProperties:[{description:"The spacing between chips.",name:"--forge-chip-set-spacing"}],cssParts:[{description:"The component's root element.",name:"root"}],slots:[{description:"The chips to display in the chip set.",name:""}],members:[{kind:"field",name:"_vertical",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_type",privacy:"private"},{kind:"field",name:"_dense",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_disabled",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_invalid",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_theme",privacy:"private"},{kind:"method",name:"_onChipNavigate",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"CustomEvent<IChipNavigateEventData>"}}]},{kind:"method",name:"_findChipDescendants",privacy:"private",return:{type:{text:"IChipComponent[]"}}},{kind:"method",name:"_syncChipsProperty",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"property",type:{text:"T"}},{name:"value",type:{text:"IChipComponent[T]"}}]},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Whether the chip set is vertical.",default:"false"},{kind:"field",name:"type",type:{text:"ChipType"},privacy:"public",description:"The type of chip.",default:"'action'"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether the chip set is dense.",default:"false"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether the chip set is disabled.",default:"false"},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",description:"Whether the chip set is invalid.",default:"false"},{kind:"field",name:"theme",type:{text:"ChipTheme"},privacy:"public",description:"The theme of the chip set.",default:"'primary'"}],attributes:[{type:{text:"boolean"},description:"Whether the chip set is vertically oriented.",name:"vertical"},{type:{text:"ChipType"},description:"The type of chips.",name:"type"},{type:{text:"boolean"},description:"Whether all chips in the chip set are dense.",name:"dense"},{type:{text:"boolean"},description:"Whether all chips in the chip set are disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether all chips in the chip set are invalid.",name:"invalid"},{type:{text:"ChipTheme"},description:"The theme of the chips.",name:"theme"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-chip-set",summary:"Chips sets are used to group multiple chips together and orchestrate their behavior.",customElement:!0}],exports:[{kind:"js",name:"ChipSetComponent",declaration:{name:"ChipSetComponent",module:"src/lib/chips/chip-set/chip-set.ts"}}]},{kind:"javascript-module",path:"src/lib/date-picker/base/base-date-picker.ts",declarations:[{kind:"class",description:"",name:"BaseDatePickerComponent",members:[{kind:"field",name:"value",type:{text:"TPublicValue | null | undefined"},privacy:"public",description:"Gets/sets the value of the component."},{kind:"field",name:"min",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the minimum date the calendar will allow."},{kind:"field",name:"max",type:{text:"Date | string | null | undefined"},privacy:"public",description:"Gets/sets the maximum date the calendar will allow."},{kind:"field",name:"disabledDates",type:{text:"Date | Date[] | null | undefined"},privacy:"public",description:"Gets/sets the dates that are restricted from being selected."},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the calendar dropdown is open."},{kind:"field",name:"popupClasses",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the CSS classes that are applied to the popup element."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the date picker is disabled or not."},{kind:"field",name:"masked",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the input mask is applied or not."},{kind:"field",name:"maskFormat",type:{text:"string"},privacy:"public",description:"Gets/sets the mask format that displayed in the input. Default is `MM/DD/YYYY`"},{kind:"field",name:"showMaskFormat",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the mask format is displayed in the input or not. Only applies if `masked` is `true`."},{kind:"field",name:"valueMode",type:{text:"DatePickerValueMode"},privacy:"public",description:"Gets/sets the type for the `value` property and `forge-date-picker-change` event."},{kind:"field",name:"notifyInputValueChanges",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the native input will be notified of value changes via the `input` and `change` events."},{kind:"field",name:"allowInvalidDate",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether to allow an invalid date to be input. When true, the date picker will not clear out the value of the input if the date was invalid (i.e. could not be parsed)."},{kind:"field",name:"showToday",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the today button is visible in the popup."},{kind:"field",name:"showClear",type:{text:"boolean"},privacy:"public",description:"Gets/sets whether the clear button is visible in the popup."},{kind:"field",name:"parseCallback",type:{text:"DatePickerParseCallback"},privacy:"public",description:"Sets the callback to use for parsing a date value string to a `Date` object."},{kind:"field",name:"formatCallback",type:{text:"DatePickerFormatCallback"},privacy:"public",description:"Sets the callback to use for formatting `Date` value to a custom string format."},{kind:"field",name:"prepareMaskCallback",type:{text:"DatePickerPrepareMaskCallback"},privacy:"public",description:"Sets the callback to use when altering default mask entry."},{kind:"field",name:"disabledDaysOfWeek",type:{text:"DayOfWeek[]"},privacy:"public",description:"Sets the days of the week to disable from selection."},{kind:"field",name:"disableDayCallback",type:{text:"(date: Date) => boolean"},privacy:"public",description:"Sets the callback to use for testing whether a specific date should be disabled or not."},{kind:"field",name:"yearRange",type:{text:"string"},privacy:"public",description:"Sets the year range."},{kind:"field",name:"locale",type:{text:"string | undefined"},privacy:"public",description:"Sets the locale to use."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"BaseDatePickerComponent",declaration:{name:"BaseDatePickerComponent",module:"src/lib/date-picker/base/base-date-picker.ts"}}]},{kind:"javascript-module",path:"src/lib/deprecated/button/deprecated-button.ts",declarations:[{kind:"class",description:"",name:"DeprecatedButtonComponent",members:[{kind:"field",name:"_slotElement",type:{text:"HTMLSlotElement"},privacy:"private",default:"getShadowElement(this, 'slot:not([name])')"},{kind:"field",name:"_focusIndicator",type:{text:"IFocusIndicatorComponent"},privacy:"private",default:"getShadowElement(this, FOCUS_INDICATOR_CONSTANTS.elementName)"},{kind:"field",name:"_stateLayer",type:{text:"IStateLayerComponent"},privacy:"private",default:"getShadowElement(this, STATE_LAYER_CONSTANTS.elementName)"},{kind:"field",name:"_buttonOrAnchorElement",type:{text:"HTMLButtonElement | HTMLAnchorElement | null"},privacy:"private",default:"null"},{kind:"field",name:"_type",type:{text:"DeprecatedButtonType"},privacy:"private"},{kind:"field",name:"_disabled",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_fullWidth",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_buttonChangeListener",privacy:"private"},{kind:"field",name:"_buttonAttrMutationObserver",type:{text:"MutationObserver | undefined"},privacy:"private"},{kind:"field",name:"_keydownListener",privacy:"private"},{kind:"method",name:"_onKeydown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"_onButtonChange",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_initialize",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_syncDisabledState",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_detachButton",privacy:"private",return:{type:{text:"void"}}},{kind:"field",name:"type",type:{text:"DeprecatedButtonType"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"fullWidth",type:{text:"boolean"},privacy:"public"},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}]}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-deprecated-button",deprecated:"Use the `<forge-button>` element instead.",customElement:!0}],exports:[{kind:"js",name:"DeprecatedButtonComponent",declaration:{name:"DeprecatedButtonComponent",module:"src/lib/deprecated/button/deprecated-button.ts"}}]},{kind:"javascript-module",path:"src/lib/deprecated/icon-button/deprecated-icon-button.ts",declarations:[{kind:"class",description:"",name:"DeprecatedIconButtonComponent",members:[{kind:"field",name:"_disabled",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_toggle",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_isOn",type:{text:"boolean"},privacy:"private",default:"false"},{kind:"field",name:"_densityLevel",type:{text:"number"},privacy:"private",default:"0"},{kind:"field",name:"_slotElement",type:{text:"HTMLSlotElement"},privacy:"private",default:"getShadowElement(this, 'slot:not([name])')"},{kind:"field",name:"_focusIndicator",type:{text:"IFocusIndicatorComponent"},privacy:"private",default:"getShadowElement(this, FOCUS_INDICATOR_CONSTANTS.elementName)"},{kind:"field",name:"_stateLayer",type:{text:"IStateLayerComponent"},privacy:"private",default:"getShadowElement(this, STATE_LAYER_CONSTANTS.elementName)"},{kind:"field",name:"_buttonOrAnchorElement",type:{text:"HTMLButtonElement | HTMLAnchorElement | null"},privacy:"private",default:"null"},{kind:"field",name:"_slotChangeListener",privacy:"private"},{kind:"field",name:"_buttonAttrMutationObserver",type:{text:"MutationObserver | undefined"},privacy:"private"},{kind:"field",name:"_keydownListener",type:{text:"EventListener"},privacy:"private"},{kind:"field",name:"_toggleClickListener",type:{text:"EventListener"},privacy:"private"},{kind:"method",name:"_onKeydown",privacy:"private",return:{type:{text:"void"}},parameters:[{name:"evt",type:{text:"KeyboardEvent"}}]},{kind:"method",name:"_onSlotChange",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_onToggle",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_initialize",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_syncDisabledState",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_detachButton",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_initializeToggle",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_destroyToggle",privacy:"private",return:{type:{text:"void"}}},{kind:"method",name:"_syncToggleState",privacy:"private",return:{type:{text:"void"}}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"toggle",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"isOn",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"densityLevel",type:{text:"number"},privacy:"public"},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}]}],events:[{type:{text:"CustomEvent"}}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-deprecated-icon-button",deprecated:"Use the `<forge-icon-button>` element instead.",customElement:!0}],exports:[{kind:"js",name:"DeprecatedIconButtonComponent",declaration:{name:"DeprecatedIconButtonComponent",module:"src/lib/deprecated/icon-button/deprecated-icon-button.ts"}}]},{kind:"javascript-module",path:"src/lib/drawer/base/base-drawer.ts",declarations:[{kind:"class",description:"",name:"BaseDrawerComponent",members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Toggles whether a `dismissible` or `modal` drawer is open or not. Has no effect on `permanent` drawers."},{kind:"field",name:"direction",type:{text:"DrawerDirection"},privacy:"public",description:"Controls the laytout direction of the drawer for positioning on the left vs. right side of the screen."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"BaseDrawerComponent",declaration:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}}]},{kind:"javascript-module",path:"src/lib/drawer/drawer/drawer.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-drawer>` custom element.",name:"DrawerComponent",members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Toggles whether a `dismissible` or `modal` drawer is open or not. Has no effect on `permanent` drawers.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}},{kind:"field",name:"direction",type:{text:"DrawerDirection"},privacy:"public",description:"Controls the laytout direction of the drawer for positioning on the left vs. right side of the screen.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}}],superclass:{name:"BaseDrawerComponent",module:"/src/lib/drawer/base"},tagName:"forge-drawer",customElement:!0}],exports:[{kind:"js",name:"DrawerComponent",declaration:{name:"DrawerComponent",module:"src/lib/drawer/drawer/drawer.ts"}}]},{kind:"javascript-module",path:"src/lib/drawer/mini-drawer/mini-drawer.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-mini-drawer>` custom element.",name:"MiniDrawerComponent",members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Toggles whether a `dismissible` or `modal` drawer is open or not. Has no effect on `permanent` drawers.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}},{kind:"field",name:"direction",type:{text:"DrawerDirection"},privacy:"public",description:"Controls the laytout direction of the drawer for positioning on the left vs. right side of the screen.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}}],superclass:{name:"BaseDrawerComponent",module:"/src/lib/drawer/base"},tagName:"forge-mini-drawer",customElement:!0}],exports:[{kind:"js",name:"MiniDrawerComponent",declaration:{name:"MiniDrawerComponent",module:"src/lib/drawer/mini-drawer/mini-drawer.ts"}}]},{kind:"javascript-module",path:"src/lib/drawer/modal-drawer/modal-drawer.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-modal-drawer>` custom element.",name:"ModalDrawerComponent",members:[{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Toggles whether a `dismissible` or `modal` drawer is open or not. Has no effect on `permanent` drawers.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}},{kind:"field",name:"direction",type:{text:"DrawerDirection"},privacy:"public",description:"Controls the laytout direction of the drawer for positioning on the left vs. right side of the screen.",inheritedFrom:{name:"BaseDrawerComponent",module:"src/lib/drawer/base/base-drawer.ts"}}],superclass:{name:"BaseDrawerComponent",module:"/src/lib/drawer/base"},tagName:"forge-modal-drawer",customElement:!0}],exports:[{kind:"js",name:"ModalDrawerComponent",declaration:{name:"ModalDrawerComponent",module:"src/lib/drawer/modal-drawer/modal-drawer.ts"}}]},{kind:"javascript-module",path:"src/lib/field/base/base-field.ts",declarations:[{kind:"class",description:"",name:"BaseField",members:[{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public"},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public"},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public"},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public"},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public"},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverExpanded",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public"},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}]}],mixins:[{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"BaseField",declaration:{name:"BaseField",module:"src/lib/field/base/base-field.ts"}}]},{kind:"javascript-module",path:"src/lib/field/base/with-base-field.ts",declarations:[{kind:"class",description:"",name:"WithBaseFieldContract",members:[{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public"},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public"},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public"},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public"},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public"},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public"},{kind:"method",name:"initializeFieldInstance",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"fieldElement",type:{text:"IFieldComponent"}}]},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}]}]},{kind:"mixin",description:`Provides a consistent passthrough API to the underlying field component, for
field-like wrapper components.`,name:"WithBaseField",members:[{kind:"field",name:"_fieldElement",type:{text:"IFieldComponent"},privacy:"private"},{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public"},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public"},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public"},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public"},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public"},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public"},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public"},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}]}],parameters:[{name:"base",type:{text:"TBase"},description:"The base component to mix into."}]}],exports:[{kind:"js",name:"WithBaseFieldContract",declaration:{name:"WithBaseFieldContract",module:"src/lib/field/base/with-base-field.ts"}},{kind:"js",name:"WithBaseField",declaration:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}}]},{kind:"javascript-module",path:"src/lib/list/list/list.ts",declarations:[{kind:"class",description:"",name:"ListComponent",cssProperties:[{description:"The background color of the list surface.",name:"--forge-list-container-color"},{description:"The spacing between the list items.",name:"--forge-list-spacing"}],cssParts:[{description:"The component's root container element.",name:"root"}],slots:[{description:"The default/unnamed slot for child list items.",name:""}],members:[{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Whether the list has all dense items or not."},{kind:"field",name:"indented",type:{text:"boolean"},privacy:"public",description:"Whether the list items within this list are indented. Default is false."},{kind:"field",name:"selectedValue",type:{text:"unknown | unknown[]"},privacy:"public",description:"The selected list item value(s)."},{kind:"field",name:"twoLine",type:{text:"boolean"},privacy:"public",description:"Whether the list has all two-line items or not."},{kind:"field",name:"threeLine",type:{text:"boolean"},privacy:"public",description:"Whether the list has all three-line items or not."},{kind:"field",name:"wrap",type:{text:"boolean"},privacy:"public",description:"Whether the list has all items that wrap their text or not."},{kind:"field",name:"noninteractive",type:{text:"boolean"},privacy:"public",description:"Controls whether the list items will automatically attach themselves to interactive slotted elements or not."}],attributes:[{type:{text:"boolean"},description:"Whether the list has all dense items or not.",name:"dense"},{type:{text:"string"},description:"The selected list item value(s).",name:"selected-value"},{type:{text:"boolean"},description:"Whether the list items within this list are indented. Default is false.",name:"indented"},{type:{text:"boolean"},description:"Whether the list has all two-line items or not.",name:"two-line"},{type:{text:"boolean"},description:"Whether the list has all three-line items or not.",name:"three-line"},{type:{text:"boolean"},description:"Whether the list has all items that wrap their text or not.",name:"wrap"},{type:{text:"boolean"},description:"Controls whether the list is styled a navigation list or not.",name:"navlist"},{type:{text:"boolean"},description:"Controls whether the list items will automatically attach themselves to interactive slotted elements or not.",name:"noninteractive"}],mixins:[{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-list",summary:"Lists are vertical groupings of related content.",customElement:!0}],exports:[{kind:"js",name:"ListComponent",declaration:{name:"ListComponent",module:"src/lib/list/list/list.ts"}}]},{kind:"javascript-module",path:"src/lib/list/list-item/list-item.ts",declarations:[{kind:"class",description:"",name:"ListItemComponent",cssProperties:[{description:"The background color.",name:"--forge-list-item-background"},{description:"The shape of the list item.",name:"--forge-list-item-shape"},{description:"The padding inside of the container element.",name:"--forge-list-item-padding"},{description:"The padding inside of the container element when `wrap` is enabled.",name:"--forge-list-item-wrap-padding"},{description:"The margin around the host element.",name:"--forge-list-item-margin"},{description:"The height of the container.",name:"--forge-list-item-height"},{description:"The height when in the dense state.",name:"--forge-list-item-dense-height"},{description:"The margin inline state when in the indented state.",name:"--forge-list-item-indent"},{description:"The cursor when interactive.",name:"--forge-list-item-cursor"},{description:"The gap between the slotted content.",name:"--forge-list-item-gap"},{description:"The text color of the text.",name:"--forge-list-item-text-color"},{description:"The font size of the text.",name:"--forge-list-item-text-font-size"},{description:"The font weight of the text.",name:"--forge-list-item-text-font-weight"},{description:"The line height of the text.",name:"--forge-list-item-text-line-height"},{description:"The color when in the selected state.",name:"--forge-list-item-selected-color"},{description:"The opacity of the background color when in the disabled state.",name:"--forge-list-item-opacity"},{description:"The color of the start content when in the selected state.",name:"--forge-list-item-selected-start-color"},{description:"The color of the end content when in the selected state.",name:"--forge-list-item-selected-end-color"},{description:"The color of the text when in the selected state.",name:"--forge-list-item-selected-text-color"},{description:"The opacity of the element when in the disabled state.",name:"--forge-list-item-disabled-opacity"},{description:"The cursor when in the disabled state.",name:"--forge-list-item-disabled-cursor"},{description:"The line height when in the one/single line state.",name:"--forge-list-item-one-line-height"},{description:"The line height when in the two line state.",name:"--forge-list-item-two-line-height"},{description:"The line height when in the three line state.",name:"--forge-list-item-three-line-height"},{description:"The line height when in the dense one/single line state.",name:"--forge-list-item-dense-one-line-height"},{description:"The line height when in the dense two line state.",name:"--forge-list-item-dense-two-line-height"},{description:"The line height when in the dense three line state.",name:"--forge-list-item-dense-three-line-height"},{description:"The font size when in the dense state.",name:"--forge-list-item-dense-font-size"},{description:"The margin inline state when in the dense indented state.",name:"--forge-list-item-dense-indent"},{description:"The gap between the slotted content when in the dense state.",name:"--forge-list-item-dense-gap"},{description:"The color of the start content when in the selected state.",name:"--forge-list-item-start-selected-color"},{description:"The color of the end content when in the selected state.",name:"--forge-list-item-end-selected-color"},{description:"The background color of the avatar container.",name:"--forge-list-item-avatar-background-color"},{description:"The foreground color of the avatar container.",name:"--forge-list-item-avatar-color"},{description:"The shape of the avatar container.",name:"--forge-list-item-avatar-shape"},{description:"The height & width of the avatar container.",name:"--forge-list-item-avatar-size"}],cssParts:[{description:"The root container element.",name:"root"},{description:"The container for the text content.",name:"text-container"},{description:"The forwarded focus indicator's internal indicator element.",name:"focus-indicator"},{description:"The forwarded state layer's internal surface element.",name:"state-layer"}],slots:[{description:"The primary text.",name:""},{description:"The secondary text.",name:"secondary-text"},{description:"The tertiary text.",name:"tertiary-text"},{description:"The start content.",name:"start"},{description:"The end element.",name:"end"}],members:[{kind:"field",name:"_adapter",type:{text:"ListItemAdapter"},privacy:"private",default:"new ListItemAdapter(this)"},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",description:"Applies the selected state to the list item."},{kind:"field",name:"active",type:{text:"boolean"},privacy:"public",description:"Applies the active state to the list item by emulating its focused state."},{kind:"field",name:"value",type:{text:"unknown"},privacy:"public",description:"The unique value of the list item."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Applies the dense state to the list item."},{kind:"field",name:"indented",type:{text:"boolean"},privacy:"public",description:"Applies the indented state by adding margin to the start of the list item."},{kind:"field",name:"twoLine",type:{text:"boolean"},privacy:"public",description:"Sets the list item height to support at least two lines of text."},{kind:"field",name:"threeLine",type:{text:"boolean"},privacy:"public",description:"Sets the list item height to support at least three lines of text."},{kind:"field",name:"wrap",type:{text:"boolean"},privacy:"public",description:"Sets the list item to wrap its text content."},{kind:"field",name:"noninteractive",type:{text:"boolean"},privacy:"public",description:"Controls whether the list item will automatically attach itself to interactive slotted elements or not."}],events:[{type:{text:"CustomEvent<IListItemSelectEventData>"},description:"Fires when the list item is selected.",name:"forge-list-item-select"}],attributes:[{type:{text:"boolean"},description:"Applies the selected state to the list item.",name:"selected"},{type:{text:"boolean"},description:"Applies the active state to the list item by emulating its focused state.",name:"active"},{type:{text:"unknown"},description:"The unique value of the list item.",name:"value"},{type:{text:"boolean"},description:"Applies the dense state to the list item.",name:"dense"},{type:{text:"boolean"},description:"Applies the indented state by adding margin to the start of the list item.",name:"indented"},{type:{text:"boolean"},description:"Sets the list item height to support at least two lines of text.",name:"two-line"},{type:{text:"boolean"},description:"Sets the list item height to support at least three lines of text.",name:"three-line"},{type:{text:"boolean"},description:"Sets the list item to wrap its text content.",name:"wrap"},{type:{text:"boolean"},description:"Controls whether the list item will automatically attach itself to interactive slotted elements or not.",name:"noninteractive"}],mixins:[{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-list-item",summary:"List items are individual rows of content inside of a list.",customElement:!0}],exports:[{kind:"js",name:"ListItemComponent",declaration:{name:"ListItemComponent",module:"src/lib/list/list-item/list-item.ts"}}]},{kind:"javascript-module",path:"src/lib/overlay/base/base-overlay.ts",declarations:[{kind:"class",description:"",name:"BaseOverlay",members:[{kind:"method",name:"position",privacy:"public",return:{type:{text:"void"}}},{kind:"field",name:"anchorElement",type:{text:"HTMLElement | VirtualElement | null"},privacy:"public"},{kind:"field",name:"anchor",type:{text:"string | null"},privacy:"public"},{kind:"field",name:"noAnchor",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"placement",type:{text:"OverlayPlacement"},privacy:"public"},{kind:"field",name:"positionStrategy",type:{text:"OverlayPositionStrategy"},privacy:"public"},{kind:"field",name:"offset",type:{text:"IOverlayOffset"},privacy:"public"},{kind:"field",name:"shift",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"hide",type:{text:"OverlayHideState"},privacy:"public"},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"flip",type:{text:"OverlayFlipState"},privacy:"public"},{kind:"field",name:"boundary",type:{text:"string | null"},privacy:"public"},{kind:"field",name:"boundaryElement",type:{text:"HTMLElement | null"},privacy:"public"},{kind:"field",name:"fallbackPlacements",type:{text:"PositionPlacement[] | null"},privacy:"public"},{kind:"field",name:"auto",type:{text:"boolean"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"BaseOverlay",declaration:{name:"BaseOverlay",module:"src/lib/overlay/base/base-overlay.ts"}}]},{kind:"javascript-module",path:"src/lib/overlay/base/overlay-aware.ts",declarations:[{kind:"class",description:"",name:"OverlayAware",members:[{kind:"method",name:"position",privacy:"public",return:{type:{text:"void"}}},{kind:"field",name:"overlay",type:{text:"IOverlayComponent"},privacy:"public",readonly:!0},{kind:"field",name:"anchorElement",type:{text:"HTMLElement | VirtualElement | null"},privacy:"public"},{kind:"field",name:"anchor",type:{text:"string | null"},privacy:"public"},{kind:"field",name:"noAnchor",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"inline",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"placement",type:{text:"OverlayPlacement"},privacy:"public"},{kind:"field",name:"positionStrategy",type:{text:"OverlayPositionStrategy"},privacy:"public"},{kind:"field",name:"offset",type:{text:"IOverlayOffset"},privacy:"public"},{kind:"field",name:"shift",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"hide",type:{text:"OverlayHideState"},privacy:"public"},{kind:"field",name:"persistent",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"flip",type:{text:"OverlayFlipState"},privacy:"public"},{kind:"field",name:"boundary",type:{text:"string | null"},privacy:"public"},{kind:"field",name:"boundaryElement",type:{text:"HTMLElement | null"},privacy:"public"},{kind:"field",name:"fallbackPlacements",type:{text:"PositionPlacement[] | null"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"}}],exports:[{kind:"js",name:"OverlayAware",declaration:{name:"OverlayAware",module:"src/lib/overlay/base/overlay-aware.ts"}}]},{kind:"javascript-module",path:"src/lib/radio/radio/radio.ts",declarations:[{kind:"class",description:"",name:"RadioComponent",cssProperties:[{description:"The primary color of the radio button when checked.",name:"--forge-radio-primary-color"},{description:"The color of the radio button when unchecked.",name:"--forge-radio-inactive-color"},{description:"The size of the radio button in the inline and block directions.",name:"--forge-radio-size"},{description:"The width of the radio button.",name:"--forge-radio-width"},{description:"The height of the radio button.",name:"--forge-radio-height"},{description:"The width of the radio button's border.",name:"--forge-radio-border-width"},{description:"The color of the radio button's border when unchecked.",name:"--forge-radio-unchecked-border-color"},{description:"The color of the radio button's border when checked.",name:"--forge-radio-checked-border-color"},{description:"The background of the radio button.",name:"--forge-radio-background"},{description:"The shape of the radio button.",name:"--forge-radio-shape"},{description:"The size of the radio button's mark in the inline and block directions.",name:"--forge-radio-mark-size"},{description:"The width of the radio button's mark.",name:"--forge-radio-mark-width"},{description:"The height of the radio button's mark.",name:"--forge-radio-mark-height"},{description:"The color of the radio button's mark when unchecked.",name:"--forge-radio-mark-unchecked-color"},{description:"The color of the radio button's mark when checked.",name:"--forge-radio-mark-checked-color"},{description:"The background of the radio button's mark when unchecked.",name:"--forge-radio-mark-unchecked-background"},{description:"The background of the radio button's mark when checked.",name:"--forge-radio-mark-checked-background"},{description:"The gap between the radio button and its label.",name:"--forge-radio-gap"},{description:"The alignment of the radio button and its label in the inline direction.",name:"--forge-radio-justify"},{description:"The direction of the radio button and its label.",name:"--forge-radio-direction"},{description:"The size of the radio button's state layer in the inline and block directions.",name:"--forge-radio-state-layer-size"},{description:"The width of the radio button's state layer.",name:"--forge-radio-state-layer-width"},{description:"The height of the radio button's state layer.",name:"--forge-radio-state-layer-height"},{description:"The color of the radio button's state layer when unchecked.",name:"--forge-radio-state-layer-unchecked-color"},{description:"The color of the radio button's state layer when checked.",name:"--forge-radio-state-layer-checked-color"},{description:"The shape of the radio button's state layer.",name:"--forge-radio-state-layer-shape"},{description:"The size of the radio button's state layer when dense.",name:"--forge-radio-state-layer-dense-size"},{description:"The width of the radio button's state layer when dense.",name:"--forge-radio-state-layer-dense-width"},{description:"The height of the radio button's state layer when dense.",name:"--forge-radio-state-layer-dense-height"},{description:"The opacity of the radio button when disabled.",name:"--forge-radio-disabled-opacity"},{description:"The duration of the radio button's animations.",name:"--forge-radio-animation-duration"},{description:"The timing function of the radio button's animations.",name:"--forge-radio-animation-timing-function"},{description:"The delay of the radio button's animations.",name:"--forge-radio-animation-delay"}],cssParts:[{description:"Styles the radio's root element.",name:"root"},{description:"Styles the border and background of the radio.",name:"background"},{description:"Styles the focus indicator of the radio.",name:"focus-indicator"},{description:"Styles the state layer of the radio.",name:"state-layer"}],slots:[{description:"This is a default/unnamed slot for the label text.",name:""}],members:[{kind:"field",name:"_rootNode",type:{text:"ShadowRoot | Document | undefined"},privacy:"private"},{kind:"field",name:"_latestAssociatedForm",type:{text:"HTMLFormElement | undefined"},privacy:"private"},{kind:"field",name:"checked",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button is checked."},{kind:"field",name:"defaultChecked",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button is checked by default."},{kind:"field",name:"value",type:{text:"string"},privacy:"public",description:"The value of the radio button when submitted."},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button should be displayed in a dense layout."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button is disabled."},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button is required."},{kind:"field",name:"readonly",type:{text:"boolean"},privacy:"public",description:"Indicates whether the radio button is read-only."},{kind:"field",name:"labelPosition",type:{text:"RadioLabelPosition"},privacy:"public",description:"The position of the radio button's label."}],attributes:[{type:{text:"boolean"},description:"Indicates whether the radio button is checked.",name:"checked"},{type:{text:"boolean"},description:"Indicates whether the radio button is checked by default.",name:"default-checked"},{type:{text:"string"},description:"The value of the radio button when submitted.",name:"value"},{type:{text:"boolean"},description:"Indicates whether the radio button should be displayed in a dense layout.",name:"dense"},{type:{text:"boolean"},description:"Indicates whether the radio button is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Indicates whether the radio button is required.",name:"required"},{type:{text:"boolean"},description:"Indicates whether the radio button is read-only.",name:"readonly"},{type:{text:"RadioLabelPosition"},description:"The position of the radio button's label.",name:"label-position"}],mixins:[{name:"WithFormAssociation",module:"/src/lib/core/mixins/form/with-form-associated"},{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"},{name:"WithFocusable",module:"/src/lib/core/mixins/focus/with-focusable"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-radio",summary:`The Forge Radio component is used to create a form input where only one out of a set of
values should be selected.`,customElement:!0}],exports:[{kind:"js",name:"RadioComponent",declaration:{name:"RadioComponent",module:"src/lib/radio/radio/radio.ts"}}]},{kind:"javascript-module",path:"src/lib/radio/radio-group/radio-group.ts",declarations:[{kind:"class",description:"",name:"RadioGroupComponent",members:[{kind:"field",name:"form",type:{text:"HTMLFormElement | null"},privacy:"public",readonly:!0},{kind:"field",name:"labels",type:{text:"NodeList"},privacy:"public",readonly:!0},{kind:"field",name:"name",type:{text:"string"},privacy:"public"},{kind:"method",name:"formDisabledCallback",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"isDisabled",type:{text:"boolean"}}]},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether or not the radio group is disabled."}],attributes:[{type:{text:"boolean"},description:"Whether or not the radio group is disabled.",name:"disabled"}],mixins:[{name:"WithLabelAwareness",module:"/src/lib/core/mixins/label/with-label-aware"},{name:"WithDefaultAria",module:"/src/lib/core/mixins/internals/with-default-aria"},{name:"WithElementInternals",module:"/src/lib/core/mixins/internals/with-element-internals"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-radio-group",summary:"The Forge Radio Group component groups a set of radio buttons together.",customElement:!0}],exports:[{kind:"js",name:"RadioGroupComponent",declaration:{name:"RadioGroupComponent",module:"src/lib/radio/radio-group/radio-group.ts"}}]},{kind:"javascript-module",path:"src/lib/select/option/option.ts",declarations:[{kind:"class",description:"The custom element class behind the `<forge-option>` element.",name:"OptionComponent",members:[{kind:"field",name:"value",type:{text:"any"},privacy:"public",description:"Gets/sets the value of this option."},{kind:"field",name:"label",type:{text:"string"},privacy:"public",description:"Gets/sets the label of this option."},{kind:"field",name:"secondaryLabel",type:{text:"string"},privacy:"public",description:"Gets/sets the secondary label of this option."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Gets/sets the disabled status of this option."},{kind:"field",name:"divider",type:{text:"boolean"},privacy:"public",description:"Gets/sets the whether this option is a divider."},{kind:"field",name:"optionClass",type:{text:"string | string[]"},privacy:"public",description:"Gets/sets the classes of this option."},{kind:"field",name:"leadingIcon",type:{text:"string"},privacy:"public",description:"Gets/sets the leading icon of this option."},{kind:"field",name:"leadingIconClass",type:{text:"string"},privacy:"public",description:"Gets/sets the leading icon class of this option."},{kind:"field",name:"leadingIconType",type:{text:"ListDropdownIconType"},privacy:"public",description:"Gets/sets the leading icon type of this option."},{kind:"field",name:"leadingIconComponentProps",type:{text:"Partial<IIconComponent>"},privacy:"public",description:"Gets/sets properties on leading icon component."},{kind:"field",name:"trailingIcon",type:{text:"string"},privacy:"public",description:"Gets/sets the trailing icon of this option."},{kind:"field",name:"trailingIconClass",type:{text:"string"},privacy:"public",description:"Gets/sets the trailing icon class of this option."},{kind:"field",name:"trailingIconType",type:{text:"ListDropdownIconType"},privacy:"public",description:"Gets/sets the trailing icon type of this option."},{kind:"field",name:"trailingIconComponentProps",type:{text:"Partial<IIconComponent>"},privacy:"public",description:"Gets/sets properties on trailing icon component."},{kind:"field",name:"leadingBuilder",type:{text:"() => HTMLElement"},privacy:"public",description:"Gets/sets the leading builder of this option."},{kind:"field",name:"trailingBuilder",type:{text:"() => HTMLElement"},privacy:"public",description:"Gets/sets the trailing builder of this option."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-option",customElement:!0}],exports:[{kind:"js",name:"OptionComponent",declaration:{name:"OptionComponent",module:"src/lib/select/option/option.ts"}}]},{kind:"javascript-module",path:"src/lib/select/option-group/option-group.ts",declarations:[{kind:"class",description:"The custom element class behind the `<forge-option-group>` element.",name:"OptionGroupComponent",members:[{kind:"field",name:"_label",type:{text:"string"},privacy:"private"},{kind:"field",name:"label",type:{text:"string"},privacy:"public",description:"Gets/sets the label of this option group."},{kind:"field",name:"options",type:{text:"ISelectOption[]"},privacy:"public",description:"The child options of this group."},{kind:"field",name:"builder",type:{text:"ListDropdownOptionGroupBuilder"},privacy:"public",description:"The builder function for the group content."},{kind:"field",name:"value",type:{text:"any"},privacy:"public",description:"Gets/sets the optional group value."},{kind:"field",name:"text",type:{text:"string"},privacy:"public",description:"The text content for the group."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-option-group",customElement:!0}],exports:[{kind:"js",name:"OptionGroupComponent",declaration:{name:"OptionGroupComponent",module:"src/lib/select/option-group/option-group.ts"}}]},{kind:"javascript-module",path:"src/lib/select/select/select.ts",declarations:[{kind:"class",description:"",name:"SelectComponent",members:[{kind:"field",name:"label",type:{text:"string"},privacy:"public"},{kind:"field",name:"placeholder",type:{text:"string"},privacy:"public"},{kind:"field",name:"floatLabel",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"density",type:{text:"FieldDensity"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"dense",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"labelPosition",type:{text:"FieldLabelPosition"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"_fieldElement",type:{text:"IFieldComponent"},privacy:"private",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"labelAlignment",type:{text:"FieldLabelAlignment"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"invalid",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"required",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"optional",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"variant",type:{text:"FieldVariant"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"theme",type:{text:"FieldTheme"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"shape",type:{text:"FieldShape"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"popoverIcon",type:{text:"boolean"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"field",name:"supportTextInset",type:{text:"FieldSupportTextInset"},privacy:"public",inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}},{kind:"method",name:"floatLabelWithoutAnimation",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"value",type:{text:"boolean"}}],inheritedFrom:{name:"WithBaseField",module:"src/lib/field/base/with-base-field.ts"}}],mixins:[{name:"WithBaseField",module:"/src/lib/field/base/with-base-field"}],superclass:{module:"src/lib/select/select/select.ts"},tagName:"forge-select",customElement:!0}],exports:[{kind:"js",name:"SelectComponent",declaration:{name:"SelectComponent",module:"src/lib/select/select/select.ts"}}]},{kind:"javascript-module",path:"src/lib/select/select-dropdown/select-dropdown.ts",declarations:[{kind:"class",description:"",name:"SelectDropdownComponent",members:[{kind:"field",name:"target",type:{text:"string"},privacy:"public",description:"Sets the target element CSS selector"},{kind:"field",name:"selectedTextTarget",type:{text:"string"},privacy:"public",description:"Sets the selected text element CSS selector"},{kind:"field",name:"syncSelectedText",type:{text:"boolean"},privacy:"public",description:"Controls whether the selected text is synchronized to the target elements' text content. Default is false."}],superclass:{name:"BaseSelectComponent",module:"/src/lib/select/core/base-select"},tagName:"forge-select-dropdown",customElement:!0}],exports:[{kind:"js",name:"SelectDropdownComponent",declaration:{name:"SelectDropdownComponent",module:"src/lib/select/select-dropdown/select-dropdown.ts"}}]},{kind:"javascript-module",path:"src/lib/split-view/split-view/split-view.ts",declarations:[{kind:"class",description:"The custom element class behind the `<forge-split-view>` element.",name:"SplitViewComponent",members:[{kind:"field",name:"orientation",type:{text:"SplitViewOrientation"},privacy:"public",description:"Whether child split view panels are laid out and resize horizontally or vertically."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether child split view panels have resize interactions disabled or enabled."},{kind:"field",name:"allowClose",type:{text:"boolean"},privacy:"public",description:"Whether child split view panels can be closed via keyboard interaction."},{kind:"field",name:"autoClose",type:{text:"boolean"},privacy:"public",description:"Whether child split view panels automatically close when they reach a size of 0."},{kind:"field",name:"autoCloseThreshold",type:{text:"number"},privacy:"public",description:"The size at which panels auto close."},{kind:"method",name:"layerSlottedPanels",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"target",type:{text:"ISplitViewPanelComponent"},description:"The originating split view panel component."}],description:"Arranges split view panels to avoid overlapping during animations."},{kind:"method",name:"unlayerSlottedPanels",privacy:"public",return:{type:{text:"void"}},description:"Removes presentation data set during an animation."},{kind:"method",name:"update",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"config",type:{text:"ISplitViewUpdateConfig"},description:"An update configuration."}],description:"Updates the provided characteristics of each slotted panel."},{kind:"method",name:"refit",privacy:"public",return:{type:{text:"void"}},description:"Resizes panels within the split view to avoid overflow."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-split-view",customElement:!0}],exports:[{kind:"js",name:"SplitViewComponent",declaration:{name:"SplitViewComponent",module:"src/lib/split-view/split-view/split-view.ts"}}]},{kind:"javascript-module",path:"src/lib/split-view/split-view-panel/split-view-panel.ts",declarations:[{kind:"class",description:"",name:"SplitViewPanelComponent",members:[{kind:"field",name:"resizable",type:{text:"SplitViewPanelResizable"},privacy:"public",description:"Controls which side of the panel the resize handle appears on."},{kind:"field",name:"size",type:{text:"number | string"},privacy:"public",description:"The initial size along the axis of orientation."},{kind:"field",name:"min",type:{text:"number | string"},privacy:"public",description:"The smallest size the panel can take along its axis of orientation."},{kind:"field",name:"max",type:{text:"number | string | undefined"},privacy:"public",description:"The largest size the panel can take along its axis of orientation."},{kind:"field",name:"accessibleLabel",type:{text:"string"},privacy:"public",description:"The ARIA label given to the resize handle."},{kind:"field",name:"open",type:{text:"boolean"},privacy:"public",description:"Controls the open state of the panel."},{kind:"field",name:"disabled",type:{text:"boolean | undefined"},privacy:"public",description:"Whether resize interactions are disabled or enabled."},{kind:"field",name:"allowClose",type:{text:"boolean | undefined"},privacy:"public",description:"Whether the panel can be closed via keyboard interaction."},{kind:"field",name:"autoClose",type:{text:"boolean | undefined"},privacy:"public",description:"Whether the panel automatically closes when it reaches a size of 0."},{kind:"field",name:"autoCloseThreshold",type:{text:"number | undefined"},privacy:"public",description:"The size at which the panel auto closes."},{kind:"method",name:"getContentSize",privacy:"public",return:{type:{text:""}},description:"Gets the size of content along the axis of orientation."},{kind:"method",name:"getCollapsibleSize",privacy:"public",return:{type:{text:""}},description:`Gets the amount that the content can shrink along the axis of orientation before reaching its
min size.`},{kind:"method",name:"setContentSize",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"size",type:{text:"number"},description:"The new size of content in pixels."}],description:"Sets the size of content along the axis of orientation."},{kind:"method",name:"update",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"config",type:{text:"ISplitViewUpdateConfig"},description:"An update configuration."}],description:"Updates the provided characteristics."}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-split-view-panel",customElement:!0}],exports:[{kind:"js",name:"SplitViewPanelComponent",declaration:{name:"SplitViewPanelComponent",module:"src/lib/split-view/split-view-panel/split-view-panel.ts"}}]},{kind:"javascript-module",path:"src/lib/stepper/step/step.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-step>` custom element.",name:"StepComponent",cssProperties:[{description:"The primary color of the step. Defaults to the primary theme.",name:"--forge-step-primary-color"},{description:"The text color of the step. Defaults to the on-primary theme.",name:"--forge-step-text-color"},{description:"The border radius of the step. Defaults to the extra-large shape.",name:"--forge-step-border-radius"},{description:"The border radius of the step in vertical mode. Defaults to the medium shape.",name:"--forge-step-border-radius-vertical"},{description:"The text color of the step when disabled. Defaults to the text-low theme.",name:"--forge-step-disabled-text-color"},{description:"The color of the step when disabled. Defaults to the surface-container-minimum theme.",name:"--forge-step-disabled-color"},{description:"The fill color of the step icon. Defaults to unset.",name:"--forge-step-icon-fill"},{description:"The fill color of the step icon when active. Defaults to the primary color.",name:"--forge-step-icon-fill-active"},{description:"The text color of the step icon. Defaults to the primary theme.",name:"--forge-step-icon-text-color"},{description:"The text color of the step icon when active. Defaults to the on-primary theme.",name:"--forge-step-icon-text-color-active"},{description:"The size of the step icon content. Defaults to 24px.",name:"--forge-step-icon-content-size"},{description:"The size of the step icon. Defaults to 0.875em.",name:"--forge-step-icon-size"},{description:"The duration of the step icon transition. Defaults to the medium4 animation duration.",name:"--forge-step-icon-transition-duration"},{description:"The easing of the step icon transition. Defaults to the standard animation easing.",name:"--forge-step-icon-transition-easing"},{description:"The color of the step line. Defaults to the outline theme.",name:"--forge-step-line-color"},{description:"The minimum width of the step line. Defaults to 10px.",name:"--forge-step-line-min-width"},{description:"The minimum width of the step line when clustered. Defaults to 25px.",name:"--forge-step-line-min-width-clustered"},{description:"The color of the step label. Defaults to the text-high theme.",name:"--forge-step-label-color"},{description:"The color of the step sub-label. Defaults to the text-medium theme.",name:"--forge-step-sub-label-color"},{description:"The color of the step error. Defaults to the error theme.",name:"--forge-step-error-color"},{description:"The text color of the step error. Defaults to the on-error theme.",name:"--forge-step-error-text-color"},{description:"The border left width of the step expansion panel. Defaults to 1px.",name:"--forge-step-expansion-panel-border-left-width"},{description:"The margin bottom of the step expansion panel. Defaults to 4px.",name:"--forge-step-expansion-panel-margin-bottom"},{description:"The margin left of the step expansion panel. Defaults to 60px.",name:"--forge-step-expansion-panel-margin-left"},{description:"The margin top of the step expansion panel. Defaults to 4px.",name:"--forge-step-expansion-panel-margin-top"},{description:"The color of the step expansion panel icon. Defaults to the text-medium theme.",name:"--forge-step-expansion-panel-icon-color"}],slots:[{description:"The content of the step.",name:""},{description:"The optional content of the step.",name:"optional"},{description:"The content of the step expansion.",name:"expansion-content"}],members:[{kind:"field",name:"alternative",type:{text:"boolean"},privacy:"public",description:"Whether the step is in the alternative style."},{kind:"field",name:"index",type:{text:"number"},privacy:"public",description:"The index of the step."},{kind:"field",name:"editable",type:{text:"boolean"},privacy:"public",description:"Whether the step is editable."},{kind:"field",name:"completed",type:{text:"boolean"},privacy:"public",description:"Whether the step is completed."},{kind:"field",name:"error",type:{text:"boolean"},privacy:"public",description:"Whether the step has an error."},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",description:"Whether the step is selected."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"Whether the step is disabled."},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Whether the step is in vertical mode."},{kind:"field",name:"expanded",type:{text:"boolean"},privacy:"public",description:"Whether the step is expanded."},{kind:"field",name:"ignoreUserExpansion",type:{text:"boolean"},privacy:"public",description:"Whether the step should ignore user expansion."},{kind:"method",name:"focus",privacy:"public",return:{type:{text:"void"}}},{kind:"method",name:"setStepTabIndex",privacy:"public",return:{type:{text:"void"}},parameters:[{name:"index",type:{text:"number"}}]}],attributes:[{type:{text:"boolean"},description:"Whether the step is selected.",name:"selected"},{type:{text:"number"},description:"The index of the step.",name:"index"},{type:{text:"boolean"},description:"Whether the step is editable.",name:"editable"},{type:{text:"boolean"},description:"Whether the step is completed.",name:"completed"},{type:{text:"boolean"},description:"Whether the step has an error.",name:"error"},{type:{text:"boolean"},description:"Whether the step is in alternative mode.",name:"alternative"},{type:{text:"boolean"},description:"Whether the step is disabled.",name:"disabled"},{type:{text:"boolean"},description:"Whether the step is in vertical mode.",name:"vertical"},{type:{text:"boolean"},description:"Whether the step is expanded.",name:"expanded"},{type:{text:"boolean"},description:"Whether the step should ignore user expansion.",name:"ignore-user-expansion"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-step",customElement:!0}],exports:[{kind:"js",name:"StepComponent",declaration:{name:"StepComponent",module:"src/lib/stepper/step/step.ts"}}]},{kind:"javascript-module",path:"src/lib/stepper/stepper/stepper.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-stepper>` custom element.",name:"StepperComponent",members:[{kind:"field",name:"steps",type:{text:"IStepConfiguration[]"},privacy:"public",description:"The step configurations."},{kind:"field",name:"selectedIndex",type:{text:"number"},privacy:"public",description:"The active step index."},{kind:"field",name:"linear",type:{text:"boolean"},privacy:"public",description:"Whether the stepper is linear or non-linear."},{kind:"field",name:"alternative",type:{text:"boolean"},privacy:"public",description:"Whether the stepper uses the default or alternative label layout mode."},{kind:"field",name:"layoutMode",type:{text:"StepperLayoutMode"},privacy:"public",description:"The layout mode of the stepper."},{kind:"field",name:"layoutAlign",type:{text:"StepperLayoutAlign"},privacy:"public",description:"The layout alignment of the stepper."},{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public"},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-stepper",customElement:!0}],exports:[{kind:"js",name:"StepperComponent",declaration:{name:"StepperComponent",module:"src/lib/stepper/stepper/stepper.ts"}}]},{kind:"javascript-module",path:"src/lib/tabs/tab/tab.ts",declarations:[{kind:"class",description:"",name:"TabComponent",cssProperties:[{description:"The color of the tab indicator. Defaults to the primary theme.",name:"--forge-tab-indicator-color"},{description:"The height of the tab indicator.",name:"--forge-tab-indicator-height"},{description:"The shape of the tab indicator.",name:"--forge-tab-indicator-shape"},{description:"The color of the tab container. Defaults to the surface theme.",name:"--forge-tab-container-color"},{description:"The height of the tab.",name:"--forge-tab-height"},{description:"The shape of the tab.",name:"--forge-tab-shape"},{description:"The opacity of the tab when disabled.",name:"--forge-tab-disabled-opacity"},{description:"The color of the icon when the tab is active and focused. Defaults to the primary theme.",name:"--forge-tab-active-focus-icon-color"},{description:"The color of the icon when the tab is active and hovered. Defaults to the primary theme.",name:"--forge-tab-active-hover-icon-color"},{description:"The color of the icon when the tab is active. Defaults to the primary theme.",name:"--forge-tab-active-icon-color"},{description:"The color of the icon when the tab is active and pressed. Defaults to the primary theme.",name:"--forge-tab-active-pressed-icon-color"},{description:"The size of the icon.",name:"--forge-tab-icon-size"},{description:"The color of the icon when the tab is focused. Defaults to the text-on-background theme.",name:"--forge-tab-focus-icon-color"},{description:"The color of the icon when the tab is hovered. Defaults to the text-on-background theme.",name:"--forge-tab-hover-icon-color"},{description:"The color of the icon. Defaults to the text-on-background theme.",name:"--forge-tab-icon-color"},{description:"The color of the icon when the tab is pressed. Defaults to the text-on-background theme.",name:"--forge-tab-pressed-icon-color"},{description:"The color of the label text when the tab is active and focused. Defaults to the primary theme.",name:"--forge-tab-active-focus-label-text-color"},{description:"The color of the label text when the tab is active and hovered. Defaults to the primary theme.",name:"--forge-tab-active-hover-label-text-color"},{description:"The color of the label text when the tab is active. Defaults to the primary theme.",name:"--forge-tab-active-label-text-color"},{description:"The color of the label text when the tab is active and pressed. Defaults to the primary theme.",name:"--forge-tab-active-pressed-label-text-color"},{description:"The color of the label text when the tab is focused. Defaults to the text-on-background theme.",name:"--forge-tab-focus-label-text-color"},{description:"The color of the label text when the tab is hovered. Defaults to the text-on-background theme.",name:"--forge-tab-hover-label-text-color"},{description:"The color of the label text. Defaults to the text-on-background theme.",name:"--forge-tab-label-text-color"},{description:"The color of the label text when the tab is pressed. Defaults to the text-on-background theme.",name:"--forge-tab-pressed-label-text-color"}],cssParts:[{description:"The tab container.",name:"container"},{description:"The tab content container.",name:"content"},{description:"The tab label container.",name:"label"},{description:"The tab active indicator.",name:"indicator"}],slots:[{description:"The tab label.",name:""},{description:"Content before the label.",name:"start"},{description:"Content after the label.",name:"end"}],members:[{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"The disabled state of the tab."},{kind:"field",name:"selected",type:{text:"boolean"},privacy:"public",description:"The selected state of the tab."},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Controls whether the tab is vertical or horizontal."},{kind:"field",name:"stacked",type:{text:"boolean"},privacy:"public",description:"Controls whether the tab is taller to allow for slotted leading/trailing elements."},{kind:"field",name:"secondary",type:{text:"boolean"},privacy:"public",description:"Controls whether the tab is styled as secondary tab navigation."},{kind:"field",name:"inverted",type:{text:"boolean"},privacy:"public",description:"Controls whether the tab indicator is rendered on the opposite side of the tab."}],events:[{description:"Dispatched when the tab is selected.",name:"forge-tab-select"}],attributes:[{description:"The disabled state of the tab.",name:"disabled"},{description:"The selected state of the tab.",name:"selected"},{description:"Controls whether the tab is vertical or horizontal.",name:"vertical"},{description:"Controls whether the tab is taller to allow for slotted leading/trailing elements.",name:"stacked"},{description:"Controls whether the tab is styled as secondary tab navigation.",name:"secondary"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-tab",customElement:!0}],exports:[{kind:"js",name:"TabComponent",declaration:{name:"TabComponent",module:"src/lib/tabs/tab/tab.ts"}}]},{kind:"javascript-module",path:"src/lib/tabs/tab-bar/tab-bar.ts",declarations:[{kind:"class",description:"",name:"TabBarComponent",cssProperties:[{description:"The `justify-content` value for the tab bar flex container.",name:"--forge-tab-bar-justify"},{description:"The `flex` value for the child `<forge-tab>` elements.",name:"--forge-tab-bar-stretch"},{description:"The color of the divider.",name:"--forge-tab-bar-divider-color"},{description:"The thickness of the divider.",name:"--forge-tab-bar-divider-thickness"}],cssParts:[{description:"The container element.",name:"container"},{description:"The scroll container element.",name:"scroll-container"}],members:[{kind:"field",name:"disabled",type:{text:"boolean"},privacy:"public",description:"The disabled state of the tab bar."},{kind:"field",name:"activeTab",type:{text:"number"},privacy:"public",description:"The index of the active tab."},{kind:"field",name:"vertical",type:{text:"boolean"},privacy:"public",description:"Controls whether the tab bar is vertical or horizontal."},{kind:"field",name:"clustered",type:{text:"boolean"},privacy:"public",description:"Controls whether the tabs stretch the full width of their container or cluster together at their minimum width."},{kind:"field",name:"stacked",type:{text:"boolean"},privacy:"public",description:"Controls whether the tabs are taller to allow for slotted leading/trailing elements."},{kind:"field",name:"secondary",type:{text:"boolean"},privacy:"public",description:"Controls whether the tabs are styled as secondary tab navigation."},{kind:"field",name:"inverted",type:{text:"boolean"},privacy:"public",description:"Controls whether the tabs are rendered inverted (tab indicator at top instead of bottom)."},{kind:"field",name:"autoActivate",type:{text:"boolean"},privacy:"public",description:"Controls whether the tabs are automatically activated when receiving focus."},{kind:"field",name:"scrollButtons",type:{text:"boolean"},privacy:"public",description:"Controls whether scroll buttons are displayed when the tabs overflow their container."}],events:[{description:"{CustomEvent<ITabBarChangeEventData>} - Dispatches when the active tab changes.",name:"forge-tab-bar-change"}],attributes:[{description:"The disabled state of the tab bar.",name:"disabled"},{description:"The index of the active tab.",name:"active-tab"},{description:"Controls whether the tab bar is vertical or horizontal.",name:"vertical"},{description:"Controls whether the tabs stretch the full width of their container or cluster together at their minimum width.",name:"clustered"},{description:"Controls whether the tabs are taller to allow for slotted leading/trailing elements.",name:"stacked"},{description:"Controls whether the tabs are styled as secondary tab navigation.",name:"secondary"},{description:"Controls whether the tabs are automatically activated when receiving focus.",name:"auto-activate"},{description:"Controls whether scroll buttons are displayed when the tabs overflow their container.",name:"scroll-buttons"}],superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-tab-bar",summary:"Tabs organize content across different screens and views.",customElement:!0}],exports:[{kind:"js",name:"TabBarComponent",declaration:{name:"TabBarComponent",module:"src/lib/tabs/tab-bar/tab-bar.ts"}}]},{kind:"javascript-module",path:"src/lib/view-switcher/view/view.ts",declarations:[{kind:"class",description:"The web component class behind the `<forge-view>` custom element.",name:"ViewComponent",superclass:{name:"BaseComponent",module:"/src/lib/core/base/base-component"},tagName:"forge-view",customElement:!0}],exports:[{kind:"js",name:"ViewComponent",declaration:{name:"ViewComponent",module:"src/lib/view-switcher/view/view.ts"}}]},{kind:"javascript-module",path:"src/stories/components/avatar/Avatar.stories.ts",declarations:[{kind:"variable",name:"meta",default:"{ title: 'Components/Avatar', render: args => customElementStoryRenderer(component, args), component, parameters: { actions: { disable: true } }, argTypes: { ...generateCustomElementArgTypes({ tagName: component }), }, args: { text: 'Tyler Forge', letterCount: 2 }, } satisfies Meta"},{kind:"variable",name:"Demo",type:{text:"Story"},default:"{}"},{kind:"variable",name:"WithImage",type:{text:"Story"},default:"{ parameters: { controls: { disable: true } }, args: { imageUrl } }"},{kind:"variable",name:"WithIcon",type:{text:"Story"},default:'{ ...standaloneStoryParams, render: () => { IconRegistry.define(tylIconPerson); return html` <forge-avatar> <forge-icon name="person"></forge-icon> </forge-avatar> `; } }'},{kind:"variable",name:"WithIconButton",type:{text:"Story"},default:'{ ...standaloneStoryParams, render: args => { return html` <forge-icon-button aria-label="Icon button with avatar"> ${customElementStoryRenderer(component, args)} </forge-icon-button> `; } }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/stories/components/avatar/Avatar.stories.ts"}},{kind:"js",name:"Demo",declaration:{name:"Demo",module:"src/stories/components/avatar/Avatar.stories.ts"}},{kind:"js",name:"WithImage",declaration:{name:"WithImage",module:"src/stories/components/avatar/Avatar.stories.ts"}},{kind:"js",name:"WithIcon",declaration:{name:"WithIcon",module:"src/stories/components/avatar/Avatar.stories.ts"}},{kind:"js",name:"WithIconButton",declaration:{name:"WithIconButton",module:"src/stories/components/avatar/Avatar.stories.ts"}}]},{kind:"javascript-module",path:"src/stories/components/badge/Badge.stories.ts",declarations:[{kind:"variable",name:"meta",default:"{ title: 'Components/Badge', render: args => { const el = customElementStoryRenderer(component, args); el.innerHTML = args.text; return el; }, component, parameters: { actions: { disable: true } }, argTypes: { ...generateCustomElementArgTypes({ tagName: component, controls: { theme: { control: 'select', options: ['default', ...GLOBAL_THEME_OPTIONS, 'info-primary', 'info-secondary'] } } }) }, args: { theme: 'default', text: 'Status', }, } satisfies Meta"},{kind:"variable",name:"Demo",type:{text:"Story"},default:"{}"},{kind:"variable",name:"Themed",type:{text:"Story"},default:'{ ...standaloneStoryParams, render: () => { return html` <div style="display: flex; gap: 8px;"> <forge-badge theme="default">default</forge-badge> <forge-badge theme="primary">Primary</forge-badge> <forge-badge theme="secondary">Secondary</forge-badge> <forge-badge theme="tertiary">Tertiary</forge-badge> <forge-badge theme="success">Success</forge-badge> <forge-badge theme="error">Error</forge-badge> <forge-badge theme="warning">Warning</forge-badge> <forge-badge theme="info">Info</forge-badge> <forge-badge theme="info-secondary">Info (secondary)</forge-badge> </div> `; }, }'},{kind:"variable",name:"Strong",type:{text:"Story"},default:'{ ...standaloneStoryParams, args: { strong: true }, render: () => { return html` <div style="display: flex; gap: 8px;"> <forge-badge strong theme="default">default</forge-badge> <forge-badge strong theme="primary">Primary</forge-badge> <forge-badge strong theme="secondary">Secondary</forge-badge> <forge-badge strong theme="tertiary">Tertiary</forge-badge> <forge-badge strong theme="success">Success</forge-badge> <forge-badge strong theme="error">Error</forge-badge> <forge-badge strong theme="warning">Warning</forge-badge> <forge-badge strong theme="info">Info</forge-badge> <forge-badge strong theme="info-secondary">Info (secondary)</forge-badge> </div> `; }, }'},{kind:"variable",name:"WithIconButton",type:{text:"Story"},default:'{ ...standaloneStoryParams, render: () => { IconRegistry.define(tylIconNotifications); return html` <forge-icon-button> <forge-icon name="notifications" style="position: absolute;"></forge-icon> <forge-badge slot="badge">1</forge-badge> </forge-icon-button> `; }, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/stories/components/badge/Badge.stories.ts"}},{kind:"js",name:"Demo",declaration:{name:"Demo",module:"src/stories/components/badge/Badge.stories.ts"}},{kind:"js",name:"Themed",declaration:{name:"Themed",module:"src/stories/components/badge/Badge.stories.ts"}},{kind:"js",name:"Strong",declaration:{name:"Strong",module:"src/stories/components/badge/Badge.stories.ts"}},{kind:"js",name:"WithIconButton",declaration:{name:"WithIconButton",module:"src/stories/components/badge/Badge.stories.ts"}}]},{kind:"javascript-module",path:"src/stories/components/button/Button.stories.ts",declarations:[{kind:"variable",name:"meta",default:"{ title: 'Components/Button', render: args => { const el = customElementStoryRenderer(component, args); el.textContent = args.text; return el; }, component, argTypes: { ...generateCustomElementArgTypes({ tagName: component, exclude: ['form', 'name', 'value'], controls: { variant: { control: { type: 'select' }, options: ['text', 'outlined', 'filled', 'raised', 'link'] }, theme: { control: { type: 'select' }, options: GLOBAL_THEME_OPTIONS }, } }), text: { control: 'text' }, }, args: { text: 'Button', variant: 'text', pill: false, theme: 'primary', type: 'button', disabled: false, popoverIcon: false, dense: false, fullWidth: false }, } satisfies Meta"},{kind:"variable",name:"Demo",type:{text:"Story"},default:"{}"},{kind:"variable",name:"Variants",type:{text:"Story"},default:'{ ...standaloneStoryParams, render: () => { return html` <forge-button>Text</forge-button> <forge-button variant="outlined">Outlined</forge-button> <forge-button variant="filled">Filled</forge-button> <forge-button variant="raised">Raised</forge-button> <forge-button variant="link">Link</forge-button> `; } }'},{kind:"variable",name:"Themed",type:{text:"Story"},default:'{ parameters: { controls: { include: [\'variant\'] }, }, args: { variant: \'raised\' }, render: ({ variant }) => { return html` <forge-button variant=${variant}>Primary</forge-button> <forge-button variant=${variant} theme="secondary">Secondary</forge-button> <forge-button variant=${variant} theme="tertiary">Tertiary</forge-button> <forge-button variant=${variant} theme="success">Success</forge-button> <forge-button variant=${variant} theme="warning">Warning</forge-button> <forge-button variant=${variant} theme="error">Error</forge-button> <forge-button variant=${variant} theme="info">Info</forge-button> `; } }'},{kind:"variable",name:"WithIcon",type:{text:"Story"},default:"{ parameters: { controls: { include: ['variant', 'iconSlot'] }, }, argTypes: { iconSlot: { options: ['start', 'end'], control: { type: 'select' } } }, args: { variant: 'raised', iconSlot: 'start' }, render: ({ variant, iconSlot }) => { IconRegistry.define(tylIconForgeLogo); return html` <forge-button variant=${variant}> <forge-icon slot=${iconSlot} name=\"forge_logo\"></forge-icon> Button </forge-button> `; } }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/stories/components/button/Button.stories.ts"}},{kind:"js",name:"Demo",declaration:{name:"Demo",module:"src/stories/components/button/Button.stories.ts"}},{kind:"js",name:"Variants",declaration:{name:"Variants",module:"src/stories/components/button/Button.stories.ts"}},{kind:"js",name:"Themed",declaration:{name:"Themed",module:"src/stories/components/button/Button.stories.ts"}},{kind:"js",name:"WithIcon",declaration:{name:"WithIcon",module:"src/stories/components/button/Button.stories.ts"}}]},{kind:"javascript-module",path:"src/stories/components/dialog/Dialog.stories.ts",declarations:[{kind:"variable",name:"meta",default:"{ title: 'Components/Dialog', render: Dialog, component: 'forge-dialog', argTypes: { ...generateCustomElementArgTypes({ tagName: component, exclude: ['trigger', 'triggerElement'], controls: { mode: { control: 'select', options: ['modal', 'inline-modal', 'nonmodal'] }, type: { control: 'select', options: ['dialog', 'alertdialog'] }, animationType: { control: 'select', options: ['none', 'zoom', 'fade', 'slide'] }, preset: { control: 'select', options: ['dialog', 'left-sheet', 'right-sheet', 'top-sheet', 'bottom-sheet'] }, sizeStrategy: { control: 'select', options: ['content', 'container-inline', 'container-block'] }, positionStrategy: { control: 'select', options: ['viewport', 'container'] }, placement: { control: 'select', options: ['custom', 'center', 'top', 'right', 'bottom', 'left', 'top-right', 'top-left', 'bottom-right', 'bottom-left'] }, } }) }, args: { open: false, persistent: false, fullscreen: false, moveable: false, mode: DIALOG_CONSTANTS.defaults.MODE, type: DIALOG_CONSTANTS.defaults.TYPE, animationType: DIALOG_CONSTANTS.defaults.ANIMATION_TYPE, preset: DIALOG_CONSTANTS.defaults.PRESET, sizeStrategy: DIALOG_CONSTANTS.defaults.SIZE_STRATEGY, positionStrategy: DIALOG_CONSTANTS.defaults.POSITION_STRATEGY, placement: DIALOG_CONSTANTS.defaults.PLACEMENT, } } satisfies Meta<Partial<IDialogProperties>>"},{kind:"variable",name:"Demo",type:{text:"Story"},default:"{}"},{kind:"variable",name:"RightSheet",type:{text:"Story"},default:"{ args: { preset: 'right-sheet' }, }"},{kind:"variable",name:"LeftSheet",type:{text:"Story"},default:"{ args: { preset: 'left-sheet' }, }"},{kind:"variable",name:"TopSheet",type:{text:"Story"},default:"{ args: { preset: 'top-sheet' }, }"},{kind:"variable",name:"BottomSheet",type:{text:"Story"},default:"{ args: { preset: 'bottom-sheet' }, }"},{kind:"variable",name:"Fullscreen",type:{text:"Story"},default:"{ args: { fullscreen: true }, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"Demo",declaration:{name:"Demo",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"RightSheet",declaration:{name:"RightSheet",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"LeftSheet",declaration:{name:"LeftSheet",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"TopSheet",declaration:{name:"TopSheet",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"BottomSheet",declaration:{name:"BottomSheet",module:"src/stories/components/dialog/Dialog.stories.ts"}},{kind:"js",name:"Fullscreen",declaration:{name:"Fullscreen",module:"src/stories/components/dialog/Dialog.stories.ts"}}]},{kind:"javascript-module",path:"src/stories/components/dialog/Dialog.ts",declarations:[{kind:"function",name:"Dialog",parameters:[{name:"args",type:{text:"ArgTypes"}}]}],exports:[{kind:"js",name:"Dialog",declaration:{name:"Dialog",module:"src/stories/components/dialog/Dialog.ts"}}]},{kind:"javascript-module",path:"src/test/spec/accordion/accordion.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/autocomplete/autocomplete.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/bottom-sheet/bottom-sheet.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/calendar/calendar.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/calendar-menu/calendar-menu.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/color-picker/color-picker.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/date-picker/calendar-dropdown.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/date-picker/date-picker-component-delegate.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/date-picker/date-picker.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/date-range-picker/date-range-component-delegate.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/date-range-picker/date-range-picker.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/drawer/drawer.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/drawer/mini-drawer.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/drawer/modal-drawer.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/keyboard-shortcut/keyboard-shortcut.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/list-dropdown/list-dropdown.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/menu/menu.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/select/select-component-delegate.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/select/select-dropdown.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/step/step.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/stepper/stepper.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/table/table.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/time-picker/time-picker.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/utils/color-utils.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/view-switcher/view-switcher.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/split-view/split-view/split-view.spec.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/test/spec/split-view/split-view-panel/split-view-panel.spec.ts",declarations:[],exports:[]}],We={schemaVersion:je,readme:Me,modules:Re},Li=["primary","secondary","tertiary","success","warning","error","info"],Oi={parameters:{controls:{disable:!0},actions:{disable:!0}}};function ji(o,e){const t=document.createElement(o);return Object.keys(e).forEach(i=>{i.startsWith("--")?t.style.setProperty(i,e[i]):i.includes("-")?t.setAttribute(i,e[i]):i in t&&(t[i]=e[i])}),t}function Mi({tagName:o,exclude:e,controls:t}){var l;const i=Ne(o),n={};let a=((l=i.members)==null?void 0:l.filter(s=>s.kind==="field"&&s.privacy==="public"))??[],r=i.cssProperties??[];if(e&&e.forEach(s=>{a=a.filter(d=>d.name!==s),r=r.filter(d=>d.name!==s)}),a.length){const s=me(a,"properties");Object.assign(n,s)}if(r.length){const s=me(r,"css custom properties","text");Object.assign(n,s)}return t&&Object.entries(t).forEach(([s,d])=>{n[s]&&Object.assign(n[s],d)}),n}function me(o,e,t){return o.reduce((i,n)=>(i[n.name]={control:t??ze(n.type.text),defaultValue:n.default,table:{category:e}},i),{})}function Ne(o){return We.modules.flatMap(e=>e.declarations).find(e=>e.tagName===o)}function ze(o){return Ve[o]??"text"}const Ve={boolean:"boolean",string:"text",number:"number",object:"object",function:"object",array:"object",bigint:"number"};var xe={name:"arrow_drop_down",data:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M7 10l5 5 5-5z"/></svg>'},Ri={name:"close",data:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>'},Wi={name:"notifications",data:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 22c1.1 0 2-.9 2-2h-4a2 2 0 002 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z"/></svg>'},Ni={name:"person",data:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/></svg>'};function zi(o){return typeof o<"u"&&o!==null}function Vi(o){return typeof o=="string"}function Gi(o){return typeof o=="number"}function ue(o){return typeof o=="function"}function Ge(o){return o instanceof Array}function E(o){return o!=null&&""+o!="false"}function Hi(o){return+o}function Ui(o){for(;o.lastChild;)o.removeChild(o.lastChild)}function He(){const o=document.createElement("fakeelement"),e={animation:"animationend",OAnimation:"oAnimationEnd",MozAnimation:"animationend",WebkitAnimation:"webkitAnimationEnd"};for(const t in e)if(o.style[t]!==void 0)return e[t]}async function $i(o,e,t=!0){return o.classList.add(e),new Promise(i=>{const n=He(),a=()=>{t&&o.classList.remove(e),o.removeEventListener(n,a),i()};o.addEventListener(n,a)})}function qi(o=document){const e=o.activeElement;return!e||e===o.body?e:we(e)}function we(o){return o.shadowRoot&&o.shadowRoot.activeElement&&(o=we(o.shadowRoot.activeElement)),o}function Te(o,e,t,i=""){e?o.setAttribute(t,i):o.removeAttribute(t)}const H="_forgeElementStyles",fe=window.ShadowRoot&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype;function Ce(o){$e(o._customElementName,o),Ge(o._customElementDependencies)&&Ue(o._customElementDependencies)}function Ue(o){o.forEach(Ce)}function $e(o,e,t){var i;!((i=window==null?void 0:window.customElements)===null||i===void 0)&&i.get(o)||window.customElements.define(o,e,t)}function qe(o){return new DOMParser().parseFromString(o,"text/html").querySelector("template")}function le(o,e,t,i=!1){const n=Ye(e);o.attachShadow({mode:"open",delegatesFocus:i}),t&&Xe(o,t),Ke(o,n)}function Ye(o,e){return qe(o)}function Ke(o,e){o.shadowRoot.appendChild(e.content.cloneNode(!0))}function Xe(o,e,{force:t}={force:!1}){const i=o.constructor;if(!o.shadowRoot||!e){fe&&(i[H]&&(i[H]=[]),o.shadowRoot&&(o.shadowRoot.adoptedStyleSheets=[]));return}if(e=e instanceof Array?e:[e],fe){if(t||!i[H]){const n=new CSSStyleSheet;n.replaceSync(e.join(" ")),i[H]=[n]}o.shadowRoot.adoptedStyleSheets=i[H]}else{const n=document.createElement("style"),a=window.forgeNonce;a&&n.setAttribute("nonce",a),n.textContent=e.join(" "),o.shadowRoot.appendChild(n)}}function R(o,e){return o.shadowRoot.querySelector(e)}function Ze(o,e,t,i=!0,n=!1){let a;return typeof CustomEvent=="function"?a=new CustomEvent(e,{detail:t,bubbles:i,cancelable:n}):(a=document.createEvent("CustomEvent"),a.initCustomEvent(e,i,n,t)),o.dispatchEvent(a)}const Je="_customElementName",Qe="_customElementDependencies";function de({name:o,dependencies:e,define:t=!0}){return i=>{et(i),o&&(i[Je]=o),e&&e.length&&(i[Qe]=e),window.__forgeFlags__autoDefine!==!1&&t&&Ce(i)}}function et(o){const e=o.prototype.connectedCallback;o.prototype.connectedCallback=function(){this.isConnected&&(this._isInitialized||(tt(this),ue(this.initializedCallback)&&this.initializedCallback.apply(this),this._isInitialized=!0),ue(e)&&e.apply(this))}}function tt(o){const e=Object.getOwnPropertyNames(o).filter(t=>!t.startsWith("_"));for(const t of e){const i=o[t];delete o[t],o[t]=i}}class it{constructor(e){this.get=!0,this.set=!0,e&&Object.assign(this,e)}}const nt=(o,e)=>`${o}'s foundation does not contain the property "${e}"`,ot=o=>`${o} does not have a foundation`;function _e(o,e,t){if(o._foundation){if(e in o._foundation)return t();throw new Error(nt(o.localName,e))}else throw new Error(ot(o.localName))}function f(o){const e=new it(o);return(t,i,n)=>{let a,r;const l=i,s=i.toString();if(n)a=n.get,r=n.set,n.configurable=!0,n.enumerable=!0,e.set&&(n.set=function(d){return ye(this,s,u=>{const y=Object.getOwnPropertyDescriptor(t,s);y.set=u.set,Reflect.defineProperty(t,l,y),u.set(d)},r)}),e.get&&(n.get=function(){return ve(this,s,d=>{const u=Object.getOwnPropertyDescriptor(t,s);return u.get=d.get,Reflect.defineProperty(t,l,u),d.get()},a)});else if(e.set||e.get){const d={configurable:!0,enumerable:!0},u={get(){const F=this;return ve(F,s,L=>{let T;return e.set&&(T=Object.assign({},y)),Reflect.defineProperty(F,s,Object.assign(Object.assign({configurable:!0,enumerable:!0},L),T)),L.get()})}},y={set(F){const L=this;return ye(L,s,T=>{let D;e.get&&(D=Object.assign({},u)),Reflect.defineProperty(L,s,Object.assign(Object.assign({configurable:!0,enumerable:!0},T),D)),T.set(F)})}};e.get&&Object.assign(d,Object.assign({},u)),e.set&&Object.assign(d,Object.assign({},y)),Reflect.defineProperty(t,l,d)}}}function be(o,e,t){o._foundation[t]=e}function ge(o,e){return o._foundation[e]}function ye(o,e,t,i){let n;return i?n={set(a){i.call(o,a),be(o,a,e)}}:n={set(a){be(o,a,e)}},_e(o,e,()=>t(n))}function ve(o,e,t,i){let n;return i?n={get(){return i.call(o),ge(o,e)}}:n={get(){return ge(o,e)}},_e(o,e,()=>t(n))}function at(){return HTMLElement.prototype.hasOwnProperty("popover")}function rt(){return ElementInternals.prototype.hasOwnProperty("role")}const ce="forge-",st="https://cdn.forge.tylertech.com/",X=Symbol("ElementInternals"),U=Symbol("setDefaultAria"),lt=`${ce}icon`,Ee={NAME:"name",SRC:"src",LAZY:"lazy",EXTERNAL:"external",EXTERNAL_TYPE:"external-type",VIEWBOX:"viewbox",THEME:"theme"},dt={...Ee},ct={LAZY_ROOT_MARGIN:50,DEFAULT_WIDTH:24,DEFAULT_HEIGHT:24},pt={DEFAULT_NETWORK_BASE_URL:`${st}v1/icons/svg`},g={elementName:lt,observedAttributes:Ee,attributes:dt,numbers:ct,strings:pt},ne="forgeIcons",m=class m{static get _icons(){return window[ne]||(window[ne]=new Map),window[ne]}static define(e,t){if(Array.isArray(e))return e.filter(a=>m._isIconObject(a)).forEach(a=>m._register(a.name,a.data));const{name:i,data:n}=m._parseIcon(e,t);m._register(i,n)}static remove(e){const t=m._isIconObject(e)?e.name:e;m._icons.delete(t)}static removeListener(e,t){const i=m._listeners.get(e);Array.isArray(i)&&i.includes(t)&&i.splice(i.indexOf(t),1)}static clear(){m._icons.clear(),m._listeners.clear()}static get(e){return m._icons.get(e)}static setNode(e,t){const i=m.get(e);i&&(i.node=t)}static getIconNames(){return Array.from(m._icons.keys())}static awaitIcon(e,t){if(m._icons.has(e)){t();return}const i=m._listeners.get(e)??[];m._listeners.set(e,[...i,t])}static get size(){return m._icons.size}static _register(e,t){m._icons.set(e,{raw:t,node:void 0}),m._invalidateListeners(e)}static _invalidateListeners(e){const t=m._listeners.get(e);Array.isArray(t)&&t.length&&(t.forEach(i=>i()),m._listeners.delete(e))}static _parseIcon(e,t=""){return m._isIconObject(e)?e:{name:e,data:t}}static _isIconObject(e){return typeof e=="object"&&e.hasOwnProperty("name")&&e.hasOwnProperty("data")}};m._listeners=new Map;let A=m;class Z{constructor(e){this._component=e}get hostElement(){return this._component}hasHostAttribute(e){return this._component.hasAttribute(e)}getHostAttribute(e){return this._component.getAttribute(e)}setHostAttribute(e,t=""){this._component.setAttribute(e,t)}removeHostAttribute(e){this._component.removeAttribute(e)}toggleHostAttribute(e,t,i){Te(this._component,t,e,i)}redispatchEvent(e,t){var l;const i=!(((l=e.target)==null?void 0:l.getRootNode())instanceof ShadowRoot);e.bubbles&&(e.composed||i)&&e.stopPropagation();const n={...e,detail:e.detail??null,bubbles:(t==null?void 0:t.bubbles)??e.bubbles,cancelable:(t==null?void 0:t.cancelable)??e.cancelable,composed:(t==null?void 0:t.composed)??e.composed},a=Reflect.construct(e.constructor,[e.type,n]),r=!this._component.dispatchEvent(a);return r&&e.preventDefault(),!r}emitHostEvent(e,t=null,i=!0,n){return Ze(this._component,e,t,i,n)}dispatchHostEvent(e){return!this._component.dispatchEvent(e)}toggleHostListener(e,t,i,n){i?this.addHostListener(e,t,n):this.removeHostListener(e,t,n)}addHostListener(e,t,i){this._component.addEventListener(e,t,i)}removeHostListener(e,t,i){this._component.removeEventListener(e,t,i)}addWindowListener(e,t,i){window.addEventListener(e,t,i)}removeWindowListener(e,t,i){window.removeEventListener(e,t,i)}addDocumentListener(e,t,i){this._component.ownerDocument.addEventListener(e,t,i)}removeDocumentListener(e,t,i){this._component.ownerDocument.removeEventListener(e,t,i)}getScreenWidth(){return window.innerWidth}setBodyAttribute(e,t){this._component.ownerDocument.body.setAttribute(e,t)}removeBodyAttribute(e){this._component.ownerDocument.body.removeAttribute(e)}focusHost(e){HTMLElement.prototype.focus.call(this._component,e)}clickHost(){HTMLElement.prototype.click.call(this._component)}get isConnected(){return this._component.isConnected}}class J extends HTMLElement{}function ht(){return new Promise(o=>setTimeout(o))}const mt=["name","value","formaction","formenctype","formmethod","formnovalidate","formtarget"];function ut(o,e,t){t.forEach(i=>{const n=o.getAttribute(i);n!==null&&e.setAttribute(i,n)})}function ft(o,e){const t=document.createElement("div");t.innerHTML=o;for(let n=t.childNodes.length-1;n>=0;n--)t.childNodes[n].nodeName.toLowerCase()!=="svg"&&t.removeChild(t.childNodes[n]);const i=t.firstElementChild;return(i==null?void 0:i.nodeName.toLowerCase())==="svg"&&Ae(i)?(e&&i.setAttribute("viewBox",e),!i.hasAttribute("viewBox")&&e&&i.setAttribute("viewBox",e),i.removeAttribute("height"),i.removeAttribute("width"),i):null}function Ae(o){if(o.nodeType!==1)return!0;if(o.nodeName.toLowerCase()==="script"||o.querySelector("script"))return!1;const e=Array.from(o.attributes);for(const i of e)if(typeof i.name=="string"&&i.name.toLowerCase().startsWith("on"))return!1;const t=Array.from(o.childNodes);for(const i of t)if(!Ae(i))return!1;return!0}function bt(o,{capture:e=!0,pointerenter:t=!0,focusin:i=!0}={}){let n;const a=()=>{typeof n=="function"&&n()};return{userInteraction:new Promise(l=>{const s={once:!0,capture:e},d=y=>{i&&o.removeEventListener("focusin",u,s),l(y)},u=y=>{t&&o.removeEventListener("pointerenter",d,s),l(y)};n=()=>{t&&o.removeEventListener("pointerenter",d,s),i&&o.removeEventListener("focusin",u,s)},t&&o.addEventListener("pointerenter",d,s),i&&o.addEventListener("focusin",u,s)}),destroy:a}}function Se(o,e){let t=null;return e&&(t=gt(o,e)),t||o.parentElement}function gt(o,e){const t=o.getRootNode();return e===":host"&&t instanceof ShadowRoot?t.host:t.querySelector(`#${e}`)}function N(o,e){if(o==null)return{};var t={},i=Object.keys(o),n,a;for(a=0;a<i.length;a++)n=i[a],!(e.indexOf(n)>=0)&&(t[n]=o[n]);return t}function p(o){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return new p.InputMask(o,e)}class h{constructor(e){Object.assign(this,{inserted:"",rawInserted:"",skip:!1,tailShift:0},e)}aggregate(e){return this.rawInserted+=e.rawInserted,this.skip=this.skip||e.skip,this.inserted+=e.inserted,this.tailShift+=e.tailShift,this}get offset(){return this.tailShift+this.inserted.length}}p.ChangeDetails=h;function W(o){return typeof o=="string"||o instanceof String}const c={NONE:"NONE",LEFT:"LEFT",FORCE_LEFT:"FORCE_LEFT",RIGHT:"RIGHT",FORCE_RIGHT:"FORCE_RIGHT"};function yt(o){switch(o){case c.LEFT:return c.FORCE_LEFT;case c.RIGHT:return c.FORCE_RIGHT;default:return o}}function oe(o){return o.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function $(o){return Array.isArray(o)?o:[o,new h]}function K(o,e){if(e===o)return!0;var t=Array.isArray(e),i=Array.isArray(o),n;if(t&&i){if(e.length!=o.length)return!1;for(n=0;n<e.length;n++)if(!K(e[n],o[n]))return!1;return!0}if(t!=i)return!1;if(e&&o&&typeof e=="object"&&typeof o=="object"){var a=e instanceof Date,r=o instanceof Date;if(a&&r)return e.getTime()==o.getTime();if(a!=r)return!1;var l=e instanceof RegExp,s=o instanceof RegExp;if(l&&s)return e.toString()==o.toString();if(l!=s)return!1;var d=Object.keys(e);for(n=0;n<d.length;n++)if(!Object.prototype.hasOwnProperty.call(o,d[n]))return!1;for(n=0;n<d.length;n++)if(!K(o[d[n]],e[d[n]]))return!1;return!0}else if(e&&o&&typeof e=="function"&&typeof o=="function")return e.toString()===o.toString();return!1}class vt{constructor(e,t,i,n){for(this.value=e,this.cursorPos=t,this.oldValue=i,this.oldSelection=n;this.value.slice(0,this.startChangePos)!==this.oldValue.slice(0,this.startChangePos);)--this.oldSelection.start}get startChangePos(){return Math.min(this.cursorPos,this.oldSelection.start)}get insertedCount(){return this.cursorPos-this.startChangePos}get inserted(){return this.value.substr(this.startChangePos,this.insertedCount)}get removedCount(){return Math.max(this.oldSelection.end-this.startChangePos||this.oldValue.length-this.value.length,0)}get removed(){return this.oldValue.substr(this.startChangePos,this.removedCount)}get head(){return this.value.substring(0,this.startChangePos)}get tail(){return this.value.substring(this.startChangePos+this.insertedCount)}get removeDirection(){return!this.removedCount||this.insertedCount?c.NONE:(this.oldSelection.end===this.cursorPos||this.oldSelection.start===this.cursorPos)&&this.oldSelection.end===this.oldSelection.start?c.RIGHT:c.LEFT}}class B{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;this.value=e,this.from=t,this.stop=i}toString(){return this.value}extend(e){this.value+=String(e)}appendTo(e){return e.append(this.toString(),{tail:!0}).aggregate(e._appendPlaceholder())}get state(){return{value:this.value,from:this.from,stop:this.stop}}set state(e){Object.assign(this,e)}unshift(e){if(!this.value.length||e!=null&&this.from>=e)return"";const t=this.value[0];return this.value=this.value.slice(1),t}shift(){if(!this.value.length)return"";const e=this.value[this.value.length-1];return this.value=this.value.slice(0,-1),e}}class x{constructor(e){this._value="",this._update(Object.assign({},x.DEFAULTS,e)),this.isInitialized=!0}updateOptions(e){Object.keys(e).length&&this.withValueRefresh(this._update.bind(this,e))}_update(e){Object.assign(this,e)}get state(){return{_value:this.value}}set state(e){this._value=e._value}reset(){this._value=""}get value(){return this._value}set value(e){this.resolve(e)}resolve(e){return this.reset(),this.append(e,{input:!0},""),this.doCommit(),this.value}get unmaskedValue(){return this.value}set unmaskedValue(e){this.reset(),this.append(e,{},""),this.doCommit()}get typedValue(){return this.doParse(this.value)}set typedValue(e){this.value=this.doFormat(e)}get rawInputValue(){return this.extractInput(0,this.value.length,{raw:!0})}set rawInputValue(e){this.reset(),this.append(e,{raw:!0},""),this.doCommit()}get displayValue(){return this.value}get isComplete(){return!0}get isFilled(){return this.isComplete}nearestInputPos(e,t){return e}totalInputPositions(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return Math.min(this.value.length,t-e)}extractInput(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this.value.slice(e,t)}extractTail(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return new B(this.extractInput(e,t),e)}appendTail(e){return W(e)&&(e=new B(String(e))),e.appendTo(this)}_appendCharRaw(e){return e?(this._value+=e,new h({inserted:e,rawInserted:e})):new h}_appendChar(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;const n=this.state;let a;if([e,a]=$(this.doPrepare(e,t)),a=a.aggregate(this._appendCharRaw(e,t)),a.inserted){let r,l=this.doValidate(t)!==!1;if(l&&i!=null){const s=this.state;this.overwrite===!0&&(r=i.state,i.unshift(this.value.length-a.tailShift));let d=this.appendTail(i);l=d.rawInserted===i.toString(),!(l&&d.inserted)&&this.overwrite==="shift"&&(this.state=s,r=i.state,i.shift(),d=this.appendTail(i),l=d.rawInserted===i.toString()),l&&d.inserted&&(this.state=s)}l||(a=new h,this.state=n,i&&r&&(i.state=r))}return a}_appendPlaceholder(){return new h}_appendEager(){return new h}append(e,t,i){if(!W(e))throw new Error("value should be string");const n=new h,a=W(i)?new B(String(i)):i;t!=null&&t.tail&&(t._beforeTailState=this.state);for(let r=0;r<e.length;++r){const l=this._appendChar(e[r],t,a);if(!l.rawInserted&&!this.doSkipInvalid(e[r],t,a))break;n.aggregate(l)}return a!=null&&(n.tailShift+=this.appendTail(a).tailShift),(this.eager===!0||this.eager==="append")&&t!==null&&t!==void 0&&t.input&&e&&n.aggregate(this._appendEager()),n}remove(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this._value=this.value.slice(0,e)+this.value.slice(t),new h}withValueRefresh(e){if(this._refreshing||!this.isInitialized)return e();this._refreshing=!0;const t=this.rawInputValue,i=this.value,n=e();return this.rawInputValue=t,this.value&&this.value!==i&&i.indexOf(this.value)===0&&this.append(i.slice(this.value.length),{},""),delete this._refreshing,n}runIsolated(e){if(this._isolated||!this.isInitialized)return e(this);this._isolated=!0;const t=this.state,i=e(this);return this.state=t,delete this._isolated,i}doSkipInvalid(e){return this.skipInvalid}doPrepare(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return this.prepare?this.prepare(e,this,t):e}doValidate(e){return(!this.validate||this.validate(this.value,this,e))&&(!this.parent||this.parent.doValidate(e))}doCommit(){this.commit&&this.commit(this.value,this)}doFormat(e){return this.format?this.format(e,this):e}doParse(e){return this.parse?this.parse(e,this):e}splice(e,t,i,n){let a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{input:!0};const r=e+t,l=this.extractTail(r),s=this.eager===!0||this.eager==="remove";let d;s&&(n=yt(n),d=this.extractInput(0,r,{raw:!0}));let u=e;const y=new h;if(n!==c.NONE&&(u=this.nearestInputPos(e,t>1&&e!==0&&!s?c.NONE:n),y.tailShift=u-e),y.aggregate(this.remove(u)),s&&n!==c.NONE&&d===this.rawInputValue)if(n===c.FORCE_LEFT){let F;for(;d===this.rawInputValue&&(F=this.value.length);)y.aggregate(new h({tailShift:-1})).aggregate(this.remove(F-1))}else n===c.FORCE_RIGHT&&l.unshift();return y.aggregate(this.append(i,a,l))}maskEquals(e){return this.mask===e}typedValueEquals(e){const t=this.typedValue;return e===t||x.EMPTY_VALUES.includes(e)&&x.EMPTY_VALUES.includes(t)||this.doFormat(e)===this.doFormat(this.typedValue)}}x.DEFAULTS={format:String,parse:o=>o,skipInvalid:!0};x.EMPTY_VALUES=[void 0,null,""];p.Masked=x;function Fe(o){if(o==null)throw new Error("mask property should be defined");return o instanceof RegExp?p.MaskedRegExp:W(o)?p.MaskedPattern:o instanceof Date||o===Date?p.MaskedDate:o instanceof Number||typeof o=="number"||o===Number?p.MaskedNumber:Array.isArray(o)||o===Array?p.MaskedDynamic:p.Masked&&o.prototype instanceof p.Masked?o:o instanceof p.Masked?o.constructor:o instanceof Function?p.MaskedFunction:(console.warn("Mask not found for mask",o),p.Masked)}function M(o){if(p.Masked&&o instanceof p.Masked)return o;o=Object.assign({},o);const e=o.mask;if(p.Masked&&e instanceof p.Masked)return e;const t=Fe(e);if(!t)throw new Error("Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.");return new t(o)}p.createMask=M;const kt=["parent","isOptional","placeholderChar","displayChar","lazy","eager"],xt={0:/\d/,a:/[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,"*":/./};class De{constructor(e){const{parent:t,isOptional:i,placeholderChar:n,displayChar:a,lazy:r,eager:l}=e,s=N(e,kt);this.masked=M(s),Object.assign(this,{parent:t,isOptional:i,placeholderChar:n,displayChar:a,lazy:r,eager:l})}reset(){this.isFilled=!1,this.masked.reset()}remove(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return e===0&&t>=1?(this.isFilled=!1,this.masked.remove(e,t)):new h}get value(){return this.masked.value||(this.isFilled&&!this.isOptional?this.placeholderChar:"")}get unmaskedValue(){return this.masked.unmaskedValue}get displayValue(){return this.masked.value&&this.displayChar||this.value}get isComplete(){return!!this.masked.value||this.isOptional}_appendChar(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(this.isFilled)return new h;const i=this.masked.state,n=this.masked._appendChar(e,t);return n.inserted&&this.doValidate(t)===!1&&(n.inserted=n.rawInserted="",this.masked.state=i),!n.inserted&&!this.isOptional&&!this.lazy&&!t.input&&(n.inserted=this.placeholderChar),n.skip=!n.inserted&&!this.isOptional,this.isFilled=!!n.inserted,n}append(){return this.masked.append(...arguments)}_appendPlaceholder(){const e=new h;return this.isFilled||this.isOptional||(this.isFilled=!0,e.inserted=this.placeholderChar),e}_appendEager(){return new h}extractTail(){return this.masked.extractTail(...arguments)}appendTail(){return this.masked.appendTail(...arguments)}extractInput(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,i=arguments.length>2?arguments[2]:void 0;return this.masked.extractInput(e,t,i)}nearestInputPos(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:c.NONE;const i=0,n=this.value.length,a=Math.min(Math.max(e,i),n);switch(t){case c.LEFT:case c.FORCE_LEFT:return this.isComplete?a:i;case c.RIGHT:case c.FORCE_RIGHT:return this.isComplete?a:n;case c.NONE:default:return a}}totalInputPositions(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this.value.slice(e,t).length}doValidate(){return this.masked.doValidate(...arguments)&&(!this.parent||this.parent.doValidate(...arguments))}doCommit(){this.masked.doCommit()}get state(){return{masked:this.masked.state,isFilled:this.isFilled}}set state(e){this.masked.state=e.masked,this.isFilled=e.isFilled}}class Be{constructor(e){Object.assign(this,e),this._value="",this.isFixed=!0}get value(){return this._value}get unmaskedValue(){return this.isUnmasking?this.value:""}get displayValue(){return this.value}reset(){this._isRawInput=!1,this._value=""}remove(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return this._value=this._value.slice(0,e)+this._value.slice(t),this._value||(this._isRawInput=!1),new h}nearestInputPos(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:c.NONE;const i=0,n=this._value.length;switch(t){case c.LEFT:case c.FORCE_LEFT:return i;case c.NONE:case c.RIGHT:case c.FORCE_RIGHT:default:return n}}totalInputPositions(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return this._isRawInput?t-e:0}extractInput(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return(arguments.length>2&&arguments[2]!==void 0?arguments[2]:{}).raw&&this._isRawInput&&this._value.slice(e,t)||""}get isComplete(){return!0}get isFilled(){return!!this._value}_appendChar(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=new h;if(this.isFilled)return i;const n=this.eager===!0||this.eager==="append",r=this.char===e&&(this.isUnmasking||t.input||t.raw)&&(!t.raw||!n)&&!t.tail;return r&&(i.rawInserted=this.char),this._value=i.inserted=this.char,this._isRawInput=r&&(t.raw||t.input),i}_appendEager(){return this._appendChar(this.char,{tail:!0})}_appendPlaceholder(){const e=new h;return this.isFilled||(this._value=e.inserted=this.char),e}extractTail(){return arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,new B("")}appendTail(e){return W(e)&&(e=new B(String(e))),e.appendTo(this)}append(e,t,i){const n=this._appendChar(e[0],t);return i!=null&&(n.tailShift+=this.appendTail(i).tailShift),n}doCommit(){}get state(){return{_value:this._value,_isRawInput:this._isRawInput}}set state(e){Object.assign(this,e)}}const wt=["chunks"];class j{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;this.chunks=e,this.from=t}toString(){return this.chunks.map(String).join("")}extend(e){if(!String(e))return;W(e)&&(e=new B(String(e)));const t=this.chunks[this.chunks.length-1],i=t&&(t.stop===e.stop||e.stop==null)&&e.from===t.from+t.toString().length;if(e instanceof B)i?t.extend(e.toString()):this.chunks.push(e);else if(e instanceof j){if(e.stop==null){let n;for(;e.chunks.length&&e.chunks[0].stop==null;)n=e.chunks.shift(),n.from+=e.from,this.extend(n)}e.toString()&&(e.stop=e.blockIndex,this.chunks.push(e))}}appendTo(e){if(!(e instanceof p.MaskedPattern))return new B(this.toString()).appendTo(e);const t=new h;for(let i=0;i<this.chunks.length&&!t.skip;++i){const n=this.chunks[i],a=e._mapPosToBlock(e.value.length),r=n.stop;let l;if(r!=null&&(!a||a.index<=r)){if(n instanceof j||e._stops.indexOf(r)>=0){const s=e._appendPlaceholder(r);t.aggregate(s)}l=n instanceof j&&e._blocks[r]}if(l){const s=l.appendTail(n);s.skip=!1,t.aggregate(s),e._value+=s.inserted;const d=n.toString().slice(s.rawInserted.length);d&&t.aggregate(e.append(d,{tail:!0}))}else t.aggregate(e.append(n.toString(),{tail:!0}))}return t}get state(){return{chunks:this.chunks.map(e=>e.state),from:this.from,stop:this.stop,blockIndex:this.blockIndex}}set state(e){const{chunks:t}=e,i=N(e,wt);Object.assign(this,i),this.chunks=t.map(n=>{const a="chunks"in n?new j:new B;return a.state=n,a})}unshift(e){if(!this.chunks.length||e!=null&&this.from>=e)return"";const t=e!=null?e-this.from:e;let i=0;for(;i<this.chunks.length;){const n=this.chunks[i],a=n.unshift(t);if(n.toString()){if(!a)break;++i}else this.chunks.splice(i,1);if(a)return a}return""}shift(){if(!this.chunks.length)return"";let e=this.chunks.length-1;for(;0<=e;){const t=this.chunks[e],i=t.shift();if(t.toString()){if(!i)break;--e}else this.chunks.splice(e,1);if(i)return i}return""}}class Tt{constructor(e,t){this.masked=e,this._log=[];const{offset:i,index:n}=e._mapPosToBlock(t)||(t<0?{index:0,offset:0}:{index:this.masked._blocks.length,offset:0});this.offset=i,this.index=n,this.ok=!1}get block(){return this.masked._blocks[this.index]}get pos(){return this.masked._blockStartPos(this.index)+this.offset}get state(){return{index:this.index,offset:this.offset,ok:this.ok}}set state(e){Object.assign(this,e)}pushState(){this._log.push(this.state)}popState(){const e=this._log.pop();return this.state=e,e}bindBlock(){this.block||(this.index<0&&(this.index=0,this.offset=0),this.index>=this.masked._blocks.length&&(this.index=this.masked._blocks.length-1,this.offset=this.block.value.length))}_pushLeft(e){for(this.pushState(),this.bindBlock();0<=this.index;--this.index,this.offset=((t=this.block)===null||t===void 0?void 0:t.value.length)||0){var t;if(e())return this.ok=!0}return this.ok=!1}_pushRight(e){for(this.pushState(),this.bindBlock();this.index<this.masked._blocks.length;++this.index,this.offset=0)if(e())return this.ok=!0;return this.ok=!1}pushLeftBeforeFilled(){return this._pushLeft(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,c.FORCE_LEFT),this.offset!==0))return!0})}pushLeftBeforeInput(){return this._pushLeft(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,c.LEFT),!0})}pushLeftBeforeRequired(){return this._pushLeft(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,c.LEFT),!0})}pushRightBeforeFilled(){return this._pushRight(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,c.FORCE_RIGHT),this.offset!==this.block.value.length))return!0})}pushRightBeforeInput(){return this._pushRight(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,c.NONE),!0})}pushRightBeforeRequired(){return this._pushRight(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,c.NONE),!0})}}class Ct extends x{_update(e){e.mask&&(e.validate=t=>t.search(e.mask)>=0),super._update(e)}}p.MaskedRegExp=Ct;const _t=["_blocks"];class w extends x{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};e.definitions=Object.assign({},xt,e.definitions),super(Object.assign({},w.DEFAULTS,e))}_update(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};e.definitions=Object.assign({},this.definitions,e.definitions),super._update(e),this._rebuildMask()}_rebuildMask(){const e=this.definitions;this._blocks=[],this._stops=[],this._maskedBlocks={};let t=this.mask;if(!t||!e)return;let i=!1,n=!1;for(let l=0;l<t.length;++l){var a,r;if(this.blocks){const F=t.slice(l),L=Object.keys(this.blocks).filter(D=>F.indexOf(D)===0);L.sort((D,Oe)=>Oe.length-D.length);const T=L[0];if(T){const D=M(Object.assign({parent:this,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar,overwrite:this.overwrite},this.blocks[T]));D&&(this._blocks.push(D),this._maskedBlocks[T]||(this._maskedBlocks[T]=[]),this._maskedBlocks[T].push(this._blocks.length-1)),l+=T.length-1;continue}}let s=t[l],d=s in e;if(s===w.STOP_CHAR){this._stops.push(this._blocks.length);continue}if(s==="{"||s==="}"){i=!i;continue}if(s==="["||s==="]"){n=!n;continue}if(s===w.ESCAPE_CHAR){if(++l,s=t[l],!s)break;d=!1}const u=(a=e[s])!==null&&a!==void 0&&a.mask&&!(((r=e[s])===null||r===void 0?void 0:r.mask.prototype)instanceof p.Masked)?e[s]:{mask:e[s]},y=d?new De(Object.assign({parent:this,isOptional:n,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar},u)):new Be({char:s,eager:this.eager,isUnmasking:i});this._blocks.push(y)}}get state(){return Object.assign({},super.state,{_blocks:this._blocks.map(e=>e.state)})}set state(e){const{_blocks:t}=e,i=N(e,_t);this._blocks.forEach((n,a)=>n.state=t[a]),super.state=i}reset(){super.reset(),this._blocks.forEach(e=>e.reset())}get isComplete(){return this._blocks.every(e=>e.isComplete)}get isFilled(){return this._blocks.every(e=>e.isFilled)}get isFixed(){return this._blocks.every(e=>e.isFixed)}get isOptional(){return this._blocks.every(e=>e.isOptional)}doCommit(){this._blocks.forEach(e=>e.doCommit()),super.doCommit()}get unmaskedValue(){return this._blocks.reduce((e,t)=>e+=t.unmaskedValue,"")}set unmaskedValue(e){super.unmaskedValue=e}get value(){return this._blocks.reduce((e,t)=>e+=t.value,"")}set value(e){super.value=e}get displayValue(){return this._blocks.reduce((e,t)=>e+=t.displayValue,"")}appendTail(e){return super.appendTail(e).aggregate(this._appendPlaceholder())}_appendEager(){var e;const t=new h;let i=(e=this._mapPosToBlock(this.value.length))===null||e===void 0?void 0:e.index;if(i==null)return t;this._blocks[i].isFilled&&++i;for(let n=i;n<this._blocks.length;++n){const a=this._blocks[n]._appendEager();if(!a.inserted)break;t.aggregate(a)}return t}_appendCharRaw(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=this._mapPosToBlock(this.value.length),n=new h;if(!i)return n;for(let l=i.index;;++l){var a,r;const s=this._blocks[l];if(!s)break;const d=s._appendChar(e,Object.assign({},t,{_beforeTailState:(a=t._beforeTailState)===null||a===void 0||(r=a._blocks)===null||r===void 0?void 0:r[l]})),u=d.skip;if(n.aggregate(d),u||d.rawInserted)break}return n}extractTail(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;const i=new j;return e===t||this._forEachBlocksInRange(e,t,(n,a,r,l)=>{const s=n.extractTail(r,l);s.stop=this._findStopBefore(a),s.from=this._blockStartPos(a),s instanceof j&&(s.blockIndex=a),i.extend(s)}),i}extractInput(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(e===t)return"";let n="";return this._forEachBlocksInRange(e,t,(a,r,l,s)=>{n+=a.extractInput(l,s,i)}),n}_findStopBefore(e){let t;for(let i=0;i<this._stops.length;++i){const n=this._stops[i];if(n<=e)t=n;else break}return t}_appendPlaceholder(e){const t=new h;if(this.lazy&&e==null)return t;const i=this._mapPosToBlock(this.value.length);if(!i)return t;const n=i.index,a=e??this._blocks.length;return this._blocks.slice(n,a).forEach(r=>{if(!r.lazy||e!=null){const l=r._blocks!=null?[r._blocks.length]:[],s=r._appendPlaceholder(...l);this._value+=s.inserted,t.aggregate(s)}}),t}_mapPosToBlock(e){let t="";for(let i=0;i<this._blocks.length;++i){const n=this._blocks[i],a=t.length;if(t+=n.value,e<=t.length)return{index:i,offset:e-a}}}_blockStartPos(e){return this._blocks.slice(0,e).reduce((t,i)=>t+=i.value.length,0)}_forEachBlocksInRange(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,i=arguments.length>2?arguments[2]:void 0;const n=this._mapPosToBlock(e);if(n){const a=this._mapPosToBlock(t),r=a&&n.index===a.index,l=n.offset,s=a&&r?a.offset:this._blocks[n.index].value.length;if(i(this._blocks[n.index],n.index,l,s),a&&!r){for(let d=n.index+1;d<a.index;++d)i(this._blocks[d],d,0,this._blocks[d].value.length);i(this._blocks[a.index],a.index,0,a.offset)}}}remove(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;const i=super.remove(e,t);return this._forEachBlocksInRange(e,t,(n,a,r,l)=>{i.aggregate(n.remove(r,l))}),i}nearestInputPos(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:c.NONE;if(!this._blocks.length)return 0;const i=new Tt(this,e);if(t===c.NONE)return i.pushRightBeforeInput()||(i.popState(),i.pushLeftBeforeInput())?i.pos:this.value.length;if(t===c.LEFT||t===c.FORCE_LEFT){if(t===c.LEFT){if(i.pushRightBeforeFilled(),i.ok&&i.pos===e)return e;i.popState()}if(i.pushLeftBeforeInput(),i.pushLeftBeforeRequired(),i.pushLeftBeforeFilled(),t===c.LEFT){if(i.pushRightBeforeInput(),i.pushRightBeforeRequired(),i.ok&&i.pos<=e||(i.popState(),i.ok&&i.pos<=e))return i.pos;i.popState()}return i.ok?i.pos:t===c.FORCE_LEFT?0:(i.popState(),i.ok||(i.popState(),i.ok)?i.pos:0)}return t===c.RIGHT||t===c.FORCE_RIGHT?(i.pushRightBeforeInput(),i.pushRightBeforeRequired(),i.pushRightBeforeFilled()?i.pos:t===c.FORCE_RIGHT?this.value.length:(i.popState(),i.ok||(i.popState(),i.ok)?i.pos:this.nearestInputPos(e,c.LEFT))):e}totalInputPositions(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,i=0;return this._forEachBlocksInRange(e,t,(n,a,r,l)=>{i+=n.totalInputPositions(r,l)}),i}maskedBlock(e){return this.maskedBlocks(e)[0]}maskedBlocks(e){const t=this._maskedBlocks[e];return t?t.map(i=>this._blocks[i]):[]}}w.DEFAULTS={lazy:!0,placeholderChar:"_"};w.STOP_CHAR="`";w.ESCAPE_CHAR="\\";w.InputDefinition=De;w.FixedDefinition=Be;p.MaskedPattern=w;class Y extends w{get _matchFrom(){return this.maxLength-String(this.from).length}_update(e){e=Object.assign({to:this.to||0,from:this.from||0,maxLength:this.maxLength||0},e);let t=String(e.to).length;e.maxLength!=null&&(t=Math.max(t,e.maxLength)),e.maxLength=t;const i=String(e.from).padStart(t,"0"),n=String(e.to).padStart(t,"0");let a=0;for(;a<n.length&&n[a]===i[a];)++a;e.mask=n.slice(0,a).replace(/0/g,"\\0")+"0".repeat(t-a),super._update(e)}get isComplete(){return super.isComplete&&!!this.value}boundaries(e){let t="",i="";const[,n,a]=e.match(/^(\D*)(\d*)(\D*)/)||[];return a&&(t="0".repeat(n.length)+a,i="9".repeat(n.length)+a),t=t.padEnd(this.maxLength,"0"),i=i.padEnd(this.maxLength,"9"),[t,i]}doPrepare(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i;if([e,i]=$(super.doPrepare(e.replace(/\D/g,""),t)),!this.autofix||!e)return e;const n=String(this.from).padStart(this.maxLength,"0"),a=String(this.to).padStart(this.maxLength,"0");let r=this.value+e;if(r.length>this.maxLength)return"";const[l,s]=this.boundaries(r);return Number(s)<this.from?n[r.length-1]:Number(l)>this.to?this.autofix==="pad"&&r.length<this.maxLength?["",i.aggregate(this.append(n[r.length-1]+e,t))]:a[r.length-1]:e}doValidate(){const e=this.value;if(e.search(/[^0]/)===-1&&e.length<=this._matchFrom)return!0;const[i,n]=this.boundaries(e);return this.from<=Number(n)&&Number(i)<=this.to&&super.doValidate(...arguments)}}p.MaskedRange=Y;class z extends w{constructor(e){super(Object.assign({},z.DEFAULTS,e))}_update(e){e.mask===Date&&delete e.mask,e.pattern&&(e.mask=e.pattern);const t=e.blocks;e.blocks=Object.assign({},z.GET_DEFAULT_BLOCKS()),e.min&&(e.blocks.Y.from=e.min.getFullYear()),e.max&&(e.blocks.Y.to=e.max.getFullYear()),e.min&&e.max&&e.blocks.Y.from===e.blocks.Y.to&&(e.blocks.m.from=e.min.getMonth()+1,e.blocks.m.to=e.max.getMonth()+1,e.blocks.m.from===e.blocks.m.to&&(e.blocks.d.from=e.min.getDate(),e.blocks.d.to=e.max.getDate())),Object.assign(e.blocks,this.blocks,t),Object.keys(e.blocks).forEach(i=>{const n=e.blocks[i];!("autofix"in n)&&"autofix"in e&&(n.autofix=e.autofix)}),super._update(e)}doValidate(){const e=this.date;return super.doValidate(...arguments)&&(!this.isComplete||this.isDateExist(this.value)&&e!=null&&(this.min==null||this.min<=e)&&(this.max==null||e<=this.max))}isDateExist(e){return this.format(this.parse(e,this),this).indexOf(e)>=0}get date(){return this.typedValue}set date(e){this.typedValue=e}get typedValue(){return this.isComplete?super.typedValue:null}set typedValue(e){super.typedValue=e}maskEquals(e){return e===Date||super.maskEquals(e)}}z.DEFAULTS={pattern:"d{.}`m{.}`Y",format:o=>{if(!o)return"";const e=String(o.getDate()).padStart(2,"0"),t=String(o.getMonth()+1).padStart(2,"0"),i=o.getFullYear();return[e,t,i].join(".")},parse:o=>{const[e,t,i]=o.split(".");return new Date(i,t-1,e)}};z.GET_DEFAULT_BLOCKS=()=>({d:{mask:Y,from:1,to:31,maxLength:2},m:{mask:Y,from:1,to:12,maxLength:2},Y:{mask:Y,from:1900,to:9999}});p.MaskedDate=z;class pe{get selectionStart(){let e;try{e=this._unsafeSelectionStart}catch{}return e??this.value.length}get selectionEnd(){let e;try{e=this._unsafeSelectionEnd}catch{}return e??this.value.length}select(e,t){if(!(e==null||t==null||e===this.selectionStart&&t===this.selectionEnd))try{this._unsafeSelect(e,t)}catch{}}_unsafeSelect(e,t){}get isActive(){return!1}bindEvents(e){}unbindEvents(){}}p.MaskElement=pe;class G extends pe{constructor(e){super(),this.input=e,this._handlers={}}get rootElement(){var e,t,i;return(e=(t=(i=this.input).getRootNode)===null||t===void 0?void 0:t.call(i))!==null&&e!==void 0?e:document}get isActive(){return this.input===this.rootElement.activeElement}get _unsafeSelectionStart(){return this.input.selectionStart}get _unsafeSelectionEnd(){return this.input.selectionEnd}_unsafeSelect(e,t){this.input.setSelectionRange(e,t)}get value(){return this.input.value}set value(e){this.input.value=e}bindEvents(e){Object.keys(e).forEach(t=>this._toggleEventHandler(G.EVENTS_MAP[t],e[t]))}unbindEvents(){Object.keys(this._handlers).forEach(e=>this._toggleEventHandler(e))}_toggleEventHandler(e,t){this._handlers[e]&&(this.input.removeEventListener(e,this._handlers[e]),delete this._handlers[e]),t&&(this.input.addEventListener(e,t),this._handlers[e]=t)}}G.EVENTS_MAP={selectionChange:"keydown",input:"input",drop:"drop",click:"click",focus:"focus",commit:"blur"};p.HTMLMaskElement=G;class Ie extends G{get _unsafeSelectionStart(){const e=this.rootElement,t=e.getSelection&&e.getSelection(),i=t&&t.anchorOffset,n=t&&t.focusOffset;return n==null||i==null||i<n?i:n}get _unsafeSelectionEnd(){const e=this.rootElement,t=e.getSelection&&e.getSelection(),i=t&&t.anchorOffset,n=t&&t.focusOffset;return n==null||i==null||i>n?i:n}_unsafeSelect(e,t){if(!this.rootElement.createRange)return;const i=this.rootElement.createRange();i.setStart(this.input.firstChild||this.input,e),i.setEnd(this.input.lastChild||this.input,t);const n=this.rootElement,a=n.getSelection&&n.getSelection();a&&(a.removeAllRanges(),a.addRange(i))}get value(){return this.input.textContent}set value(e){this.input.textContent=e}}p.HTMLContenteditableMaskElement=Ie;const Et=["mask"];class At{constructor(e,t){this.el=e instanceof pe?e:e.isContentEditable&&e.tagName!=="INPUT"&&e.tagName!=="TEXTAREA"?new Ie(e):new G(e),this.masked=M(t),this._listeners={},this._value="",this._unmaskedValue="",this._saveSelection=this._saveSelection.bind(this),this._onInput=this._onInput.bind(this),this._onChange=this._onChange.bind(this),this._onDrop=this._onDrop.bind(this),this._onFocus=this._onFocus.bind(this),this._onClick=this._onClick.bind(this),this.alignCursor=this.alignCursor.bind(this),this.alignCursorFriendly=this.alignCursorFriendly.bind(this),this._bindEvents(),this.updateValue(),this._onChange()}get mask(){return this.masked.mask}maskEquals(e){var t;return e==null||((t=this.masked)===null||t===void 0?void 0:t.maskEquals(e))}set mask(e){if(this.maskEquals(e))return;if(!(e instanceof p.Masked)&&this.masked.constructor===Fe(e)){this.masked.updateOptions({mask:e});return}const t=M({mask:e});t.unmaskedValue=this.masked.unmaskedValue,this.masked=t}get value(){return this._value}set value(e){this.value!==e&&(this.masked.value=e,this.updateControl(),this.alignCursor())}get unmaskedValue(){return this._unmaskedValue}set unmaskedValue(e){this.unmaskedValue!==e&&(this.masked.unmaskedValue=e,this.updateControl(),this.alignCursor())}get typedValue(){return this.masked.typedValue}set typedValue(e){this.masked.typedValueEquals(e)||(this.masked.typedValue=e,this.updateControl(),this.alignCursor())}get displayValue(){return this.masked.displayValue}_bindEvents(){this.el.bindEvents({selectionChange:this._saveSelection,input:this._onInput,drop:this._onDrop,click:this._onClick,focus:this._onFocus,commit:this._onChange})}_unbindEvents(){this.el&&this.el.unbindEvents()}_fireEvent(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];const a=this._listeners[e];a&&a.forEach(r=>r(...i))}get selectionStart(){return this._cursorChanging?this._changingCursorPos:this.el.selectionStart}get cursorPos(){return this._cursorChanging?this._changingCursorPos:this.el.selectionEnd}set cursorPos(e){!this.el||!this.el.isActive||(this.el.select(e,e),this._saveSelection())}_saveSelection(){this.displayValue!==this.el.value&&console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),this._selection={start:this.selectionStart,end:this.cursorPos}}updateValue(){this.masked.value=this.el.value,this._value=this.masked.value}updateControl(){const e=this.masked.unmaskedValue,t=this.masked.value,i=this.displayValue,n=this.unmaskedValue!==e||this.value!==t;this._unmaskedValue=e,this._value=t,this.el.value!==i&&(this.el.value=i),n&&this._fireChangeEvents()}updateOptions(e){const{mask:t}=e,i=N(e,Et),n=!this.maskEquals(t),a=!K(this.masked,i);n&&(this.mask=t),a&&this.masked.updateOptions(i),(n||a)&&this.updateControl()}updateCursor(e){e!=null&&(this.cursorPos=e,this._delayUpdateCursor(e))}_delayUpdateCursor(e){this._abortUpdateCursor(),this._changingCursorPos=e,this._cursorChanging=setTimeout(()=>{this.el&&(this.cursorPos=this._changingCursorPos,this._abortUpdateCursor())},10)}_fireChangeEvents(){this._fireEvent("accept",this._inputEvent),this.masked.isComplete&&this._fireEvent("complete",this._inputEvent)}_abortUpdateCursor(){this._cursorChanging&&(clearTimeout(this._cursorChanging),delete this._cursorChanging)}alignCursor(){this.cursorPos=this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos,c.LEFT))}alignCursorFriendly(){this.selectionStart===this.cursorPos&&this.alignCursor()}on(e,t){return this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push(t),this}off(e,t){if(!this._listeners[e])return this;if(!t)return delete this._listeners[e],this;const i=this._listeners[e].indexOf(t);return i>=0&&this._listeners[e].splice(i,1),this}_onInput(e){if(this._inputEvent=e,this._abortUpdateCursor(),!this._selection)return this.updateValue();const t=new vt(this.el.value,this.cursorPos,this.displayValue,this._selection),i=this.masked.rawInputValue,n=this.masked.splice(t.startChangePos,t.removed.length,t.inserted,t.removeDirection,{input:!0,raw:!0}).offset,a=i===this.masked.rawInputValue?t.removeDirection:c.NONE;let r=this.masked.nearestInputPos(t.startChangePos+n,a);a!==c.NONE&&(r=this.masked.nearestInputPos(r,c.NONE)),this.updateControl(),this.updateCursor(r),delete this._inputEvent}_onChange(){this.displayValue!==this.el.value&&this.updateValue(),this.masked.doCommit(),this.updateControl(),this._saveSelection()}_onDrop(e){e.preventDefault(),e.stopPropagation()}_onFocus(e){this.alignCursorFriendly()}_onClick(e){this.alignCursorFriendly()}destroy(){this._unbindEvents(),this._listeners.length=0,delete this.el}}p.InputMask=At;class St extends w{_update(e){e.enum&&(e.mask="*".repeat(e.enum[0].length)),super._update(e)}doValidate(){return this.enum.some(e=>e.indexOf(this.unmaskedValue)>=0)&&super.doValidate(...arguments)}}p.MaskedEnum=St;class C extends x{constructor(e){super(Object.assign({},C.DEFAULTS,e))}_update(e){super._update(e),this._updateRegExps()}_updateRegExps(){let e="^"+(this.allowNegative?"[+|\\-]?":""),t="\\d*",i=(this.scale?"(".concat(oe(this.radix),"\\d{0,").concat(this.scale,"})?"):"")+"$";this._numberRegExp=new RegExp(e+t+i),this._mapToRadixRegExp=new RegExp("[".concat(this.mapToRadix.map(oe).join(""),"]"),"g"),this._thousandsSeparatorRegExp=new RegExp(oe(this.thousandsSeparator),"g")}_removeThousandsSeparators(e){return e.replace(this._thousandsSeparatorRegExp,"")}_insertThousandsSeparators(e){const t=e.split(this.radix);return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,this.thousandsSeparator),t.join(this.radix)}doPrepare(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};e=this._removeThousandsSeparators(this.scale&&this.mapToRadix.length&&(t.input&&t.raw||!t.input&&!t.raw)?e.replace(this._mapToRadixRegExp,this.radix):e);const[i,n]=$(super.doPrepare(e,t));return e&&!i&&(n.skip=!0),[i,n]}_separatorsCount(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,i=0;for(let n=0;n<e;++n)this._value.indexOf(this.thousandsSeparator,n)===n&&(++i,t&&(e+=this.thousandsSeparator.length));return i}_separatorsCountFromSlice(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:this._value;return this._separatorsCount(this._removeThousandsSeparators(e).length,!0)}extractInput(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,i=arguments.length>2?arguments[2]:void 0;return[e,t]=this._adjustRangeWithSeparators(e,t),this._removeThousandsSeparators(super.extractInput(e,t,i))}_appendCharRaw(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.thousandsSeparator)return super._appendCharRaw(e,t);const i=t.tail&&t._beforeTailState?t._beforeTailState._value:this._value,n=this._separatorsCountFromSlice(i);this._value=this._removeThousandsSeparators(this.value);const a=super._appendCharRaw(e,t);this._value=this._insertThousandsSeparators(this._value);const r=t.tail&&t._beforeTailState?t._beforeTailState._value:this._value,l=this._separatorsCountFromSlice(r);return a.tailShift+=(l-n)*this.thousandsSeparator.length,a.skip=!a.rawInserted&&e===this.thousandsSeparator,a}_findSeparatorAround(e){if(this.thousandsSeparator){const t=e-this.thousandsSeparator.length+1,i=this.value.indexOf(this.thousandsSeparator,t);if(i<=e)return i}return-1}_adjustRangeWithSeparators(e,t){const i=this._findSeparatorAround(e);i>=0&&(e=i);const n=this._findSeparatorAround(t);return n>=0&&(t=n+this.thousandsSeparator.length),[e,t]}remove(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;[e,t]=this._adjustRangeWithSeparators(e,t);const i=this.value.slice(0,e),n=this.value.slice(t),a=this._separatorsCount(i.length);this._value=this._insertThousandsSeparators(this._removeThousandsSeparators(i+n));const r=this._separatorsCountFromSlice(i);return new h({tailShift:(r-a)*this.thousandsSeparator.length})}nearestInputPos(e,t){if(!this.thousandsSeparator)return e;switch(t){case c.NONE:case c.LEFT:case c.FORCE_LEFT:{const i=this._findSeparatorAround(e-1);if(i>=0){const n=i+this.thousandsSeparator.length;if(e<n||this.value.length<=n||t===c.FORCE_LEFT)return i}break}case c.RIGHT:case c.FORCE_RIGHT:{const i=this._findSeparatorAround(e);if(i>=0)return i+this.thousandsSeparator.length}}return e}doValidate(e){let t=!!this._removeThousandsSeparators(this.value).match(this._numberRegExp);if(t){const i=this.number;t=t&&!isNaN(i)&&(this.min==null||this.min>=0||this.min<=this.number)&&(this.max==null||this.max<=0||this.number<=this.max)}return t&&super.doValidate(e)}doCommit(){if(this.value){const e=this.number;let t=e;this.min!=null&&(t=Math.max(t,this.min)),this.max!=null&&(t=Math.min(t,this.max)),t!==e&&(this.unmaskedValue=this.doFormat(t));let i=this.value;this.normalizeZeros&&(i=this._normalizeZeros(i)),this.padFractionalZeros&&this.scale>0&&(i=this._padFractionalZeros(i)),this._value=i}super.doCommit()}_normalizeZeros(e){const t=this._removeThousandsSeparators(e).split(this.radix);return t[0]=t[0].replace(/^(\D*)(0*)(\d*)/,(i,n,a,r)=>n+r),e.length&&!/\d$/.test(t[0])&&(t[0]=t[0]+"0"),t.length>1&&(t[1]=t[1].replace(/0*$/,""),t[1].length||(t.length=1)),this._insertThousandsSeparators(t.join(this.radix))}_padFractionalZeros(e){if(!e)return e;const t=e.split(this.radix);return t.length<2&&t.push(""),t[1]=t[1].padEnd(this.scale,"0"),t.join(this.radix)}doSkipInvalid(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;const n=this.scale===0&&e!==this.thousandsSeparator&&(e===this.radix||e===C.UNMASKED_RADIX||this.mapToRadix.includes(e));return super.doSkipInvalid(e,t,i)&&!n}get unmaskedValue(){return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix,C.UNMASKED_RADIX)}set unmaskedValue(e){super.unmaskedValue=e}get typedValue(){return this.doParse(this.unmaskedValue)}set typedValue(e){this.rawInputValue=this.doFormat(e).replace(C.UNMASKED_RADIX,this.radix)}get number(){return this.typedValue}set number(e){this.typedValue=e}get allowNegative(){return this.signed||this.min!=null&&this.min<0||this.max!=null&&this.max<0}typedValueEquals(e){return(super.typedValueEquals(e)||C.EMPTY_VALUES.includes(e)&&C.EMPTY_VALUES.includes(this.typedValue))&&!(e===0&&this.value==="")}}C.UNMASKED_RADIX=".";C.DEFAULTS={radix:",",thousandsSeparator:"",mapToRadix:[C.UNMASKED_RADIX],scale:2,signed:!1,normalizeZeros:!0,padFractionalZeros:!1,parse:Number,format:o=>o.toLocaleString("en-US",{useGrouping:!1,maximumFractionDigits:20})};C.EMPTY_VALUES=[...x.EMPTY_VALUES,0];p.MaskedNumber=C;class Ft extends x{_update(e){e.mask&&(e.validate=e.mask),super._update(e)}}p.MaskedFunction=Ft;const Dt=["compiledMasks","currentMaskRef","currentMask"],Bt=["mask"];class Q extends x{constructor(e){super(Object.assign({},Q.DEFAULTS,e)),this.currentMask=null}_update(e){super._update(e),"mask"in e&&(this.compiledMasks=Array.isArray(e.mask)?e.mask.map(t=>M(t)):[])}_appendCharRaw(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=this._applyDispatch(e,t);return this.currentMask&&i.aggregate(this.currentMask._appendChar(e,this.currentMaskFlags(t))),i}_applyDispatch(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"";const n=t.tail&&t._beforeTailState!=null?t._beforeTailState._value:this.value,a=this.rawInputValue,r=t.tail&&t._beforeTailState!=null?t._beforeTailState._rawInputValue:a,l=a.slice(r.length),s=this.currentMask,d=new h,u=s==null?void 0:s.state;if(this.currentMask=this.doDispatch(e,Object.assign({},t),i),this.currentMask)if(this.currentMask!==s){if(this.currentMask.reset(),r){const y=this.currentMask.append(r,{raw:!0});d.tailShift=y.inserted.length-n.length}l&&(d.tailShift+=this.currentMask.append(l,{raw:!0,tail:!0}).tailShift)}else this.currentMask.state=u;return d}_appendPlaceholder(){const e=this._applyDispatch(...arguments);return this.currentMask&&e.aggregate(this.currentMask._appendPlaceholder()),e}_appendEager(){const e=this._applyDispatch(...arguments);return this.currentMask&&e.aggregate(this.currentMask._appendEager()),e}appendTail(e){const t=new h;return e&&t.aggregate(this._applyDispatch("",{},e)),t.aggregate(this.currentMask?this.currentMask.appendTail(e):super.appendTail(e))}currentMaskFlags(e){var t,i;return Object.assign({},e,{_beforeTailState:((t=e._beforeTailState)===null||t===void 0?void 0:t.currentMaskRef)===this.currentMask&&((i=e._beforeTailState)===null||i===void 0?void 0:i.currentMask)||e._beforeTailState})}doDispatch(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"";return this.dispatch(e,this,t,i)}doValidate(e){return super.doValidate(e)&&(!this.currentMask||this.currentMask.doValidate(this.currentMaskFlags(e)))}doPrepare(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},[i,n]=$(super.doPrepare(e,t));if(this.currentMask){let a;[i,a]=$(super.doPrepare(i,this.currentMaskFlags(t))),n=n.aggregate(a)}return[i,n]}reset(){var e;(e=this.currentMask)===null||e===void 0||e.reset(),this.compiledMasks.forEach(t=>t.reset())}get value(){return this.currentMask?this.currentMask.value:""}set value(e){super.value=e}get unmaskedValue(){return this.currentMask?this.currentMask.unmaskedValue:""}set unmaskedValue(e){super.unmaskedValue=e}get typedValue(){return this.currentMask?this.currentMask.typedValue:""}set typedValue(e){let t=String(e);this.currentMask&&(this.currentMask.typedValue=e,t=this.currentMask.unmaskedValue),this.unmaskedValue=t}get displayValue(){return this.currentMask?this.currentMask.displayValue:""}get isComplete(){var e;return!!(!((e=this.currentMask)===null||e===void 0)&&e.isComplete)}get isFilled(){var e;return!!(!((e=this.currentMask)===null||e===void 0)&&e.isFilled)}remove(){const e=new h;return this.currentMask&&e.aggregate(this.currentMask.remove(...arguments)).aggregate(this._applyDispatch()),e}get state(){var e;return Object.assign({},super.state,{_rawInputValue:this.rawInputValue,compiledMasks:this.compiledMasks.map(t=>t.state),currentMaskRef:this.currentMask,currentMask:(e=this.currentMask)===null||e===void 0?void 0:e.state})}set state(e){const{compiledMasks:t,currentMaskRef:i,currentMask:n}=e,a=N(e,Dt);this.compiledMasks.forEach((r,l)=>r.state=t[l]),i!=null&&(this.currentMask=i,this.currentMask.state=n),super.state=a}extractInput(){return this.currentMask?this.currentMask.extractInput(...arguments):""}extractTail(){return this.currentMask?this.currentMask.extractTail(...arguments):super.extractTail(...arguments)}doCommit(){this.currentMask&&this.currentMask.doCommit(),super.doCommit()}nearestInputPos(){return this.currentMask?this.currentMask.nearestInputPos(...arguments):super.nearestInputPos(...arguments)}get overwrite(){return this.currentMask?this.currentMask.overwrite:super.overwrite}set overwrite(e){console.warn('"overwrite" option is not available in dynamic mask, use this option in siblings')}get eager(){return this.currentMask?this.currentMask.eager:super.eager}set eager(e){console.warn('"eager" option is not available in dynamic mask, use this option in siblings')}get skipInvalid(){return this.currentMask?this.currentMask.skipInvalid:super.skipInvalid}set skipInvalid(e){(this.isInitialized||e!==x.DEFAULTS.skipInvalid)&&console.warn('"skipInvalid" option is not available in dynamic mask, use this option in siblings')}maskEquals(e){return Array.isArray(e)&&this.compiledMasks.every((t,i)=>{if(!e[i])return;const n=e[i],{mask:a}=n,r=N(n,Bt);return K(t,r)&&t.maskEquals(a)})}typedValueEquals(e){var t;return!!(!((t=this.currentMask)===null||t===void 0)&&t.typedValueEquals(e))}}Q.DEFAULTS={dispatch:(o,e,t,i)=>{if(!e.compiledMasks.length)return;const n=e.rawInputValue,a=e.compiledMasks.map((r,l)=>{const s=e.currentMask===r,d=s?r.value.length:r.nearestInputPos(r.value.length,c.FORCE_LEFT);return r.rawInputValue!==n?(r.reset(),r.append(n,{raw:!0})):s||r.remove(d),r.append(o,e.currentMaskFlags(t)),r.appendTail(i),{index:l,weight:r.rawInputValue.length,totalInputPositions:r.totalInputPositions(0,Math.max(d,r.nearestInputPos(r.value.length,c.FORCE_LEFT)))}});return a.sort((r,l)=>l.weight-r.weight||l.totalInputPositions-r.totalInputPositions),e.compiledMasks[a[0].index]}};p.MaskedDynamic=Q;const se={MASKED:"value",UNMASKED:"unmaskedValue",TYPED:"typedValue"};function Pe(o){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:se.MASKED,t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:se.MASKED;const i=M(o);return n=>i.runIsolated(a=>(a[e]=n,a[t]))}function It(o){for(var e=arguments.length,t=new Array(e>1?e-1:0),i=1;i<e;i++)t[i-1]=arguments[i];return Pe(...t)(o)}p.PIPE_TYPE=se;p.createPipe=Pe;p.pipe=It;try{globalThis.IMask=p}catch{}class Pt extends Z{constructor(e){super(e)}canLazyLoad(){return!!window.IntersectionObserver}observeVisibility(e){this._observer=new IntersectionObserver(t=>{t.some(i=>i.isIntersecting)&&(this.destroyVisibilityObserver(),e())},{rootMargin:`${g.numbers.LAZY_ROOT_MARGIN}px`}),this._observer.observe(this._component)}destroyVisibilityObserver(){this._observer&&(this._observer.disconnect(),this._observer=void 0)}setContent(e){const t=this._component.shadowRoot;t.querySelectorAll(":not(style)").forEach(i=>i.remove()),e&&(this._component.viewbox&&e.setAttribute("viewBox",this._component.viewbox),e.setAttribute("aria-hidden","true"),t.appendChild(e))}setViewBox(e){var i;const t=(i=this._component.shadowRoot)==null?void 0:i.querySelector("svg");t==null||t.setAttribute("viewBox",e)}}const ae=new Map;function re(o,e,t=!0){if(!o||!o.includes("svg"))return null;!e&&!o.includes("viewBox")&&(e=`0 0 ${g.numbers.DEFAULT_WIDTH} ${g.numbers.DEFAULT_HEIGHT}`);const i=ft(o,e);return t&&i&&i.setAttribute("part","svg"),i}function Lt(o){return A.get(o)}function Ot(o,e){A.awaitIcon(o,e)}function jt(o,e){A.removeListener(o,e)}function Mt(o,e){let t=ae.get(o);if(!t)if(typeof fetch<"u"&&typeof document<"u")t=fetch(o).then(async i=>{if(i.ok){const n=await i.text()||"";return A.define({name:e,data:n}),ae.delete(o),n}return A.define({name:e,data:""}),""}),ae.set(o,t);else return A.define({name:e,data:""}),Promise.resolve("");return t||Promise.resolve("")}function Rt(o){return["standard","extended","custom"].includes(o)?o:""}class Wt{constructor(e){this._adapter=e,this._lazy=!1,this._external=!1,this._externalType="standard",this._lazyListener=this._loadIcon.bind(this)}initialize(){this._applyIcon()}destroy(){this._adapter.destroyVisibilityObserver(),this._clearIconQueue(),this._tryRemoveListener()}_safeApplyIcon(){this._adapter.isConnected&&(this._clearIconQueue(),this._queueIconUpdate())}_tryRemoveListener(){this._registrationListener&&this._name&&jt(this._name,this._registrationListener)}_applyIcon(){this._lazy&&this._adapter.canLazyLoad()?this._adapter.observeVisibility(this._lazyListener):this._loadIcon()}_clearIconQueue(){this._applyTimer&&(clearTimeout(this._applyTimer),this._applyTimer=void 0)}_queueIconUpdate(){this._applyTimer=window.setTimeout(()=>{this._applyTimer=void 0,this._applyIcon()})}async _loadIcon(){try{if(this._src){const e=re(this._src,this._viewbox);this._setIconContent(e)}else if(this._name){const e=this._tryGetIcon(this._name);if(e!=null&&e.node){this._setIconContent(e.node);return}let t=null;if(e)e.raw&&(t=re(e.raw,this._viewbox));else{if(!this._external){this._registrationListener=()=>this._applyIcon(),Ot(this._name,this._registrationListener),this._adapter.setContent(null);return}this._externalType||(this._externalType="standard");const i=this._getExternalUrl(this._name,this._externalType);if(i){const n=await Mt(i,this._name);n&&(t=re(n,this._viewbox))}}t&&(e!=null&&e.node||A.setNode(this._name,t),this._setIconContent(t))}else this._adapter.setContent(null)}catch(e){throw this._adapter.setContent(null),e}}_setIconContent(e){const t=e?e.cloneNode(!0):null;t&&this._adapter.setContent(t)}_tryGetIcon(e){return Lt(e)}_getExternalUrl(e,t){if(typeof this._externalUrlBuilder=="function")return this._externalUrlBuilder(e,t);const i=Rt(this._externalType);return`${g.strings.DEFAULT_NETWORK_BASE_URL}${i?`/${i}`:""}/${e}.svg`}get name(){return this._name}set name(e){this._name!==e&&(this._registrationListener&&this._tryRemoveListener(),this._name=(e||"").replace(/\s+/,""),this._safeApplyIcon(),this._adapter.toggleHostAttribute(g.attributes.NAME,!!this._name,this._name))}get src(){return this._src}set src(e){this._src!==e&&(this._src=e,this._adapter.isConnected&&this._applyIcon())}get lazy(){return this._lazy}set lazy(e){this._lazy!==e&&(this._lazy=e,this._safeApplyIcon(),this._adapter.setHostAttribute(g.attributes.LAZY,`${this._lazy}`))}get external(){return this._external}set external(e){this._external!==e&&(this._external=e,this._safeApplyIcon(),this._adapter.toggleHostAttribute(g.attributes.EXTERNAL,this._external))}get externalType(){return this._externalType}set externalType(e){this._externalType!==e&&(this._externalType=e,this._safeApplyIcon(),this._adapter.setHostAttribute(g.attributes.EXTERNAL_TYPE,`${this._externalType}`))}get externalUrlBuilder(){return this._externalUrlBuilder}set externalUrlBuilder(e){this._externalUrlBuilder!==e&&(this._externalUrlBuilder=e,this._safeApplyIcon())}get viewbox(){return this._viewbox}set viewbox(e){this._viewbox!==e&&(this._viewbox=e,this._adapter.setViewBox(this._viewbox),this._adapter.setHostAttribute(g.attributes.VIEWBOX,`${this.viewbox}`))}get theme(){return this._theme}set theme(e){this._theme!==e&&(this._theme=e,this._adapter.setHostAttribute(g.attributes.THEME,this._theme))}layout(){this._adapter.isConnected&&this._applyIcon()}}const Nt="<template></template>",zt=":host{--_icon-color: var(--forge-icon-color, currentColor);--_icon-size: var(--forge-icon-size, 1em);--_icon-width: var(--forge-icon-width, var(--_icon-size));--_icon-height: var(--forge-icon-height, var(--_icon-size));--_icon-font-size: var(--forge-icon-font-size, calc(var(--forge-typography-font-size, 1rem) * 1.5))}:host{display:inline-block;box-sizing:content-box;contain:content;font-size:var(--_icon-font-size)}:host([hidden]){display:none}svg{display:block;width:var(--_icon-width);height:var(--_icon-height);fill:var(--_icon-color);stroke:var(--_icon-color);stroke-width:0}:host([theme=primary]){--_icon-color: var(--forge-icon-color, var(--forge-theme-primary, #3f51b5))}:host([theme=secondary]){--_icon-color: var(--forge-icon-color, var(--forge-theme-secondary, #ffc107))}:host([theme=tertiary]){--_icon-color: var(--forge-icon-color, var(--forge-theme-tertiary, #3d5afe))}:host([theme=success]){--_icon-color: var(--forge-icon-color, var(--forge-theme-success, #2e7d32))}:host([theme=error]){--_icon-color: var(--forge-icon-color, var(--forge-theme-error, #b00020))}:host([theme=warning]){--_icon-color: var(--forge-icon-color, var(--forge-theme-warning, #d14900))}:host([theme=text-medium]){--_icon-color: var(--forge-icon-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)))}:host([theme=text-low]){--_icon-color: var(--forge-icon-color, var(--forge-theme-text-low, rgba(0, 0, 0, .38)))}";var Vt=Object.defineProperty,Gt=Object.getOwnPropertyDescriptor,P=(o,e,t,i)=>{for(var n=i>1?void 0:i?Gt(e,t):e,a=o.length-1,r;a>=0;a--)(r=o[a])&&(n=(i?r(e,t,n):r(n))||n);return i&&n&&Vt(e,t,n),n};let S=class extends J{static get observedAttributes(){return Object.values(g.observedAttributes)}constructor(){super(),le(this,Nt,zt),this._foundation=new Wt(new Pt(this))}connectedCallback(){this._foundation.initialize()}disconnectedCallback(){this._foundation.destroy()}attributeChangedCallback(o,e,t){switch(o){case g.observedAttributes.NAME:this.name=t;break;case g.observedAttributes.SRC:this.src=t;break;case g.observedAttributes.LAZY:this.lazy=E(t);break;case g.observedAttributes.EXTERNAL:this.external=E(t);break;case g.observedAttributes.EXTERNAL_TYPE:this.externalType=t;break;case g.observedAttributes.VIEWBOX:this.viewbox=t;break;case g.observedAttributes.THEME:this.theme=t;break}}layout(){this._foundation.layout()}};P([f()],S.prototype,"name",2);P([f()],S.prototype,"src",2);P([f()],S.prototype,"lazy",2);P([f()],S.prototype,"external",2);P([f()],S.prototype,"externalType",2);P([f()],S.prototype,"externalUrlBuilder",2);P([f()],S.prototype,"viewbox",2);P([f()],S.prototype,"theme",2);S=P([de({name:g.elementName})],S);const Le={TYPE:"type",DISABLED:"disabled",POPOVER_ICON:"popover-icon",DENSE:"dense",TABINDEX:"tabindex"},Ht={...Le},Ut={ROOT:"forge-button",POPOVER_ICON:"forge-button__popover-icon",WITH_ANCHOR:"with-anchor"},$t={ROOT:"[part=root]",DEFAULT_SLOT:"slot:not([name])",END_SLOT:"slot[name=end]"},k={observedAttributes:Le,attributes:Ht,selectors:$t,classes:Ut};function qt(o){class e extends o{}return e}function Yt(o){class e extends o{constructor(...i){super(...i),this[X]=this.attachInternals()}}return e}/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 * 
 * Adapted and influenced from [Material Web](https://github.com/material-components/material-web).
 * The original source code can be found at: [GitHub](https://github.com/material-components/material-web/blob/main/internal/aria/aria.ts)
 */function Kt(o){return o.replace("aria","aria-").replace(/Elements?/g,"").toLowerCase()}function Xt(o,e,t,{setAttribute:i}={setAttribute:!0}){Object.entries(t).forEach(([n,a])=>{rt()&&(e[n]=a);const r=Kt(n);(i||!o.hasAttribute(r))&&Te(o,a!=null,r,a)})}function Zt(o){class e extends o{[U](i,n){Xt(this,this[X],i,n)}}return e}var Jt=Object.defineProperty,ee=(o,e,t,i)=>{for(var n=void 0,a=o.length-1,r;a>=0;a--)(r=o[a])&&(n=r(e,t,n)||n);return n&&Jt(e,t,n),n};const he=class he extends Zt(Yt(qt(J))){constructor(){super(),this.popoverTargetElement=null,this.popoverTargetAction="click",A.define(xe)}static get observedAttributes(){return Object.values(k.observedAttributes)}connectedCallback(){this._foundation.initialize()}attributeChangedCallback(e,t,i){switch(e){case k.observedAttributes.TYPE:this.type=i;return;case k.observedAttributes.DISABLED:this.disabled=E(i);return;case k.observedAttributes.POPOVER_ICON:this.popoverIcon=E(i);return;case k.observedAttributes.DENSE:this.dense=E(i);return}}labelClickedCallback(){this._foundation.click({animateStateLayer:!0})}labelChangedCallback(e){this[U]({ariaLabel:e},{setAttribute:!this.hasAttribute("aria-label")})}get form(){return this[X].form}get name(){return this.getAttribute("name")??""}set name(e){this.setAttribute("name",e)}get value(){return this.getAttribute("value")??""}set value(e){this.setAttribute("value",e)}click(){this._foundation.click({animateStateLayer:!0})}focus(e){this._foundation.focus(e)}};he.formAssociated=!0;let V=he;ee([f()],V.prototype,"type");ee([f()],V.prototype,"disabled");ee([f()],V.prototype,"popoverIcon");ee([f()],V.prototype,"dense");class Qt extends Z{constructor(e){super(e),this._targetElement=null}destroy(){this._targetElement=null}hasTargetElement(){return!!this._targetElement}addTargetListener(e,t){var i;(i=this._targetElement)==null||i.addEventListener(e,t)}removeTargetListener(e,t){var i;(i=this._targetElement)==null||i.removeEventListener(e,t)}getTargetElement(){return this._targetElement}setTargetElement(e){this._targetElement=e}trySetTarget(e){this._targetElement=Se(this._component,e)}isActive(e,t){const i=t??this._targetElement;return!!(i!=null&&i.matches(e))}}const ei=`${ce}focus-indicator`,ti={TARGET:"target",ACTIVE:"active",INWARD:"inward",CIRCULAR:"circular",ALLOW_FOCUS:"allow-focus",FOCUS_MODE:"focus-mode"},ii={...ti},ni={FOCUS_MODE:"focusin"},b={elementName:ei,attributes:ii,defaults:ni};class oi{constructor(e){this._adapter=e,this._target=null,this._active=!1,this._inward=!1,this._circular=!1,this._allowFocus=!1,this._focusMode=b.defaults.FOCUS_MODE,this._interactionListener=t=>this._onInteraction(t)}initialize(){this._adapter.hasTargetElement()||this._adapter.trySetTarget(this._target),this._addListeners()}destroy(){this._removeListeners(),this._adapter.destroy()}_addListeners(){this._adapter.addTargetListener(this._focusMode,this._interactionListener),this._adapter.addTargetListener("focusout",this._interactionListener),this._adapter.addTargetListener("pointerdown",this._interactionListener)}_removeListeners(){this._adapter.removeTargetListener(this._focusMode,this._interactionListener),this._adapter.removeTargetListener("focusout",this._interactionListener),this._adapter.removeTargetListener("pointerdown",this._interactionListener)}_onInteraction(e){const t=e.target;switch(e.type){case this._focusMode:this.active=this._adapter.isActive(this._allowFocus?":focus":":focus-visible",t);break;case"focusout":this.active=!1;break;case"pointerdown":this.active=this._allowFocus?this._adapter.isActive(":focus",t):this._adapter.isActive(":focus-visible",t);break}}get targetElement(){return this._adapter.getTargetElement()}set targetElement(e){this._removeListeners(),this._adapter.setTargetElement(e),this._addListeners()}get target(){return this._adapter.getHostAttribute(b.attributes.TARGET)}set target(e){this._target!==e&&(this._target=e,this._adapter.isConnected&&this._adapter.trySetTarget(e),this._adapter.toggleHostAttribute(b.attributes.TARGET,!!this._target,this._target))}get active(){return this._active}set active(e){e=!!e,this._active!==e&&(this._active=e,this._adapter.toggleHostAttribute(b.attributes.ACTIVE,this._active))}get inward(){return this._inward}set inward(e){e=!!e,this._inward!==e&&(this._inward=e,this._adapter.toggleHostAttribute(b.attributes.INWARD,this._inward))}get circular(){return this._circular}set circular(e){e=!!e,this._circular!==e&&(this._circular=e,this._adapter.toggleHostAttribute(b.attributes.CIRCULAR,this._circular))}get allowFocus(){return this._allowFocus}set allowFocus(e){e=!!e,this._allowFocus!==e&&(this._allowFocus=e,this._adapter.toggleHostAttribute(b.attributes.ALLOW_FOCUS,this._allowFocus))}get focusMode(){return this._focusMode}set focusMode(e){if(e??(e=b.defaults.FOCUS_MODE),this._focusMode!==e){this._adapter.isConnected&&this._removeListeners(),this._focusMode=e,this._adapter.isConnected&&this._addListeners();const t=this._focusMode!==b.defaults.FOCUS_MODE;this._adapter.toggleHostAttribute(b.attributes.FOCUS_MODE,t,this._focusMode)}}}const ai=`<template></template>
`,ri=":host{--_focus-indicator-display: var(--forge-focus-indicator-display, flex);--_focus-indicator-width: var(--forge-focus-indicator-width, var(--forge-border-medium, 2px));--_focus-indicator-active-width: var(--forge-focus-indicator-active-width, 6px);--_focus-indicator-color: var(--forge-focus-indicator-color, var(--forge-theme-primary, #3f51b5));--_focus-indicator-shape: var(--forge-focus-indicator-shape, var(--forge-shape-extra-small, 1px));--_focus-indicator-duration: var(--forge-focus-indicator-duration, var(--forge-animation-duration-long4, .6s));--_focus-indicator-easing: var(--forge-focus-indicator-easing, var(--forge-animation-easing-emphasized, cubic-bezier(.2, 0, 0, 1)));--_focus-indicator-shape-start-start: var(--forge-focus-indicator-shape-start-start, var(--_focus-indicator-shape));--_focus-indicator-shape-start-end: var(--forge-focus-indicator-shape-start-end, var(--_focus-indicator-shape));--_focus-indicator-shape-end-end: var(--forge-focus-indicator-shape-end-end, var(--_focus-indicator-shape));--_focus-indicator-shape-end-start: var(--forge-focus-indicator-shape-end-start, var(--_focus-indicator-shape));--_focus-indicator-outward-offset: var(--forge-focus-indicator-outward-offset, var(--forge-spacing-xxsmall, 4px));--_focus-indicator-inward-offset: var(--forge-focus-indicator-inward-offset, 0px);--_focus-indicator-offset-block: var(--forge-focus-indicator-offset-block, 0);--_focus-indicator-offset-inline: var(--forge-focus-indicator-offset-inline, 0)}:host{animation-delay:0s,calc(var(--_focus-indicator-duration) * .25);animation-duration:calc(var(--_focus-indicator-duration) * .25),calc(var(--_focus-indicator-duration) * .75);animation-timing-function:var(--_focus-indicator-easing);box-sizing:border-box;color:var(--_focus-indicator-color);display:none;pointer-events:none;position:absolute;margin-block:var(--_focus-indicator-offset-block);margin-inline:var(--_focus-indicator-offset-inline)}:host([hidden]){display:none}:host([active]){display:var(--_focus-indicator-display)}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--_focus-indicator-shape-end-end) + var(--_focus-indicator-outward-offset));border-end-start-radius:calc(var(--_focus-indicator-shape-end-start) + var(--_focus-indicator-outward-offset));border-start-end-radius:calc(var(--_focus-indicator-shape-start-end) + var(--_focus-indicator-outward-offset));border-start-start-radius:calc(var(--_focus-indicator-shape-start-start) + var(--_focus-indicator-outward-offset));inset:calc(-1 * var(--_focus-indicator-outward-offset));outline:var(--_focus-indicator-width) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--_focus-indicator-shape-end-end) - var(--_focus-indicator-inward-offset));border-end-start-radius:calc(var(--_focus-indicator-shape-end-start) - var(--_focus-indicator-inward-offset));border-start-end-radius:calc(var(--_focus-indicator-shape-start-end) - var(--_focus-indicator-inward-offset));border-start-start-radius:calc(var(--_focus-indicator-shape-start-start) - var(--_focus-indicator-inward-offset));border:var(--_focus-indicator-width) solid currentColor;inset:var(--_focus-indicator-inward-offset)}:host([circular]){--_focus-indicator-shape: var(--forge-focus-indicator-shape, 50%)}@keyframes outward-grow{0%{outline-width:0}to{outline-width:var(--_focus-indicator-active-width)}}@keyframes outward-shrink{0%{outline-width:var(--_focus-indicator-active-width)}}@keyframes inward-grow{0%{border-width:0}to{border-width:var(--_focus-indicator-active-width)}}@keyframes inward-shrink{0%{border-width:var(--_focus-indicator-active-width)}}@media (prefers-reduced-motion){:host{animation:none}}";var si=Object.defineProperty,li=Object.getOwnPropertyDescriptor,O=(o,e,t,i)=>{for(var n=i>1?void 0:i?li(e,t):e,a=o.length-1,r;a>=0;a--)(r=o[a])&&(n=(i?r(e,t,n):r(n))||n);return i&&n&&si(e,t,n),n};let I=class extends J{static get observedAttributes(){return Object.values(b.attributes)}constructor(){super(),le(this,ai,ri),this._foundation=new oi(new Qt(this))}connectedCallback(){this._foundation.initialize()}disconnectedCallback(){this._foundation.destroy()}attributeChangedCallback(o,e,t){switch(o){case b.attributes.TARGET:this.target=t;break;case b.attributes.ACTIVE:this.active=E(t);break;case b.attributes.INWARD:this.inward=E(t);break;case b.attributes.CIRCULAR:this.circular=E(t);break;case b.attributes.ALLOW_FOCUS:this.allowFocus=E(t);break;case b.attributes.FOCUS_MODE:this.focusMode=t;break}}};O([f()],I.prototype,"targetElement",2);O([f()],I.prototype,"target",2);O([f()],I.prototype,"active",2);O([f()],I.prototype,"inward",2);O([f()],I.prototype,"circular",2);O([f()],I.prototype,"allowFocus",2);O([f()],I.prototype,"focusMode",2);I=O([de({name:b.elementName})],I);const di=`${ce}state-layer`,ci={TARGET:"target",DISABLED:"disabled"},pi={...ci},hi={SURFACE:".forge-state-layer"},mi={HOVERED:"forge-state-layer--hovered",PRESSED:"forge-state-layer--pressed"},_={elementName:di,attributes:pi,selectors:hi,classes:mi};class te{constructor(e,t){this.x=e,this.y=t}static fromPointerEvent(e){return new te(e.pageX,e.pageY)}}const ui=150,fi=450,ke=225,bi=.2,gi=10,yi=75,vi=.35,ki="::after",xi="forwards",wi="cubic-bezier(0.2, 0, 0, 1)";var v=(o=>(o[o.INACTIVE=0]="INACTIVE",o[o.TOUCH_DELAY=1]="TOUCH_DELAY",o[o.HOLDING=2]="HOLDING",o[o.WAITING_FOR_CLICK=3]="WAITING_FOR_CLICK",o))(v||{});function Ti(o){const{height:e,width:t}=o.getBoundingClientRect(),i=Math.max(e,t),n=Math.max(vi*i,yi),a=Math.floor(i*bi),s=`${(Math.sqrt(t**2+e**2)+gi+n)/a}`,d=`${a}px`;return{rippleScale:s,rippleSize:d,initialSize:a}}function Ci(o,e,t){const{height:i,width:n}=o.getBoundingClientRect(),a={x:(n-e)/2,y:(i-e)/2};let r;return Ai(t)?r=_i(o,t):r={x:n/2,y:i/2},r={x:r.x-e/2,y:r.y-e/2},{startPoint:r,endPoint:a}}function _i(o,e){const{scrollX:t,scrollY:i}=window,{left:n,top:a}=o.getBoundingClientRect(),r=t+n,l=i+a,{x:s,y:d}=e;return{x:s-r,y:d-l}}function Ei(o,e,t){const{height:i,width:n}=o.getBoundingClientRect();return e>=0&&e<=n&&t>=0&&t<=i}function Ai(o){return o&&(o instanceof te||["x","y"].every(e=>e in o))}class Si extends Z{constructor(e){super(e),this._targetElement=null,this._surfaceElement=R(e,_.selectors.SURFACE)}destroy(){typeof this._destroyDeferListener=="function"&&(this._destroyDeferListener(),this._destroyDeferListener=void 0),this._targetElement=null}async deferInitialization(e){if(!this._targetElement)return;const{userInteraction:t,destroy:i}=bt(this._targetElement);this._destroyDeferListener=i;const n=await t;e(n.type==="pointerenter"?n:void 0)}addTargetListener(e,t){var i;(i=this._targetElement)==null||i.addEventListener(e,t)}removeTargetListener(e,t){var i;(i=this._targetElement)==null||i.removeEventListener(e,t)}setHovered(e){this._surfaceElement.classList.toggle(_.classes.HOVERED,e)}setPressed(e){this._surfaceElement.classList.toggle(_.classes.PRESSED,e)}getTargetElement(){return this._targetElement}setTargetElement(e){this._targetElement=e}trySetTarget(e){this._targetElement=Se(this._component,e)}startAnimation(e){var d;if(!this._surfaceElement)return;this.setPressed(!0),(d=this._rippleAnimation)==null||d.cancel();const{rippleSize:t,rippleScale:i,initialSize:n}=Ti(this._component);if(i==="Infinity")return;const{startPoint:a,endPoint:r}=Ci(this._component,n,e),l=`${a.x}px, ${a.y}px`,s=`${r.x}px, ${r.y}px`;this._rippleAnimation=this._surfaceElement.animate({top:[0,0],left:[0,0],height:[t,t],width:[t,t],transform:[`translate(${l}) scale(1)`,`translate(${s}) scale(${i})`]},{pseudoElement:ki,duration:fi,easing:wi,fill:xi})}async endAnimation(){const e=this._rippleAnimation,t=(e==null?void 0:e.currentTime)??1/0;if(t>=ke){this.setPressed(!1);return}await new Promise(i=>{setTimeout(i,ke-t)}),this._rippleAnimation===e&&this.setPressed(!1)}inBounds(e,t){return Ei(this._component,e,t)}}class Fi{constructor(e){this._adapter=e,this._target=null,this._disabled=!1,this._attached=!1,this._deferred=!0,this._pointerState=v.INACTIVE,this._checkBoundsAfterContextMenu=!1,this._pointerEnterListener=t=>this._onPointerEnter(t),this._pointerLeaveListener=t=>this._onPointerLeave(t),this._pointerDownListener=t=>this._onPointerDown(t),this._pointerUpListener=t=>this._onPointerUp(t),this._pointerCancelListener=t=>this._onPointerCancel(t),this._clickListener=()=>this._onClick(),this._contextmenuListener=()=>this._onContextmenu()}initialize(){this._adapter.trySetTarget(this._target),this._adapter.addTargetListener("click",this._clickListener),this._deferInitialization()}disconnect(){this._pointerStartEvent=void 0,this._pointerState=v.INACTIVE,this._adapter.setHovered(!1),this._adapter.setPressed(!1),this._removeListeners(),this._adapter.destroy()}playAnimation(e){this._adapter.startAnimation(e),this._endAnimation()}_deferInitialization(){this._adapter.deferInitialization(this._onDeferredInitialize.bind(this))}_applyListeners(){this._disabled||(this._adapter.addTargetListener("pointerenter",this._pointerEnterListener),this._adapter.addTargetListener("pointerleave",this._pointerLeaveListener),this._adapter.addTargetListener("pointerdown",this._pointerDownListener),this._adapter.addTargetListener("pointerup",this._pointerUpListener),this._adapter.addTargetListener("pointercancel",this._pointerCancelListener),this._adapter.addTargetListener("contextmenu",this._contextmenuListener),this._attached=!0)}_removeListeners(){this._adapter.removeTargetListener("pointerenter",this._pointerEnterListener),this._adapter.removeTargetListener("pointerleave",this._pointerLeaveListener),this._adapter.removeTargetListener("pointerdown",this._pointerDownListener),this._adapter.removeTargetListener("pointerup",this._pointerUpListener),this._adapter.removeTargetListener("pointercancel",this._pointerCancelListener),this._adapter.removeTargetListener("click",this._clickListener),this._adapter.removeTargetListener("contextmenu",this._contextmenuListener),this._attached=!1}_onDeferredInitialize(e){this._adapter.isConnected&&(this._applyListeners(),(e==null?void 0:e.type)==="pointerenter"&&this._pointerEnterListener(e),this._deferred=!1)}_onPointerEnter(e){this._canHandleEvent(e)&&this._adapter.setHovered(!0)}_onPointerLeave(e){this._canHandleEvent(e)&&(this._adapter.setHovered(!1),this._pointerState!==v.INACTIVE&&this._adapter.endAnimation())}async _onPointerDown(e){if(this._pointerStartEvent=e,!!this._canHandleEvent(e)){if(!this._isTouch(e.pointerType)){this._pointerState=v.WAITING_FOR_CLICK,this._startAnimation(e);return}this._checkBoundsAfterContextMenu&&!this._adapter.inBounds(e.x,e.y)||(this._checkBoundsAfterContextMenu=!1,this._pointerState=v.TOUCH_DELAY,await new Promise(t=>setTimeout(t,ui)),this._pointerState===v.TOUCH_DELAY&&(this._pointerState=v.HOLDING,this._startAnimation(e)))}}_onPointerUp(e){if(this._canHandleEvent(e)){if(this._pointerState===v.HOLDING){this._pointerState=v.WAITING_FOR_CLICK;return}if(this._pointerState===v.TOUCH_DELAY){this._pointerState=v.WAITING_FOR_CLICK,this._startAnimation(this._pointerStartEvent);return}}}_onClick(){if(!this._disabled){if(this._pointerState===v.WAITING_FOR_CLICK){this._endAnimation();return}this._pointerState===v.INACTIVE&&(this._startAnimation(this._pointerStartEvent),this._endAnimation())}}_onPointerCancel(e){this._canHandleEvent(e)&&this._endAnimation()}_onContextmenu(){this._disabled||(this._checkBoundsAfterContextMenu=!0,this._adapter.endAnimation())}_startAnimation(e){const t=e?te.fromPointerEvent(e):void 0;this._adapter.startAnimation(t)}_endAnimation(){this._pointerState=v.INACTIVE,this._adapter.endAnimation(),this._pointerStartEvent=void 0}_canHandleEvent({type:e,isPrimary:t,buttons:i,pointerType:n,pointerId:a}){if(this._disabled||!t||this._pointerStartEvent&&this._pointerStartEvent.pointerId!==a)return!1;if(e==="pointerenter"||e==="pointerleave")return!this._isTouch(n);const r=i===1;return this._isTouch(n)||r}_isTouch(e){return e==="touch"}get isAttached(){return this._attached}get targetElement(){return this._adapter.getTargetElement()}set targetElement(e){this._removeListeners(),this._attached||(this._adapter.destroy(),this._deferred=!1),this._adapter.setTargetElement(e),this._adapter.addTargetListener("click",this._clickListener),this._deferred||this._deferInitialization()}get target(){return this._adapter.getHostAttribute(_.attributes.TARGET)}set target(e){this._target!==e&&(this._target=e,this._adapter.isConnected&&(this._removeListeners(),this._attached||(this._adapter.destroy(),this._deferred=!1),this._adapter.trySetTarget(e),this._adapter.addTargetListener("click",this._clickListener),this._deferred||this._deferInitialization()),this._adapter.toggleHostAttribute(_.attributes.TARGET,!!this._target,this._target))}get disabled(){return this._disabled}set disabled(e){e=!!e,this._disabled!==e&&(this._disabled=e,this._adapter.isConnected&&(this._disabled?this._removeListeners():this._deferred||this._deferInitialization()),this._adapter.toggleHostAttribute(_.attributes.DISABLED,this._disabled))}}const Di=`<template>
  <div class="forge-state-layer" part="surface"></div>
</template>`,Bi=':host{--_state-layer-display: var(--forge-state-layer-display, flex)}:host{border-radius:inherit;position:absolute;top:0;right:0;bottom:0;left:0;overflow:hidden;display:var(--_state-layer-display);margin:auto;pointer-events:none;-webkit-tap-highlight-color:transparent}:host([hidden]){display:none}:host([disabled]){display:none}.forge-state-layer{--_state-layer-color: var(--forge-state-layer-color, var(--forge-theme-on-surface, #000000));--_state-layer-hover-color: var(--forge-state-layer-hover-color, var(--_state-layer-color));--_state-layer-hover-opacity: var(--forge-state-layer-hover-opacity, .08);--_state-layer-pressed-color: var(--forge-state-layer-pressed-color, var(--_state-layer-color));--_state-layer-pressed-opacity: var(--forge-state-layer-pressed-opacity, .12);--_state-layer-hover-duration: var(--forge-state-layer-hover-duration, 15ms);--_state-layer-pressed-duration: var(--forge-state-layer-pressed-duration, 105ms);--_state-layer-animation-duration: var(--forge-state-layer-animation-duration, 375ms)}.forge-state-layer:before,.forge-state-layer:after{content:"";opacity:0;position:absolute}.forge-state-layer:before{background-color:var(--_state-layer-hover-color);top:0;right:0;bottom:0;left:0;transition:opacity var(--_state-layer-hover-duration) linear,background-color var(--_state-layer-hover-duration) linear}.forge-state-layer:after{background:radial-gradient(closest-side,var(--_state-layer-pressed-color) max(100% - 70px,65%),transparent 100%);transform-origin:center center;transition:opacity var(--_state-layer-animation-duration) linear}.forge-state-layer--hovered:before{background-color:var(--_state-layer-hover-color);opacity:var(--_state-layer-hover-opacity)}.forge-state-layer--pressed:after{opacity:var(--_state-layer-pressed-opacity);transition-duration:var(--_state-layer-pressed-duration)}@media screen and (forced-colors: active){:host{display:none}}';var Ii=Object.defineProperty,Pi=Object.getOwnPropertyDescriptor,ie=(o,e,t,i)=>{for(var n=i>1?void 0:i?Pi(e,t):e,a=o.length-1,r;a>=0;a--)(r=o[a])&&(n=(i?r(e,t,n):r(n))||n);return i&&n&&Ii(e,t,n),n};let q=class extends J{static get observedAttributes(){return[_.attributes.TARGET,_.attributes.DISABLED]}constructor(){super(),le(this,Di,Bi),this._foundation=new Fi(new Si(this))}connectedCallback(){this._foundation.initialize()}disconnectedCallback(){this._foundation.disconnect()}attributeChangedCallback(o,e,t){switch(o){case _.attributes.TARGET:this.target=t;break;case _.attributes.DISABLED:this.disabled=E(t);break}}playAnimation(o){this._foundation.playAnimation(o)}};ie([f()],q.prototype,"targetElement",2);ie([f()],q.prototype,"target",2);ie([f()],q.prototype,"disabled",2);q=ie([de({name:_.elementName})],q);class Yi{constructor(e){this._adapter=e,this._type="button",this._disabled=!1,this._popoverIcon=!1,this._dense=!1,this._clickListener=this._onClick.bind(this),this._keydownListener=this._onKeydown.bind(this),this._slotChangeListener=()=>this._detectSlottedAnchor()}initialize(){this._detectSlottedAnchor(),this._adapter.addDefaultSlotChangeListener(this._slotChangeListener)}click({animateStateLayer:e=!1}={}){this._disabled||(this._adapter.clickHost(),e&&this._adapter.animateStateLayer())}focus(e){this._adapter.focusHost(e),(e==null?void 0:e.focusVisible)!==!1&&this._adapter.forceFocusVisible()}async _onClick(e){const t=this._type==="submit"||this._type==="reset";!t&&this._adapter.hasPopoverTarget()&&this._adapter.managePopover()||(await new Promise(i=>setTimeout(i)),!(e.defaultPrevented||this._disabled)&&t&&this._adapter.clickFormButton(this._type))}async _onKeydown(e){if(e.key===" "){e.preventDefault(),this.click();return}await ht(),!(e.defaultPrevented||this._disabled)&&e.key==="Enter"&&this.click()}_detectSlottedAnchor(){this._adapter.hasSlottedAnchor?(this.disabled=!1,this._adapter.removeHostListener("click",this._clickListener),this._adapter.removeHostListener("keydown",this._keydownListener)):(this._adapter.addHostListener("click",this._clickListener),this._adapter.addHostListener("keydown",this._keydownListener)),this._adapter.initialize()}get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this._adapter.setHostAttribute(k.attributes.TYPE,e))}get disabled(){return this._disabled}set disabled(e){e=!!e,this._disabled!==e&&(this._adapter.hasSlottedAnchor&&(e=!1),this._disabled=e,this._adapter.setDisabled(this._disabled),this._adapter.toggleHostAttribute(k.attributes.DISABLED,e))}get popoverIcon(){return this._popoverIcon}set popoverIcon(e){e=!!e,this._popoverIcon!==e&&(this._popoverIcon=e,this._adapter.toggleDefaultPopoverIcon(this._popoverIcon),this._adapter.toggleHostAttribute(k.attributes.POPOVER_ICON,e))}get dense(){return this._dense}set dense(e){e=!!e,this._dense!==e&&(this._dense=e,this._adapter.toggleHostAttribute(k.attributes.DENSE,e))}}class Ki extends Z{constructor(e){super(e),this._rootElement=R(this._component,k.selectors.ROOT),this._focusIndicatorElement=R(this._component,b.elementName),this._stateLayerElement=R(this._component,_.elementName),this._defaultSlotElement=R(this._component,k.selectors.DEFAULT_SLOT),this._endSlotElement=R(this._component,k.selectors.END_SLOT)}get hasSlottedAnchor(){return!!this.getSlottedAnchor}get getSlottedAnchor(){return this._defaultSlotElement.assignedElements({flatten:!0}).find(e=>e.tagName==="A")}initialize(){const e=this.getSlottedAnchor;this._component[U]({role:e?null:"button"},{setAttribute:!this._component.hasAttribute("role")||!!e}),this._rootElement.classList.toggle(k.classes.WITH_ANCHOR,!!e),e?this._component.removeAttribute("tabindex"):!this._component.disabled&&!this._component.hasAttribute("tabindex")&&this._component.setAttribute("tabindex","0"),this._focusIndicatorElement.targetElement=e||this._component,this._stateLayerElement.targetElement=e||this._component}setDisabled(e){e?(this._focusIndicatorElement.remove(),this._stateLayerElement.remove()):this._rootElement.append(this._focusIndicatorElement,this._stateLayerElement),this.hasSlottedAnchor?(this._component.removeAttribute("tabindex"),this._component[U]({ariaDisabled:null},{setAttribute:!0})):(e?this._component.removeAttribute("tabindex"):this._component.setAttribute("tabindex","0"),this._component[U]({ariaDisabled:e?"true":null}))}clickHost(){HTMLElement.prototype.click.call(this._component)}forceFocusVisible(){this._focusIndicatorElement.active=!0}clickFormButton(e){var t;if(this._component.form)if(e==="submit"){this._component[X].setFormValue(this._component.value);const i=document.createElement("button");i.type=e,ut(this._component,i,mt),this._component.form.addEventListener("submit",n=>{Object.defineProperty(n,"submitter",{configurable:!0,enumerable:!0,get:()=>this._component})},{capture:!0,once:!0}),this._component.insertAdjacentElement("afterend",i),i.click(),i.remove()}else e==="reset"&&((t=this._component.form)==null||t.reset())}hasPopoverTarget(){return this._component.hasAttribute("popovertarget")||!!this._component.popoverTargetElement}managePopover(){if(this._component.form||!this.hasPopoverTarget()||!at())return!1;const e=this._locatePopoverTargetElement();if(!e)return!1;const t=this._component.getAttribute("popovertargetaction")??this._component.popoverTargetAction??"toggle",i=e.matches(":popover-open");switch(t){case"show":return i||e.showPopover(),!0;case"hide":return i&&e.hidePopover(),!1;case"toggle":default:const n=e.togglePopover();if(n&&e.popover!=="manual"){const a=r=>{r.stopPropagation(),e.matches(":popover-open")&&e.hidePopover()};this._component.addEventListener("click",a,{capture:!0,once:!0}),e.addEventListener("beforetoggle",async()=>{await new Promise(r=>setTimeout(r)),this._component.removeEventListener("click",a,{capture:!0})},{once:!0})}return n}}toggleDefaultPopoverIcon(e){if(e){if(!this._endSlotElement.querySelector("forge-icon")){const i=document.createElement("forge-icon");i.classList.add(k.classes.POPOVER_ICON),i.name=xe.name,this._endSlotElement.append(i)}}else{const t=this._endSlotElement.querySelector("forge-icon");t==null||t.remove()}}animateStateLayer(){var e;this._stateLayerElement.disabled||(e=this._stateLayerElement)==null||e.playAnimation()}addDefaultSlotChangeListener(e){this._defaultSlotElement.addEventListener("slotchange",e)}_locatePopoverTargetElement(){let e=this._component.popoverTargetElement??null;if(!e){const t=this._component.ownerDocument.getRootNode();if(!t)return null;const i=this._component.getAttribute("popovertarget");e=t.querySelector(`#${i}`)}return e}}export{Yt as A,J as B,ce as C,Ri as D,f as F,Li as G,A as I,q as S,Zt as W,Ne as a,de as b,ji as c,le as d,Yi as e,Ki as f,Mi as g,V as h,k as i,E as j,I as k,S as l,Z as m,R as n,Vi as o,zi as p,Hi as q,Ui as r,Oi as s,Wi as t,Ni as u,ht as v,U as w,$i as x,qi as y,Gi as z};
