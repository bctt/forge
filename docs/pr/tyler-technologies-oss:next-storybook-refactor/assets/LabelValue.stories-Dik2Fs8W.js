import{C as m,v as h,B as u,w as d,h as g,c as _,g as x}from"./constants-CNtkYrkV.js";const E=`${m}label-value`,y={EMPTY:"empty",ELLIPSIS:"ellipsis",INLINE:"inline",DENSE:"dense"},S={...y},a={elementName:E,observedAttributes:y,attributes:S},L=`<template>
  <div class="forge-label-value" part="root">
    <div class="icon" part="icon">
      <slot name="icon"></slot>
    </div>
    <div class="label" part="label">
      <slot name="label"></slot>
    </div>
    <div class="value" part="value">
      <slot name="value"></slot>
    </div>
  </div>
</template>
`,N=':host{display:inline-block;min-width:0}:host([hidden]){display:none}.forge-label-value{--_label-value-align: var(--forge-label-value-align, start);--_label-value-label-spacing: var(--forge-label-value-label-spacing, var(--forge-spacing-xxsmall, 4px));--_label-value-label-block-start-spacing: var(--forge-label-value-label-block-start-spacing, var(--_label-value-label-spacing));--_label-value-label-block-end-spacing: var(--forge-label-value-label-block-end-spacing, var(--_label-value-label-spacing));--_label-value-label-color: var(--forge-label-value-label-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)));--_label-value-icon-spacing: var(--forge-label-value-icon-spacing, var(--forge-spacing-xxsmall, 4px));--_label-value-inline-label-spacing: var(--forge-label-value-inline-label-spacing, var(--forge-spacing-xsmall, 8px));--_label-value-empty-color: var(--forge-label-value-empty-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)));--_label-value-empty-style: var(--forge-label-value-empty-style, italic)}.forge-label-value{display:grid;grid-template-columns:auto 1fr;grid-template-areas:"icon label" "icon value"}.label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .8125)));font-weight:var(--forge-typography-label2-font-weight, 400);line-height:var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label2-letter-spacing, .0096153846em);text-transform:var(--forge-typography-label2-text-transform, inherit);text-decoration:var(--forge-typography-label2-text-decoration, inherit);grid-area:label;justify-self:var(--_label-value-align);margin-block-start:var(--_label-value-label-block-start-spacing);margin-block-end:var(--_label-value-label-block-end-spacing);line-height:normal;text-align:var(--_label-value-align);color:var(--_label-value-label-color)}.value{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-body2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-body2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-font-size-scale, 1)));font-weight:var(--forge-typography-body2-font-weight, 400);line-height:var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)));letter-spacing:var(--forge-typography-body2-letter-spacing, .015625em);text-transform:var(--forge-typography-body2-text-transform, inherit);text-decoration:var(--forge-typography-body2-text-decoration, inherit);grid-area:value;display:grid;align-items:center;justify-self:var(--_label-value-align);line-height:normal;text-align:var(--_label-value-align)}.icon{display:inline-flex;grid-area:icon}::slotted([slot=icon]){margin-inline-end:var(--_label-value-icon-spacing)}:host(:is([inline],[dense])) .forge-label-value{display:flex;align-items:center}:host(:is([inline],[dense])) .label{margin-block:0;margin-inline-end:var(--_label-value-inline-label-spacing)}:host([ellipsis]) ::slotted([slot=value]){overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host([empty]) .value{color:var(--_label-value-empty-color);font-style:var(--_label-value-empty-style)}';var A=Object.defineProperty,w=Object.getOwnPropertyDescriptor,z=(e,r,l,i)=>{for(var t=i>1?void 0:i?w(r,l):r,s=e.length-1,n;s>=0;s--)(n=e[s])&&(t=(i?n(r,l,t):n(t))||t);return i&&t&&A(r,l,t),t};let b=class extends u{constructor(){super(),this._empty=!1,this._ellipsis=!1,this._inline=!1,d(this,L,N)}static get observedAttributes(){return Object.values(a.observedAttributes)}attributeChangedCallback(e,r,l){switch(e){case a.observedAttributes.EMPTY:this.empty=g(l);break;case a.observedAttributes.ELLIPSIS:this.ellipsis=g(l);break;case a.observedAttributes.INLINE:case a.observedAttributes.DENSE:this.inline=g(l);break}}get empty(){return this._empty}set empty(e){e=!!e,this._empty!==e&&(this._empty=e,this.toggleAttribute(a.attributes.EMPTY,this._empty))}get ellipsis(){return this._ellipsis}set ellipsis(e){e=!!e,this._ellipsis!==e&&(this._ellipsis=e,this.toggleAttribute(a.attributes.ELLIPSIS,this._ellipsis))}get inline(){return this._inline}set inline(e){e=!!e,this._inline!==e&&(this._inline=e,this.setAttribute(a.attributes.INLINE,String(this._inline)))}get dense(){return this.inline}set dense(e){this.inline=e}};b=z([h({name:a.elementName})],b);const p="forge-label-value",I={title:"Components/LabelValue",render:e=>_(p,e),component:p,parameters:{actions:{disable:!0}},argTypes:{...x({tagName:p})},args:{}},o={};var c,v,f;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:"{}",...(f=(v=o.parameters)==null?void 0:v.docs)==null?void 0:f.source}}};const P=["Demo"],C=Object.freeze(Object.defineProperty({__proto__:null,Demo:o,__namedExportsOrder:P,default:I},Symbol.toStringTag,{value:"Module"}));export{o as D,C as L};
