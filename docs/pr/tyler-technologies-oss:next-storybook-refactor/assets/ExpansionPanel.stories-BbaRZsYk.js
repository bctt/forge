import{x as S}from"./lit-element-Dm2J4qPi.js";import{a as L}from"./chunk-MZXVCX43-CM0pFb8Z.js";import{C as _,b as f,B as v,I as D,o as z,p as H,d as b,e as E,f as k,h as j,i as O,F as N,c as M,g as G}from"./icon-CwdXRdNp.js";const B=`${_}open-icon`,$={OPEN:"open",ORIENTATION:"orientation",ROTATION:"rotation"},F={...$},K={ORIENTATION:"vertical",ROTATION:"full"},a={elementName:B,observedAttributes:$,attributes:F,defaults:K},V=`<template>
  <span class="forge-open-icon" part="root">
    <slot>
      <forge-icon class="icon" part="icon" name="keyboard_arrow_down"></forge-icon>
    </slot>
  </span>
</template>
`,W=":host{display:inline-flex}:host([hidden]){display:none}.forge-open-icon{--_open-icon-color: var(--forge-open-icon-color, var(--forge-theme-text-high, rgba(0, 0, 0, .87)));--_open-icon-size: var(--forge-open-icon-size, 24px);--_open-icon-height: var(--forge-open-icon-height, var(--_open-icon-size));--_open-icon-width: var(--forge-open-icon-width, var(--_open-icon-size));--_open-icon-initial-rotation: var(--forge-open-icon-initial-rotation, 0);--_open-icon-open-rotation: var(--forge-open-icon-open-rotation, 180deg);--_open-icon-animation-duration: var(--forge-open-icon-animation-duration, var(--forge-animation-duration-medium4, .4s));--_open-icon-half-animation-duration: var(--forge-open-icon-half-animation-duration, var(--forge-animation-duration-short4, .2s));--_open-icon-animation-timing: var(--forge-open-icon-animation-timing, var(--forge-animation-easing-standard, cubic-bezier(.2, 0, 0, 1)))}.forge-open-icon{height:var(--_open-icon-height);width:var(--_open-icon-width);color:var(--_open-icon-color);rotate:var(--_open-icon-initial-rotation);transition:rotate var(--_open-icon-animation-duration) var(--_open-icon-animation-timing)}::slotted(forge-icon),forge-icon{--forge-icon-size: var(--_open-icon-size)}:host([open]) .forge-open-icon{rotate:var(--_open-icon-open-rotation)}:host([orientation=horizontal]) .forge-open-icon{--_open-icon-initial-rotation: var(--forge-open-icon-initial-rotation, -90deg);--_open-icon-open-rotation: var(--forge-open-icon-open-rotation, 90deg)}:host([rotation=half]) .forge-open-icon{--_open-icon-open-rotation: var(--forge-open-icon-open-rotation, -90deg);--_open-icon-animation-duration: var(--_open-icon-half-animation-duration)}:host([orientation=horizontal][rotation=half]) .forge-open-icon{--_open-icon-initial-rotation: var(--forge-open-icon-initial-rotation, -90deg);--_open-icon-open-rotation: var(--forge-open-icon-open-rotation, 0);--_open-icon-animation-duration: var(--_open-icon-half-animation-duration)}@media prefers-reduced-motion{.forge-open-icon{transition:none}}";var Y=Object.defineProperty,X=Object.getOwnPropertyDescriptor,J=(t,e,n,i)=>{for(var o=i>1?void 0:i?X(e,n):e,s=t.length-1,p;s>=0;s--)(p=t[s])&&(o=(i?p(e,n,o):p(o))||o);return i&&o&&Y(e,n,o),o};let T=class extends v{constructor(){super(),this._open=!1,this._orientation=a.defaults.ORIENTATION,this._rotation=a.defaults.ROTATION,D.define([z,H]),b(this,V,W)}static get observedAttributes(){return Object.values(a.observedAttributes)}attributeChangedCallback(t,e,n){switch(t){case a.attributes.OPEN:this.open=E(n);break;case a.attributes.ORIENTATION:this.orientation=n;break;case a.attributes.ROTATION:this.rotation=n;break}}get open(){return this._open}set open(t){t=!!t,this._open!==t&&(this._open=t,this.toggleAttribute(a.attributes.OPEN,t))}get orientation(){return this._orientation}set orientation(t){this._orientation!==t&&(this._orientation=t,this.setAttribute(a.attributes.ORIENTATION,t))}get rotation(){return this._rotation}set rotation(t){this._rotation!==t&&(this._rotation=t,this.setAttribute(a.attributes.ROTATION,t))}};T=J([f({name:a.elementName,dependencies:[k]})],T);const u=`${_}expansion-panel`,R={OPEN:"open",ORIENTATION:"orientation",ANIMATION_TYPE:"animation-type"},Q={...R,OPENING:"opening"},U={HIDDEN:"hidden"},Z={HEADER:".header",CONTENT:".content",IGNORE:":is([data-forge-ignore],[forge-ignore])",OPEN_ICON:`:is([slot=header] ${a.elementName}, ${a.elementName}[slot^=header])`},ee={TOGGLE:`${u}-toggle`,ANIMATION_COMPLETE:`${u}-animation-complete`},r={elementName:u,observedAttributes:R,attributes:Q,classes:U,selectors:Z,events:ee};class te extends j{constructor(e){super(e),this._transitionStartListener=this._onTransitionStart.bind(this),this._transitionEndListener=this._onTransitionEnd.bind(this),this._headerElement=O(this._component,r.selectors.HEADER),this._contentElement=O(this._component,r.selectors.CONTENT)}setAnimationCompleteListener(e){this._transitionCompleteListener=e,this._contentElement.addEventListener("transitionstart",this._transitionStartListener),this._contentElement.addEventListener("transitionend",this._transitionEndListener)}addHeaderListener(e,n){this._headerElement.addEventListener(e,n)}tryToggleOpenIcon(e){const n=this._component.querySelector(r.selectors.OPEN_ICON);n&&(n.open=e)}setContentVisibility(e){this._contentElement.classList.toggle(r.classes.HIDDEN,!e)}_onTransitionStart(e){e.propertyName.startsWith("grid-template")&&this.toggleHostAttribute(r.attributes.OPENING,!0)}_onTransitionEnd(e){e.propertyName.startsWith("grid-template")&&(this.toggleHostAttribute(r.attributes.OPENING,!1),this._transitionCompleteListener())}}class ne{constructor(e){this._adapter=e,this._open=!1,this._orientation="vertical",this._animationType="default",this._clickListener=this._onClick.bind(this),this._keydownListener=this._onKeydown.bind(this),this._animationCompleteListener=this._onAnimationComplete.bind(this)}initialize(){this._adapter.addHeaderListener("click",this._clickListener),this._adapter.addHeaderListener("keydown",this._keydownListener),this._adapter.setAnimationCompleteListener(this._animationCompleteListener)}_onClick(e){e.composedPath().find(i=>i.nodeType===Node.ELEMENT_NODE&&i.matches(r.selectors.IGNORE))||(e.stopPropagation(),this._toggle(),this._dispatchToggleEvent())}_onKeydown(e){(e.key===" "||e.key==="Enter")&&(e.stopPropagation(),e.preventDefault(),this._toggle(),this._dispatchToggleEvent())}_onAnimationComplete(){this._open||this._adapter.setContentVisibility(!1),this._adapter.dispatchHostEvent(new CustomEvent(r.events.ANIMATION_COMPLETE,{detail:this._open}))}_togglePanel(){this._adapter.toggleHostAttribute(r.attributes.OPEN,this._open),this._adapter.tryToggleOpenIcon(this._open),this._open&&this._adapter.setContentVisibility(!0)}_dispatchToggleEvent(){const e=new CustomEvent(r.events.TOGGLE,{detail:this._open,bubbles:!0,composed:!0});this._adapter.dispatchHostEvent(e)}_toggle(){this.open=!this.open}get open(){return this._open}set open(e){e=!!e,this._open!==e&&(this._open=e,this._togglePanel())}get orientation(){return this._orientation}set orientation(e){this._orientation!==e&&(this._orientation=e,this._adapter.setHostAttribute(r.attributes.ORIENTATION,this._orientation))}get animationType(){return this._animationType}set animationType(e){this._animationType!==e&&(this._animationType=e,this._adapter.setHostAttribute(r.attributes.ANIMATION_TYPE,this._animationType))}}const oe=`<template>
  <div class="forge-expansion-panel" part="root">
    <div class="header" part="header">
      <slot name="header"></slot>
    </div>
    <div class="content hidden" part="content">
      <div class="inner">
        <slot></slot>
      </div>
    </div>
  </div>
</template>`,ie=":host{display:block}:host([hidden]){display:none}.forge-expansion-panel{--_expansion-panel-animation-duration: var(--forge-expansion-panel-animation-duration, var(--forge-animation-duration-medium4, .4s));--_expansion-panel-animation-easing: var(--forge-expansion-panel-animation-easing, var(--forge-animation-easing-standard, cubic-bezier(.2, 0, 0, 1)))}.header{outline:none;-webkit-tap-highlight-color:transparent;cursor:pointer}.content{display:grid;grid-template-rows:0fr;transition-property:opacity,grid-template-rows;transition-duration:var(--_expansion-panel-animation-duration);transition-timing-function:var(--_expansion-panel-animation-easing);min-height:0;overflow:hidden;opacity:0}.content .inner{display:grid;grid-template-rows:1fr;overflow:hidden}.hidden{visibility:hidden}@media (prefers-reduced-motion: reduce){.content{transition:none}}:host([open]) .content{opacity:1}:host([open]:is(:not([orientation]),[orientation=vertical])) .content{grid-template-rows:1fr}:host([open][orientation=horizontal]) .content{grid-template-columns:1fr}:host([orientation=horizontal]) .forge-expansion-panel{display:grid;grid-template-columns:auto 1fr}:host([orientation=horizontal]) .content{transition-property:opacity,grid-template-columns;grid-template-rows:none;grid-template-columns:0fr}:host([animation-type=none]) .content{transition:none}";var re=Object.defineProperty,ae=Object.getOwnPropertyDescriptor,m=(t,e,n,i)=>{for(var o=i>1?void 0:i?ae(e,n):e,s=t.length-1,p;s>=0;s--)(p=t[s])&&(o=(i?p(e,n,o):p(o))||o);return i&&o&&re(e,n,o),o};let l=class extends v{static get observedAttributes(){return Object.values(r.observedAttributes)}constructor(){super(),b(this,oe,ie),this._foundation=new ne(new te(this))}connectedCallback(){this._foundation.initialize()}attributeChangedCallback(t,e,n){switch(t){case r.observedAttributes.OPEN:this.open=E(n);break;case r.observedAttributes.ORIENTATION:this.orientation=n;break;case r.observedAttributes.ANIMATION_TYPE:this.animationType=n;break}}toggle(){this.open=!this.open}};m([N()],l.prototype,"open",2);m([N()],l.prototype,"orientation",2);m([N()],l.prototype,"animationType",2);l=m([f({name:r.elementName})],l);const se=`${_}card`,q={RAISED:"raised"},pe={...q},h={elementName:se,observedAttributes:q,attributes:pe},de=`<template>
  <div class="forge-card" part="root">
    <slot></slot>
  </div>
</template>`,ce=":host{display:block}:host([hidden]){display:none}.forge-card{--_card-background: var(--forge-card-background, var(--forge-theme-surface, #ffffff));--_card-height: var(--forge-card-height, 100%);--_card-width: var(--forge-card-width, 100%);--_card-outline-color: var(--forge-card-outline-color, var(--forge-theme-outline, #e0e0e0));--_card-outline-width: var(--forge-card-outline-width, var(--forge-border-thin, 1px));--_card-outline-style: var(--forge-card-outline-style, solid);--_card-elevation: var(--forge-card-elevation, none);--_card-padding: var(--forge-card-padding, var(--forge-spacing-medium, 16px));--_card-shape: var(--forge-card-shape, var(--forge-shape-medium, 4px));--_card-overflow: var(--forge-card-overflow, hidden);--_card-raised-elevation: var(--forge-card-raised-elevation, 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12));--_card-raised-outline-width: var(--forge-card-raised-outline-width, 0)}.forge-card{background:var(--_card-background);border-color:var(--_card-outline-color);border-width:var(--_card-outline-width);border-style:var(--_card-outline-style);border-radius:var(--_card-shape);box-shadow:var(--_card-elevation);box-sizing:border-box;padding:var(--_card-padding);overflow:var(--_card-overflow);height:var(--_card-height);width:var(--_card-width);-webkit-tap-highlight-color:transparent}:host([raised]) .forge-card{--_card-elevation: var(--_card-raised-elevation);--_card-outline-width: var(--_card-raised-outline-width)}:host([no-padding]) .forge-card{--_card-padding: var(--forge-card-padding, 0)}";var le=Object.defineProperty,he=Object.getOwnPropertyDescriptor,me=(t,e,n,i)=>{for(var o=i>1?void 0:i?he(e,n):e,s=t.length-1,p;s>=0;s--)(p=t[s])&&(o=(i?p(e,n,o):p(o))||o);return i&&o&&le(e,n,o),o};let y=class extends v{constructor(){super(),this._raised=!1,b(this,de,ce)}static get observedAttributes(){return Object.values(h.observedAttributes)}attributeChangedCallback(t,e,n){switch(t){case h.attributes.RAISED:this.raised=E(n);break}}get raised(){return this._raised}set raised(t){t=!!t,this._raised!==t&&(this._raised=t,this.toggleAttribute(h.attributes.RAISED,this._raised))}};y=me([f({name:h.elementName})],y);const g="forge-expansion-panel",ge=L("forge-expansion-panel-toggle"),ue=L("forge-expansion-panel-animation-complete"),_e={title:"Components/Expansion Panel",component:g,render:t=>{const e=M(g,t),n=document.createElement("button");n.slot="header",n.textContent="Toggle",n.setAttribute("type","button"),n.setAttribute("aria-expanded","false"),n.setAttribute("aria-controls","content"),e.appendChild(n);const i=document.createElement("div");return i.id="content",i.setAttribute("role","group"),i.innerHTML=`
      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet a, minima vero perferendis, neque tempora amet qui blanditiis cumque, nulla deserunt quo veniam facere aspernatur fuga fugit? Perferendis, et eligendi?</p>
      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet a, minima vero perferendis, neque tempora amet qui blanditiis cumque, nulla deserunt quo veniam facere aspernatur fuga fugit? Perferendis, et eligendi?</p>
      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet a, minima vero perferendis, neque tempora amet qui blanditiis cumque, nulla deserunt quo veniam facere aspernatur fuga fugit? Perferendis, et eligendi?</p>
    `,e.appendChild(i),e.addEventListener("forge-expansion-panel-toggle",ge),e.addEventListener("forge-expansion-panel-animation-complete",ue),e},argTypes:{...G({tagName:g,controls:{orientation:{control:"select",options:["horizontal","vertical"]},animationType:{control:"select",options:["default","none"]}}})},args:{open:!1,orientation:"vertical",animationType:"default"}},d={},c={render:({open:t,animationType:e,orientation:n})=>S`
      <forge-card>
        <forge-expansion-panel .open=${t} .animationType=${e} .orientation=${n}>
          <div slot="header" role="button" tabindex="0" style="display: flex; justify-content: space-between;">
            <div>Header text</div>
            <forge-open-icon></forge-open-icon>
          </div>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis minus ut illum corporis incidunt quod temporibus consequatur rem! Libero rem nulla quod corporis similique consequuntur facere laborum veniam error eius.</p>
        </forge-expansion-panel>
      </forge-card>
    `};var A,x,I;d.parameters={...d.parameters,docs:{...(A=d.parameters)==null?void 0:A.docs,source:{originalSource:"{}",...(I=(x=d.parameters)==null?void 0:x.docs)==null?void 0:I.source}}};var w,C,P;c.parameters={...c.parameters,docs:{...(w=c.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: ({
    open,
    animationType,
    orientation
  }) => {
    return html\`
      <forge-card>
        <forge-expansion-panel .open=\${open} .animationType=\${animationType} .orientation=\${orientation}>
          <div slot="header" role="button" tabindex="0" style="display: flex; justify-content: space-between;">
            <div>Header text</div>
            <forge-open-icon></forge-open-icon>
          </div>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis minus ut illum corporis incidunt quod temporibus consequatur rem! Libero rem nulla quod corporis similique consequuntur facere laborum veniam error eius.</p>
        </forge-expansion-panel>
      </forge-card>
    \`;
  }
}`,...(P=(C=c.parameters)==null?void 0:C.docs)==null?void 0:P.source}}};const fe=["Demo","WithCard"],Ne=Object.freeze(Object.defineProperty({__proto__:null,Demo:d,WithCard:c,__namedExportsOrder:fe,default:_e},Symbol.toStringTag,{value:"Module"}));export{d as D,Ne as E};
